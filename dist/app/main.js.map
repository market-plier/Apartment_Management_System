{"version":3,"sources":["./src/main/angular/app/services/token-storage.service.ts","./src/main/angular/app/services/guard/isauth.guard.ts","./src/main/angular/app/services/house-voting.service.ts","./src/main/angular/app/services/manager.service.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-debt/apartment-debt.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-debt/apartment-debt.component.html","./src/main/angular/app/components/manager-operation/manager-operation-create/manager-operation-create.component.ts","./src/main/angular/app/components/manager-operation/manager-operation-create/manager-operation-create.component.html","./src/main/angular/app/models/account.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-list/communal-utilities-list.component.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-list/communal-utilities-list.component.html","./src/main/angular/app/components/report-create/report-create.component.ts","./src/main/angular/app/components/report-create/report-create.component.html","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-list/apartment-sub-bill-list.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-list/apartment-sub-bill-list.component.html","./src/main/angular/app/components/home/home.component.ts","./src/main/angular/app/components/home/home.component.html","./src/main/angular/app/services/guard/auth.guard.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-show/communal-utilities-show.component.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-show/communal-utilities-show.component.html","./src/main/angular/app/components/apartments/apartments-list/apartments.component.ts","./src/main/angular/app/components/apartments/apartments-list/apartments.component.html","./src/main/angular/app/components/dashboard-manager-bill-debt/dashboard-manager-bill-debt.component.ts","./src/main/angular/app/components/dashboard-manager-bill-debt/dashboard-manager-bill-debt.component.html","./src/main/angular/app/services/voting-option.service.ts","./src/main/angular/app/app.component.ts","./src/main/angular/app/app.component.html","./src/main/angular/app/services/communal-utility.service.ts","./src/main/angular/app/services/manager-sub-bill.service.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-create/communal-utilities-create.component.ts","./src/main/angular/app/components/communal-utilities/communal-utilities-create/communal-utilities-create.component.html","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-transfer-create/apartment-sub-bill-transfer-create.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-transfer-create/apartment-sub-bill-transfer-create.component.html","./src/main/angular/app/components/manager-operation/manager-operation-list/manager-operation-list.component.ts","./src/main/angular/app/components/manager-operation/manager-operation-list/manager-operation-list.component.html","./src/main/angular/app/components/announcements/announcements-create/announcements-create.component.ts","./src/main/angular/app/components/announcements/announcements-create/announcements-create.component.html","./src/main/angular/app/models/apartment.ts","./src/main/angular/app/services/comment.service.ts","./src/main/angular/app/models/comment.ts","./src/main/angular/app/components/nav/nav.component.ts","./src/main/angular/app/components/nav/nav.component.html","./src/main/angular/app/components/job-trigger/job-trigger.component.ts","./src/main/angular/app/components/job-trigger/job-trigger.component.html","./src/main/angular/app/components/manager-sub-bills/manager-sub-bills-dashboard/manager-sub-bills-dashboard.component.ts","./src/main/angular/app/components/manager-sub-bills/manager-sub-bills-dashboard/manager-sub-bills-dashboard.component.html","./src/main/angular/app/components/login/login.component.ts","./src/main/angular/app/components/login/login.component.html","./src/main/angular/app/components/manager-operation/manager-operation-update/manager-operation-update.component.ts","./src/main/angular/app/components/manager-operation/manager-operation-update/manager-operation-update.component.html","./src/main/angular/app/models/manager-bill.ts","./src/main/angular/app/components/apartment-operation-list/apartment-operation-list.component.ts","./src/main/angular/app/components/apartment-operation-list/apartment-operation-list.component.html","./src/main/angular/app/models/apartment-request-to-manager.ts","./src/main/angular/app/components/announcements/announcements-list/announcements-list.component.ts","./src/main/angular/app/components/announcements/announcements-list/announcements-list.component.html","./src/main/angular/app/services/guard/owner.guard.ts","./src/main/angular/app/components/apartments/apartment-info-page/apartment-info-page.component.ts","./src/main/angular/app/components/apartments/apartment-info-page/apartment-info-page.component.html","./src/main/angular/app/components/not-found/not-found.component.ts","./src/main/angular/app/components/not-found/not-found.component.html","./src/main/angular/app/models/back-end-error.ts","./src/main/angular/app/components/announcements/announcements-update/announcements-update.component.ts","./src/main/angular/app/components/announcements/announcements-update/announcements-update.component.html","./src/main/angular/app/helpers/auth.interceptor.ts","./src/main/angular/app/components/announcements/announcement-dashboard/announcement-dashboard.component.ts","./src/main/angular/app/components/announcements/announcement-dashboard/announcement-dashboard.component.html","./src/main/angular/app/services/apartment-info.service.ts","./src/main/angular/app/services/auth.service.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-sub-bill-dashboard.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-sub-bill-dashboard.component.html","./src/main/angular/app/services/report.service.ts","./src/main/angular/app/components/request/request.component.ts","./src/main/angular/app/components/request/request.component.html","./src/main/angular/app/services/manager-operation.service.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-show/apartment-sub-bill-show.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-show/apartment-sub-bill-show.component.html","./src/main/angular/app/services/request-to-manager.service.ts","./src/main/angular/app/components/apartments/apartment-registration/apartment-registration.component.ts","./src/main/angular/app/components/apartments/apartment-registration/apartment-registration.component.html","./src/main/angular/app/components/announcements/announcements-show/announcements-show.component.ts","./src/main/angular/app/components/announcements/announcements-show/announcements-show.component.html","./src/main/angular/app/components/announcements/announcements-show/comment-edit-dialog.html","./src/main/angular/app/components/manager-info-page/manager-info-page.component.ts","./src/main/angular/app/components/manager-info-page/manager-info-page.component.html","./src/main/angular/app/services/apartment-operation.service.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-payment/apartment-sub-bill-payment.component.ts","./src/main/angular/app/components/apartment-sub-bills/apartment-sub-bill-payment/apartment-sub-bill-payment.component.html","./src/main/angular/environments/environment.ts","./src/main/angular/app/app.module.ts","./src/main/angular/main.ts","./src/main/angular/app/app-routing.module.ts","./src/main/angular/app/services/announcement.service.ts","./src/main/angular/app/services/guard/manager.guard.ts","./src/main/angular/app/services/apartment-sub-bill.service.ts","./src/main/angular/app/components/manager/manager-info-update.component.ts","./src/main/angular/app/components/manager/manager-info-update.component.html","./src/main/angular/app/components/manager-sub-bills/manager-sub-bills-list/manager-sub-bills-list.component.ts","./src/main/angular/app/components/manager-sub-bills/manager-sub-bills-list/manager-sub-bills-list.component.html","./src/main/angular/app/components/apartments/manager-apartment-info-edit/apartment-info-edit.component.ts","./src/main/angular/app/components/apartments/manager-apartment-info-edit/apartment-info-edit.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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A;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,uEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,sEACI;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA;QAAA,yEACA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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {Router} from \"@angular/router\";\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenStorageService {\n    constructor( private jwtHelper: JwtHelperService) {\n    }\n\n    signOut(): void {\n        window.sessionStorage.clear();\n    }\n\n    public saveToken(token: string): void {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n\n    public getToken(): string | null {\n\n        if (this.jwtHelper.isTokenExpired(window.sessionStorage.getItem(TOKEN_KEY))) {\n            this.signOut()\n            return null;\n        }\n        return window.sessionStorage.getItem(TOKEN_KEY);\n    }\n\n\n    public getRole(): string | null {\n        if (window.sessionStorage.getItem(TOKEN_KEY)) {\n            return this.jwtHelper.decodeToken(window.sessionStorage.getItem(TOKEN_KEY)).role;\n        }\n        return null;\n    }\n\n    public getEmail(): string | null {\n        if (window.sessionStorage.getItem(TOKEN_KEY)) {\n            return this.jwtHelper.decodeToken(window.sessionStorage.getItem(TOKEN_KEY)).sub;\n        }\n    }\n\n    public getAccountId(): number | null {\n        if (window.sessionStorage.getItem(TOKEN_KEY)) {\n            return this.jwtHelper.decodeToken(window.sessionStorage.getItem(TOKEN_KEY)).accountId;\n        }\n        return null;\n    }\n\n\n    public saveUser(user: any): void {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n\n    public getUser(): any {\n        const user = window.sessionStorage.getItem(USER_KEY);\n        if (user) {\n            return JSON.parse(user);\n        }\n\n        return {};\n    }\n    isAuthenticated(): boolean {\n        return !!this.getToken()\n    }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n    RouterStateSnapshot,\r\n    UrlTree\r\n} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\n\r\n@Injectable()\r\nexport class IsAuthGuard implements CanActivate {\r\n    constructor(\r\n        private tokenService: TokenStorageService,\r\n        private router: Router,\r\n\r\n    ) {}\r\n\r\n    canActivate(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n        if (!this.tokenService.isAuthenticated()) {\r\n            return true\r\n        }\r\n        this.router.navigate(['/home']);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {HouseVoting} from \"../models/house-voting\";\nimport {BackEndError} from \"../models/back-end-error\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HouseVotingService {\n  private baseUrl = 'http://localhost:8888/announcements';\n  err: BackEndError | undefined;\n\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) {}\n\n  getHouseVotingByAnnouncementId(announcementId: number): Observable<HouseVoting> {\n    return this.http.get(`${this.baseUrl}/${announcementId}/house_voting`);\n  }\n\n  createHouseVoting(announcementId: number, houseVoting: HouseVoting): Observable<any> {\n    return this.http.post(`${this.baseUrl}/${announcementId}/house_voting`, houseVoting);\n  }\n\n  deleteHouseVoting(announcementId: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${announcementId}/house_voting`);\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let err = new BackEndError();\n    let errorMessage = '';\n    err = error.error;\n\n    // @ts-ignore\n    errorMessage = errorMessage.concat(err.errors);\n\n    this.openSnackBar(errorMessage, \"OK\");\n  }\n\n  openSnackBar(message: string, action: string) {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['snack-bar-error'];\n    config.duration = 10000;\n    this._snackBar.open(message, action, config);\n  }\n\n}\n","// @ts-ignore\r\nimport {Injectable} from \"@angular/core\";\r\n// @ts-ignore\r\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\r\n\r\n// @ts-ignore\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport {Manager} from \"../models/manager\";\r\nimport {BackEndError} from \"../models/back-end-error\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {sha256} from \"js-sha256\";\r\nimport {ManagerBill} from \"../models/manager-bill\";\r\n\r\n\r\n// @ts-ignore\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ManagerService {\r\n\r\n    private baseURL = 'http://localhost:8888/manager-info';\r\n    err: BackEndError | undefined;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getManagerInfo(): Observable<Manager>\r\n    {\r\n        return this.httpClient.get<Manager>(`${this.baseURL}/manager`)\r\n    }\r\n\r\n    updateManager(manager : Manager) : Observable<Manager> {\r\n        return this.httpClient.post(`${this.baseURL}/update-manager`, manager).pipe(\r\n            catchError(this.handleError.bind(this)));\r\n    }\r\n\r\n    updateManagerPassword(manager : Manager) {\r\n        manager.password = sha256(manager.password + \"\");\r\n        return this.httpClient.post(`${this.baseURL}/update-manager-password`, manager).pipe(\r\n            catchError(this.handleError.bind(this))\r\n        ).subscribe(data => console.log(data))\r\n    }\r\n\r\n    updateManagerBill(managerBill : ManagerBill) {\r\n        return this.httpClient.post(`${this.baseURL}/update-manager-bill`, managerBill).pipe(\r\n            catchError(this.handleError.bind(this))\r\n        ).subscribe(data => console.log(data))\r\n    }\r\n\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        let err = new BackEndError();\r\n        let errorMessage = '';\r\n        err = error.error;\r\n\r\n        // @ts-ignore\r\n        errorMessage = errorMessage.concat(err.errors);\r\n\r\n        window.alert(errorMessage);\r\n        return throwError(error);\r\n    }\r\n}","import {Component, OnInit} from '@angular/core';\nimport {ApartmentSubBill} from \"../../../../models/apartment-sub-bill\";\nimport {ApartmentSubBillService} from \"../../../../services/apartment-sub-bill.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-apartment-debt',\n    templateUrl: './apartment-debt.component.html',\n    styleUrls: ['./apartment-debt.component.scss']\n})\nexport class ApartmentDebtComponent implements OnInit {\n    colorDebt = 'red';\n    colorBalance = 'green'\n    subbills: ApartmentSubBill[] = [];\n    debt: number = 0;\n    balance: number = 0;\n\n    displayedColumns = ['Communal', 'Debt', 'Balance', 'Pay'];\n\n    constructor(public subbillsSevice: ApartmentSubBillService, private router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.subbillsSevice.getApartmentSubBillList().subscribe(\n            data => {\n                this.subbills = data\n                var j;\n                for (j in this.subbills) {\n                    this.debt = this.debt + this.subbills[j].debt;\n                    this.balance = this.balance + this.subbills[j].balance;\n                }\n            });\n    }\n\n    makePayment() {\n        this.router.navigate(['/apartment-sub-bill-payment']);\n    }\n}\n","<div class=\"container mat-elevation-z8\">\n    <table mat-table [dataSource]=\"this.subbills\">\n        <!-- Item Column -->\n        <ng-container matColumnDef=\"Communal\">\n            <th mat-header-cell class=\"header\" *matHeaderCellDef> Util</th>\n            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.communalUtility.name}} </td>\n            <td mat-footer-cell *matFooterCellDef> Total</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Balance\">\n            <th mat-header-cell class=\"header\" *matHeaderCellDef> Balance</th>\n\n            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.balance | currency}} </td>\n            <td mat-footer-cell class=\"underlined\" [style.color]='colorBalance'\n                *matFooterCellDef> {{this.balance | currency}} </td>\n        </ng-container>\n        <!-- Cost Column -->\n        <ng-container matColumnDef=\"Debt\">\n            <th mat-header-cell class=\"header\" *matHeaderCellDef> Debt</th>\n            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.debt | currency}} </td>\n            <td mat-footer-cell class=\"underlined\" [style.color]='colorDebt'\n                *matFooterCellDef> {{this.debt | currency}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Pay\">\n            <th mat-header-cell class=\"header\" *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let transaction\">\n                <div *ngIf=\"transaction.balance>transaction.debt && transaction.debt!=0\">\n\n                    <button  (click)=\"makePayment()\"   mat-raised-button  id=\"pay-btn\" color=\"accent\">\n                        <mat-icon>payment</mat-icon> Pay\n                    </button>\n                </div>\n            </td>\n            <td mat-footer-cell *matFooterCellDef> </td>\n\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ManagerOperationService} from \"../../../services/manager-operation.service\";\nimport {ManagerSubBill} from \"../../../models/manager-sub-bill\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-manager-operation-create',\n  templateUrl: './manager-operation-create.component.html',\n  styleUrls: ['./manager-operation-create.component.css']\n})\nexport class ManagerOperationCreateComponent implements OnInit {\n\n  subBills: ManagerSubBill[] = []\n  pSub: Subscription\n  form: FormGroup;\n\n  error:Subject<string>;\n  message:string\n  isCreated:boolean;\n\n\n  constructor(public managerService: ManagerOperationService,\n              private router: Router,\n              private route:ActivatedRoute,\n              private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params:Params)=>\n    {\n      if(params['addedSuccess'])\n      {\n        this.message = 'Spending added successfully'\n      }\n    })\n\n\n    this.error = null;\n\n    this.pSub = this.managerService.getAllManagerSubBill().subscribe(subBills => {\n      console.log(subBills);\n      this.subBills = subBills\n    })\n\n    this.form = new FormGroup({\n      description: new FormControl('',[Validators.required, Validators.minLength(2),Validators.maxLength(1000)]),\n      sum:new FormControl('',Validators.required),\n      subBillId:new FormControl('',Validators.required)\n    })\n\n\n  }\n  onClickSubmit() {\n    this.error = null;\n    console.log(this.form.value)\n    this.managerService.makeSpending(this.form.value).subscribe(   data => {\n      this.openSnackBar('Spending is created', 'OK');\n      this.isCreated = true;\n    },\n        error => {\n          console.log(error.error.errorCode);\n          if (error.error.errorCode===8092)\n          {\n            this.openErrorSnackBar('Insufficient funds on the balance sheet, cant create', 'OK')\n          }else\n          {\n            this.openErrorSnackBar('Cant create spending!', 'OK')\n          }\n\n        }\n    );\n\n  }\n\n\n  openSnackBar(message: string, action: string) {\n  this._snackBar.open(message, action, {\n    duration: 100000,\n  });\n  this._snackBar._openedSnackBarRef.onAction().subscribe(() => {\n    window.location.reload();\n  });\n }\n\n  openErrorSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      panelClass:['.snackBar-fail'],\n      duration: 100000,\n    });\n  }\n\n\n\n refManagerOperationList()\n {\n   this.router.navigate(['manager-operation'])\n }\n\n\n\n}\n","\n\n\n<mat-dialog-content>\n    <h2 mat-dialog-title>Make Spending</h2>\n        <form  class=\"width-dialog\" fxLayout=\"column\" [formGroup]=\"form\"  (ngSubmit) = \"onClickSubmit()\">\n            <mat-form-field>\n                <mat-label>Enter Description</mat-label>\n                <textarea formControlName=\"description\" matInput></textarea>\n                <mat-hint align=\"end\">{{form.get('description').value.length}} / 1000</mat-hint>\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('description').invalid && form.get('description').touched\">\n                <small *ngIf=\"form.get('description').errors.required\">Description is required</small>\n                <small *ngIf=\"form.get('description').errors.minlength\">Description length must be more than 1</small>\n                <small *ngIf=\"form.get('description').errors.maxlength\">Description length must be not more than 1000</small>\n            </mat-error>\n\n            <mat-form-field>\n                <mat-label>Select communal utility</mat-label>\n                <mat-select formControlName=\"subBillId\">\n                    <mat-option  *ngFor=\"let subBill of subBills\" value=\"{{subBill.subBillId}}\">Name: {{subBill.communalUtility.name}}&nbsp;  Balance: {{subBill.balance}}</mat-option>\n\n                </mat-select>\n\n            </mat-form-field>\n\n            <mat-error *ngIf=\"form.get('subBillId').invalid && form.get('subBillId').touched\">\n                <small *ngIf=\"form.get('subBillId').errors.required\">Communal utility is required</small>\n            </mat-error>\n\n            <mat-form-field>\n                <mat-label>Enter sum of spending</mat-label>\n                <input formControlName=\"sum\" min=\"1\" step=\"10\" max=\"999999999999\" type=\"number\" matInput ngModel>\n                <span matPrefix>₴&nbsp;</span>\n            </mat-form-field>\n\n            <mat-error *ngIf=\"form.get('sum').invalid && form.get('sum').touched\">\n                <small *ngIf=\"form.get('sum').errors.required\">Sum is required</small>\n            </mat-error>\n\n            <button [disabled]=\"form.invalid\" mat-raised-button type = \"submit\" color=\"primary\">\n                Make spending\n            </button>\n        </form>\n\n    </mat-dialog-content>","export class Account {\n    accountId?: number;\n    email?: String;\n    firstName?: String;\n    lastName?: String;\n    password?:String;\n    phoneNumber?: String;\n    role?: String;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {CommunalUtility} from \"../../../models/communal-utility\";\nimport {CommunalUtilityService} from \"../../../services/communal-utility.service\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {Router} from \"@angular/router\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-communal-utilities-list',\n    templateUrl: './communal-utilities-list.component.html',\n    styleUrls: ['./communal-utilities-list.component.scss']\n})\nexport class CommunalUtilitiesListComponent implements OnInit {\n    displayedColumns: string[] = ['name', 'status', 'durationType', 'deadline', 'calculation', 'coefficient'];\n    utilities: CommunalUtility[];\n    datasource: MatTableDataSource<CommunalUtility>\n    searchUtilities: CommunalUtility[];\n    myColor: 'white';\n    loading: boolean = false;\n    searchText: string = '';\n    enabled: boolean;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(private tokenStorageService: TokenStorageService,\n                private comUtilService: CommunalUtilityService,\n                private router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.getUtilities();\n\n    }\n\n    @ViewChild(MatSort) sort: MatSort;\n    private errorMessage: any;\n\n    getUser(): any {\n        return this.tokenStorageService.getUser();\n    }\n\n    getRole(): any {\n        return this.tokenStorageService.getRole();\n    }\n\n    getUtilities() {\n        this.loading = true;\n        this.comUtilService.getCommunalUtilities()\n            .subscribe((utilities) => {\n                    this.utilities = utilities;\n                    console.log(this.utilities);\n                    this.datasource = new MatTableDataSource(utilities);\n                    this.datasource.paginator = this.paginator;\n                    this.datasource.sort = this.sort;\n                    this.loading = false;\n                },\n                (error => {\n                    console.error('error caught in component')\n                    this.errorMessage = error;\n                    this.loading = false;\n\n                    throw error;\n                }));\n    }\n\n    route(id: number) {\n        this.router.navigate([`/communal-utilities/${id}`]);\n    }\n\n    filterUtilities() {\n        this.searchUtilities = this.utilities;\n        if (this.enabled)\n            this.searchUtilities = this.utilities.filter(utility => utility.status === 'Enabled');\n        if (this.searchText != null || this.searchText !== ' ')\n            console.log(this.searchText);\n        this.searchUtilities = this.searchUtilities.filter(utility => utility.name.includes(this.searchText))\n        this.datasource = new MatTableDataSource(this.searchUtilities);\n        this.datasource.paginator = this.paginator;\n        this.datasource.sort = this.sort;\n    }\n}\n","<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>\n<div [hidden]=\"utilities == null\">\n    <mat-toolbar class=\"mat-toolbar col-12\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n        <mat-card-title class=\"title-center col-2\">Communal Utilities</mat-card-title>\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <div fxLayout=\"row\">\n                <div>\n                    <mat-form-field class=\"form-field ml-4\">\n                        <mat-label>Search</mat-label>\n                        <input (ngModelChange)=\"filterUtilities()\" [(ngModel)]=\"searchText\" matInput>\n                    </mat-form-field>\n                    <button (click)=\"filterUtilities()\" mat-icon-button>\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </div>\n            </div>\n\n            <mat-checkbox (change)=\"filterUtilities()\" [(ngModel)]=\"enabled\" class=\"form-field ml-4\">Only enabled\n            </mat-checkbox>\n        </div>\n        <div class=\"col-1\">\n            <button *ngIf=\"getRole() == 'MANAGER'\" class=\"create-btn float-right\"\n                    mat-icon-button\n                    routerLink=\"create\">\n                <mat-icon>add</mat-icon>\n            </button>\n        </div>\n    </mat-toolbar>\n\n    <div class=\"mat-elevation-z8\">\n        <table [dataSource]=\"datasource\" class=\"mat-elevation-z8\" mat-table matSort text-align=\"center\">\n            <ng-container *ngIf=\"getRole() === 'MANAGER'\" matColumnDef=\"name\">\n                <th *matHeaderCellDef mat-header-cell mat-sort-header> Name</th>\n                <td *matCellDef=\"let utility\" mat-cell>\n                    <div (click)=\"route(utility.communalUtilityId)\" [matRippleColor]=\"myColor\" class=\"center\" fxFlexFill\n                         matRipple>\n                        {{utility.name}}\n                    </div>\n                </td>\n            </ng-container>\n            <ng-container *ngIf=\"getRole() === 'OWNER'\" matColumnDef=\"name\">\n                <th *matHeaderCellDef mat-header-cell mat-sort-header> Name</th>\n                <td *matCellDef=\"let utility\" mat-cell>\n                    {{utility.name}}\n                </td>\n            </ng-container>\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"status\">\n                <th *matHeaderCellDef mat-header-cell> Status</th>\n                <td *matCellDef=\"let utility\" mat-cell> {{utility.status}} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"durationType\">\n                <th *matHeaderCellDef mat-header-cell> Duration type</th>\n                <td *matCellDef=\"let utility\" mat-cell> {{utility.durationType}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"calculation\">\n                <th *matHeaderCellDef mat-header-cell> Calculation method</th>\n                <td *matCellDef=\"let utility\" mat-cell> {{utility.calculationMethod}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"coefficient\">\n                <th *matHeaderCellDef mat-header-cell> Coefficient</th>\n                <td *matCellDef=\"let utility\" mat-cell> {{utility.coefficient}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"deadline\">\n                <th *matHeaderCellDef mat-header-cell> Deadline</th>\n                <td *matCellDef=\"let utility\" mat-cell> {{utility.deadline}} </td>\n            </ng-container>\n\n            <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[10,5,20]\" showFirstLastButtons></mat-paginator>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CommunalUtilityService} from \"../../services/communal-utility.service\";\nimport {DatePipe, Location} from \"@angular/common\";\nimport {CommunalUtility} from \"../../models/communal-utility\";\nimport {ReportService} from \"../../services/report.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {Apartment} from \"../../models/apartment\";\nimport {ApartmentInfoService} from \"../../services/apartment-info.service\";\n\n@Component({\n  selector: 'app-report-create',\n  templateUrl: './report-create.component.html',\n  styleUrls: ['./report-create.component.scss']\n})\nexport class ReportCreateComponent implements OnInit {\n  utilities: CommunalUtility[];\n  formGroup1: FormGroup;\n  formGroup2: FormGroup;\n  formGroup3: FormGroup;\n  formGroup4: FormGroup;\n  formGroup5: FormGroup;\n\n  currentForm: string;\n  accountId: string;\n  apartments: Apartment[];\n  datepipe: DatePipe = new DatePipe('en-US')\n  private blob: Blob;\n\n  constructor(private route: ActivatedRoute,\n              private service: CommunalUtilityService,\n              private location: Location,\n              private reportService: ReportService,\n              private tokenStorageService: TokenStorageService,\n              private apartmentInfoService: ApartmentInfoService\n  ) {\n    this.formGroup1 = new FormGroup({\n      \"communalUtility\": new FormControl('', Validators.required),\n      \"end\": new FormControl('', Validators.required),\n      \"start\": new FormControl('', Validators.required)\n    })\n    this.formGroup2 = new FormGroup({\n      \"end\": new FormControl('', Validators.required),\n      \"start\": new FormControl('', Validators.required)\n    })\n    this.formGroup3 = new FormGroup({\n      \"communalUtility\": new FormControl('', Validators.required)\n    })\n    this.formGroup4 = new FormGroup({\n      \"communalUtility\": new FormControl('', Validators.required)\n    })\n    this.formGroup5 = new FormGroup({\n      \"communalUtility\": new FormControl('', Validators.required),\n      \"apartment\": new FormControl('', Validators.required)\n    })\n    this.currentForm = '';\n    this.accountId = this.getUserId();\n  }\n\n  ngOnInit(): void {\n    this.getUtilities();\n    if (this.getRole() !== 'OWNER')\n      this.getApartments();\n  }\n\n  getApartments(): void {\n    this.apartmentInfoService.getAllApartments().subscribe(apartments => this.apartments = apartments)\n  }\n\n  getUtilities(): void {\n    this.service.getCommunalUtilities()\n        .subscribe(utilities => this.utilities = utilities);\n  }\n\n  changeCurrentForm(form: string): void {\n    this.currentForm = form;\n  }\n\n  subscribeToGetPdf(data: Blob) {\n    this.blob = new Blob([data], {type: 'application/pdf'});\n    var downloadURL = window.URL.createObjectURL(data);\n    var link = document.createElement('a');\n    link.href = downloadURL;\n    link.download = \"report.pdf\";\n    link.click();\n  }\n\n  makeManagerOperationSpendingReportByDateAndCommunalUtility(): void {\n    let start = this.datepipe.transform(this.formGroup1.get('start').value, 'MM/dd/yyyy');\n    let end = this.datepipe.transform(this.formGroup1.get('end').value, 'MM/dd/yyyy');\n    this.reportService.makeManagerSpendingByDateCommName(\n        start,\n        end.toString(),\n        this.formGroup1.get('communalUtility').value\n    )\n        .subscribe(blob => this.subscribeToGetPdf(blob),\n            error => {\n              console.log(error)\n            });\n  }\n\n  makeManagerOperationSpendingReportByDate(): void {\n    let start = this.datepipe.transform(this.formGroup2.get('start').value, 'MM/dd/yyyy');\n    let end = this.datepipe.transform(this.formGroup2.get('end').value, 'MM/dd/yyyy');\n    this.reportService.makeManagerSpendingByDate(\n        start,\n        end\n    )\n        .subscribe(blob => this.subscribeToGetPdf(blob),\n            error => {\n              console.log(error)\n            });\n  }\n\n  makeManagerBillDeptReport(): void {\n    this.reportService.makeDeptManagerBill(this.formGroup3.get('communalUtility').value)\n        .subscribe(blob => this.subscribeToGetPdf(blob),\n            error => {\n              console.log(error)\n            });\n  }\n\n  getRole(): any {\n    return this.tokenStorageService.getRole();\n  }\n\n  getUserId(): any {\n    return this.tokenStorageService.getAccountId();\n  }\n\n  makeApartmentDeptReport(): void {\n    this.reportService.makeApartmentDebtReport(\n        this.accountId,\n        this.formGroup4.get('communalUtility').value\n    )\n        .subscribe(blob => this.subscribeToGetPdf(blob),\n            error => {\n              console.log(error)\n            });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  makeManagerApartmentDeptReport() {\n    this.reportService.makeApartmentDebtReport(\n        this.formGroup5.get('apartment').value,\n        this.formGroup5.get('communalUtility').value\n    )\n        .subscribe(blob => this.subscribeToGetPdf(blob),\n            error => {\n              console.log(error)\n            });\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"50px\">\n    <div [hidden]=\"getRole() === 'OWNER'\">\n        <mat-toolbar class=\"mat-toolbar col-12\" fxLayout=\"row wrap\">\n            <mat-card-title class=\"title-center\">Create Report</mat-card-title>\n            <div class=\"col-7\">\n                <mat-form-field class=\"form-field ml-2\">\n                    <mat-label>Select an option</mat-label>\n                    <mat-select [(value)]=\"currentForm\">\n                        <mat-option value=\"date&com\">Spending report by date and communal utility</mat-option>\n                        <mat-option value=\"date\">Spending report by date</mat-option>\n                        <mat-option value=\"bill\">Overall bill report</mat-option>\n                        <mat-option value=\"bill-apt\">Apartment bill report</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </mat-toolbar>\n    </div>\n    <div fxLayout=\"row\">\n        <div fxFlex=\"20\"></div>\n        <div fxFlex=\"60\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n            <form (ngSubmit)=\"makeManagerBillDeptReport()\" *ngIf=\"currentForm == 'bill'\" [formGroup]=\"formGroup3\"\n                  fxLayout=\"column\" xLayoutAlign=\"center\">\n                <mat-toolbar class=\"mat-toolbar\">\n                    <mat-card-title class=\"title-center\">Bill report</mat-card-title>\n                </mat-toolbar>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Communal utilities</mat-label>\n                    <mat-select formControlName=\"communalUtility\" multiple>\n                        <mat-option *ngFor=\"let stat of utilities\" [value]=\"stat.communalUtilityId\">\n                            {{stat.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error\n                        *ngIf=\"formGroup3.get('communalUtility').invalid && formGroup3.get('communalUtility').touched\">\n                    <small *ngIf=\"formGroup3.get('communalUtility').errors.required\">Communal Utility is\n                        required</small>\n                </mat-error>\n                <button [disabled]=\"!formGroup3.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n            </form>\n            <form (ngSubmit)=\"makeManagerOperationSpendingReportByDate()\" *ngIf=\"currentForm == 'date'\"\n                  [formGroup]=\"formGroup2\" fxLayout=\"column\" xLayoutAlign=\"center\">\n                <mat-toolbar class=\"mat-toolbar\">\n                    <mat-card-title class=\"title-center\">Operation Spending Report By Date</mat-card-title>\n                </mat-toolbar>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter a date range</mat-label>\n                    <mat-date-range-input [formGroup]=\"formGroup2\" [rangePicker]=\"picker\">\n                        <input formControlName=\"start\" matStartDate placeholder=\"Start date\">\n                        <input formControlName=\"end\" matEndDate placeholder=\"End date\">\n                    </mat-date-range-input>\n                    <mat-datepicker-toggle [for]=\"picker\" matSuffix></mat-datepicker-toggle>\n                    <mat-date-range-picker #picker></mat-date-range-picker>\n                    <mat-error *ngIf=\"formGroup2.controls.start.hasError('matStartDateInvalid')\">Invalid start date\n                    </mat-error>\n                    <mat-error *ngIf=\"formGroup2.controls.end.hasError('matEndDateInvalid')\">Invalid end date\n                    </mat-error>\n                </mat-form-field>\n                <button [disabled]=\"!formGroup2.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n            </form>\n            <form (ngSubmit)=\"makeManagerOperationSpendingReportByDateAndCommunalUtility()\"\n                  *ngIf=\"currentForm == 'date&com'\" [formGroup]=\"formGroup1\" fxLayout=\"column\" xLayoutAlign=\"center\">\n                <mat-toolbar class=\"mat-toolbar\">\n                    <mat-card-title class=\"title-center\">\n                        Operation Spending Report By Date And CommunalUtility\n                    </mat-card-title>\n                </mat-toolbar>\n                <span class=\"example-spacer\"></span>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Communal utilities</mat-label>\n                    <mat-select formControlName=\"communalUtility\" multiple>\n                        <mat-option *ngFor=\"let stat of utilities\" [value]=\"stat.communalUtilityId\">\n                            {{stat.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error\n                        *ngIf=\"formGroup1.get('communalUtility').invalid && formGroup1.get('communalUtility').touched\">\n                    <small *ngIf=\"formGroup1.get('communalUtility').errors.required\">Communal Utility is\n                        required</small>\n                </mat-error>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter a date range</mat-label>\n                    <mat-date-range-input [formGroup]=\"formGroup1\" [rangePicker]=\"picker\">\n                        <input formControlName=\"start\" matStartDate placeholder=\"Start date\">\n                        <input formControlName=\"end\" matEndDate placeholder=\"End date\">\n                    </mat-date-range-input>\n                    <mat-datepicker-toggle [for]=\"picker\" matSuffix></mat-datepicker-toggle>\n                    <mat-date-range-picker #picker></mat-date-range-picker>\n                    <mat-error *ngIf=\"formGroup1.controls.start.hasError('matStartDateInvalid')\">Invalid start date\n                    </mat-error>\n                    <mat-error *ngIf=\"formGroup1.controls.end.hasError('matEndDateInvalid')\">Invalid end date\n                    </mat-error>\n                </mat-form-field>\n                <button [disabled]=\"!formGroup1.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n            </form>\n            <form (ngSubmit)=\"makeManagerApartmentDeptReport()\" *ngIf=\"currentForm==='bill-apt'\"\n                  [formGroup]=\"formGroup5\"\n                  fxLayout=\"column\" xLayoutAlign=\"center\">\n                <mat-toolbar class=\"mat-toolbar\">\n                    <mat-card-title class=\"title-center\">\n                        Create Bill Report For Apartment\n                    </mat-card-title>\n                </mat-toolbar>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Communal utilities</mat-label>\n                    <mat-select formControlName=\"communalUtility\" multiple>\n                        <mat-option *ngFor=\"let stat of utilities\" [value]=\"stat.communalUtilityId\">\n                            {{stat.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error\n                        *ngIf=\"formGroup5.get('communalUtility').invalid && formGroup5.get('communalUtility').touched\">\n                    <small *ngIf=\"formGroup5.get('communalUtility').errors.required\">Communal Utility is\n                        required</small>\n                </mat-error>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Apartment</mat-label>\n                    <mat-select formControlName=\"apartment\">\n                        <mat-option *ngFor=\"let stat of apartments\" [value]=\"stat.accountId\">\n                            {{stat.apartmentNumber}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error *ngIf=\"formGroup5.get('apartment').invalid && formGroup5.get('apartment').touched\">\n                    <small *ngIf=\"formGroup5.get('apartment').errors.required\">Apartment is required</small>\n                </mat-error>\n                <button [disabled]=\"!formGroup5.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n            </form>\n            <form (ngSubmit)=\"makeApartmentDeptReport()\" *ngIf=\"getRole() == 'OWNER'\" [formGroup]=\"formGroup4\"\n                  fxLayout=\"column\" xLayoutAlign=\"center\">\n                <mat-toolbar class=\"mat-toolbar\">\n                    <mat-card-title class=\"title-center\">\n                        Create report\n                    </mat-card-title>\n                </mat-toolbar>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Communal utilities</mat-label>\n                    <mat-select formControlName=\"communalUtility\" multiple>\n                        <mat-option *ngFor=\"let stat of utilities\" [value]=\"stat.communalUtilityId\">\n                            {{stat.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error\n                        *ngIf=\"formGroup4.get('communalUtility').invalid && formGroup4.get('communalUtility').touched\">\n                    <small *ngIf=\"formGroup4.get('communalUtility').errors.required\">Communal Utility is\n                        required</small>\n                </mat-error>\n                <button [disabled]=\"!formGroup4.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n            </form>\n        </div>\n        <div fxFlex=\"20\"></div>\n    </div>\n</div>\n\n\n\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {ApartmentSubBill} from \"../../../models/apartment-sub-bill\";\r\nimport {ApartmentSubBillService} from \"../../../services/apartment-sub-bill.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'app-apartment-sub-bill-list',\r\n    templateUrl: './apartment-sub-bill-list.component.html',\r\n    styleUrls: ['./apartment-sub-bill-list.component.scss']\r\n})\r\nexport class ApartmentSubBillListComponent implements OnInit {\r\n    apartmentSubBills?: ApartmentSubBill[];\r\n    currentApartmentSubBill?: ApartmentSubBill;\r\n    currentIndex: number = -1;\r\n\r\n    constructor(private apartmentSubBillService: ApartmentSubBillService,\r\n                private router: Router) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.retrieveApartmentSubBills();\r\n    }\r\n\r\n    retrieveApartmentSubBills(): void {\r\n        this.apartmentSubBillService.getApartmentSubBillList()\r\n            .subscribe(\r\n                data => {\r\n                    this.apartmentSubBills = data;\r\n                    console.log(data);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    refreshList(): void {\r\n        this.retrieveApartmentSubBills();\r\n        this.currentApartmentSubBill = undefined;\r\n        this.currentIndex = -1;\r\n    }\r\n\r\n    setActiveApartmentSubBill(apartmentSubBill: ApartmentSubBill, index: number): void {\r\n        this.currentApartmentSubBill = apartmentSubBill;\r\n        this.currentIndex = index;\r\n    }\r\n\r\n    redirectToApartmentTransferCreate(): void{\r\n        this.router.navigate([`/apartment-sub-bill-transfer-create`])\r\n    }\r\n\r\n    redirectToApartmentPayment(): void{\r\n        this.router.navigate([`/apartment-sub-bill-payment`])\r\n    }\r\n\r\n}","<mat-toolbar class=\"mat-toolbar col-12\">\r\n    <div id=\"title\">\r\n    <mat-card-title class=\"title-center col-2\" id=\"titlename\">YOUR SUBBILLS</mat-card-title>\r\n    </div>\r\n    <div id=\"toolbar\">\r\n        <button mat-raised-button class=\"float-right\" id=\"transfer\"\r\n                           (click)=\"redirectToApartmentTransferCreate()\"\r\n        >\r\n            Transfer money\r\n        </button>\r\n        <button mat-raised-button class=\"float-right\" id=\"pay\"\r\n                           (click)=\"redirectToApartmentPayment()\"\r\n        >\r\n            Pay for communal utilities\r\n        </button>\r\n    </div>\r\n</mat-toolbar>\r\n<div id=\"back\">\r\n    <div class=\"container\">\r\n        <div class=\"row row-cols-md-2 row-cols-sm-1 row-cols-lg-2 row-cols-xs-1  g-4\">\r\n            <div *ngFor=\"let apartmentSubBill of apartmentSubBills\" class=\"card col-4\">\r\n                <mat-card class=\"example-card\">\r\n                    <mat-card-header>\r\n                        <mat-card-title>{{apartmentSubBill.communalUtility.name}}</mat-card-title>\r\n                        <mat-card-title class=\"money\"> Balance: {{apartmentSubBill.balance}}</mat-card-title>\r\n                        <mat-card-title class=\"money\"> Debt: {{apartmentSubBill.debt}}</mat-card-title>\r\n                    </mat-card-header>\r\n                    <mat-card-content>\r\n                        <hr>\r\n                        <ul class=\"ul\">\r\n                            <li>Calculation method: {{apartmentSubBill.communalUtility.calculationMethod}}</li>\r\n                            <li>Deadline: {{apartmentSubBill.communalUtility.deadline}}</li>\r\n                            <li>Status: {{apartmentSubBill.communalUtility.status}}</li>\r\n                        </ul>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n</div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from \"../../services/token-storage.service\";\n\nexport interface Tile {\n    cols: number;\n    rows: number;\n    title: string;\n}\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    tiles: Tile[] = [\n        {title: 'Subbills', cols: 8, rows: 2},\n        {title: 'Announcements', cols: 3, rows: 2},\n        {title: 'Debt of Manager Sub Bill', cols: 2, rows: 2},\n        {title: 'Pay Your debts', cols: 5, rows: 2},\n    ];\n\n\n    constructor(public tokenService: TokenStorageService) {\n\n    }\n\n    ngOnInit(): void {\n        if (this.tokenService.getRole() == 'MANAGER') {\n            this.tiles[2].cols = 5;\n        }\n    }\n\n}","<div class=\"grid-container\">\n    <h1 class=\"mat-h1\">Dashboard</h1>\n    <mat-grid-list cols=\"8\" rowHeight=\"200px\">\n\n        <mat-grid-tile [colspan]=\"tiles[0].cols\" [rowspan]=\"tiles[0].rows\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title *ngIf=\"tokenService.getRole()=='OWNER'\">\n                        {{tiles[0].title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                        <app-apartment-sub-bill-dashboard *ngIf=\"tokenService.getRole()=='OWNER'\"></app-apartment-sub-bill-dashboard>\n                        <app-manager-sub-bills-dashboard *ngIf=\"tokenService.getRole()=='MANAGER'\"></app-manager-sub-bills-dashboard>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n\n        <mat-grid-tile [colspan]=\"tiles[1].cols\" [rowspan]=\"tiles[1].rows\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{tiles[1].title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <app-announcement-dashboard></app-announcement-dashboard>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n\n        <mat-grid-tile *ngIf=\"tokenService.getRole()=='OWNER'\" [colspan]=\"tiles[3].cols\" [rowspan]=\"tiles[3].rows\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{tiles[3].title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <app-apartment-debt></app-apartment-debt>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n\n        <mat-grid-tile [colspan]=\"tiles[2].cols\" [rowspan]=\"tiles[2].rows\" *ngIf=\"tokenService.getRole()=='MANAGER'\">\n            <mat-card class=\"dashboard-card debt-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{tiles[2].title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                                   <app-dashboard-manager-bill-debt></app-dashboard-manager-bill-debt>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n\n    </mat-grid-list>\n\n</div>\n","import {Injectable} from \"@angular/core\";\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n    RouterStateSnapshot,\r\n    UrlTree\r\n} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private tokenService: TokenStorageService,\r\n        private router: Router,\r\n\r\n    ) {}\r\n\r\n    canActivate(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n        if (this.tokenService.isAuthenticated()) {\r\n            return true\r\n        }\r\n            this.tokenService.signOut()\r\n            this.router.navigate(['/login'], {\r\n                queryParams: {\r\n                    loginAgain: true\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import {Component, OnInit} from '@angular/core';\nimport {CommunalUtilityService} from \"../../../services/communal-utility.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CommunalUtility} from \"../../../models/communal-utility\";\nimport {Location} from '@angular/common';\n\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-communal-utilities-show',\n  templateUrl: './communal-utilities-show.component.html',\n  styleUrls: ['./communal-utilities-show.component.css']\n})\nexport class CommunalUtilitiesShowComponent implements OnInit {\n  calculationMethods: string[] = [\n    'SquareMeters', 'PeopleCount', 'Floor'\n  ];\n  calc: string = 'PeopleCount';\n  utility: CommunalUtility;\n  status: string[] = [\n    'Enabled', 'Disabled'\n  ];\n  dyr_type: string[] = [\n    'Temporary', 'Constant'\n  ];\n  form: FormGroup;\n  id: number;\n  minDate: Date;\n\n  constructor(private route: ActivatedRoute,\n              private service: CommunalUtilityService,\n              private location: Location\n  ) {\n    this.minDate = new Date();\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.getUtility();\n  }\n\n  initForm(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(255)]),\n      coefficient: new FormControl('', [Validators.required,\n        Validators.min(0.00001),\n        Validators.max(1000)]),\n      status: new FormControl(''),\n      calculationMethod: new FormControl(''),\n      durationType: new FormControl(''),\n      deadline: new FormControl('', Validators.required)\n    })\n  }\n\n  getUtility(): void {\n    this.id = +this.route.snapshot.paramMap.get('id');\n    this.service.getCommunalUtility(this.id)\n        .subscribe(utility => {\n          this.utility = utility;\n          console.log(this.utility);\n          this.form.get('status').setValue(this.utility.status);\n          this.form.get('durationType').setValue(this.utility.durationType);\n          this.form.get('calculationMethod').setValue(this.utility.calculationMethod);\n          this.form.get('name').setValue(this.utility.name);\n          this.form.get('coefficient').setValue(this.utility.coefficient);\n          this.form.get('deadline').setValue(this.utility.deadline);\n        });\n  }\n  save(): void {\n    const communalUtility = {\n      ...this.form.value,\n      communalUtilityId: this.id,\n    };\n\n    this.service.updateCommunalUtility(communalUtility)\n        .subscribe(() => this.goBack(),\n            (error => {\n              console.error('error caught in component')\n\n              throw error;\n            }));\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div class=\"p-3\" fxFlex=\"60\" fxFlexFill fxFlexOffset=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <mat-card>\n        <form (ngSubmit)=\"save()\" [formGroup]=\"form\" fxLayout=\"column\" xLayoutAlign=\"center\">\n            <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput name=\"name\"\n                />\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('name').invalid && form.get('name').touched\">\n                <small *ngIf=\"form.get('name').errors.required\">Name is required</small>\n                <small *ngIf=\"form.get('name').errors.minlength\">Name length must be more than 1</small>\n            </mat-error>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Status</mat-label>\n                <mat-select [value]=\"utility.status\" formControlName=\"status\">\n                    <mat-option *ngFor=\"let stat of status\" value=\"{{stat}}\"\n                    >\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Coefficient</mat-label>\n                <input formControlName=\"coefficient\" matInput name=\"coefficient\"\n                />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Duration type</mat-label>\n                <mat-select [value]=\"utility.durationType\" formControlName=\"durationType\">\n                    <mat-option *ngFor=\"let stat of dyr_type\" value=\"{{stat}}\">\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Calculation Methods</mat-label>\n                <mat-select [value]=\"utility.calculationMethod\" formControlName=\"calculationMethod\">\n                    <mat-option *ngFor=\"let stat of calculationMethods\" value=\"{{stat}}\">\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Deadline</mat-label>\n                <input [matDatepicker]=\"picker\" [min]=\"minDate\" formControlName=\"deadline\"\n                       matInput>\n                <mat-datepicker-toggle [for]=\"picker\" matSuffix>{{utility.deadline}}</mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-error *ngIf=\"form.get('deadline').hasError('required')\">\n                    Valid date required.\n                </mat-error>\n            </mat-form-field>\n            <button [disabled]=\"!   form.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n        </form>\n    </mat-card>\n</div>\n","import {Apartment} from \"../../../models/apartment\";\nimport {ApartmentInfoService} from \"../../../services/apartment-info.service\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {FormControl} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {map, startWith,} from \"rxjs/operators\";\n\n\n@Component({\n    selector: 'app-apartments',\n    templateUrl: './apartments.component.html',\n    styleUrls: ['./apartments.component.scss']\n})\nexport class ApartmentsComponent implements OnInit {\n    apartments?: Apartment[] = [];\n    searchValue?: Number;\n    floors?;\n    selectedFloor?: Number;\n    myControl = new FormControl();\n    options: Number[] = [];\n    filteredOptions: Observable<Number[]>;\n    loading: boolean = false;\n\n    constructor(private apartmentInfoService: ApartmentInfoService, private router: Router\n        , private _snackBar: MatSnackBar) {\n    }\n\n    getAllApartments() {\n        this.loading = true;\n        this.apartmentInfoService.getAllApartments().subscribe(\n            data => {\n                this.apartments = data;\n                this.floors = this.uniqueArray(this.apartments.map(item => item.floor));\n                this.options = this.apartments.map(item => item.apartmentNumber);\n                this.loading=false;\n            }\n        );\n    }\n\n    uniqueArray(ar) {\n        var j = {};\n\n        ar.forEach(function (v) {\n            j[v + '::' + typeof v] = v;\n        });\n\n        return Object.keys(j).map(function (v) {\n            return j[v];\n        });\n    }\n\n    ngOnInit(): void {\n        this.getAllApartments();\n        this.filteredOptions = this.myControl.valueChanges\n            .pipe(\n                startWith(''),\n                map(value => this._filter(value))\n            );\n    }\n\n    private _filter(value: Number): Number[] {\n        if (this.options != null && value != null) {\n            return this.options.filter(option => option.toString().includes(value.toString()));\n        }\n    }\n\n\n    getApartment() {\n        this.loading=true;\n        if (this.searchValue != null) {\n            this.apartmentInfoService.getApartmentByApartmentNumber(this.searchValue).subscribe(\n                data => {\n                    this.apartments = [];\n                    this.apartments[0] = data;\n                    this.loading=false;\n                },\n                error => {\n                    this.openSnackBar(\"No apartment was found\", \"Input another value\");\n                }\n            );\n        }\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n\n    getAllApartmentsByFloor() {\n        this.loading=true;\n        if (this.selectedFloor != null && this.selectedFloor > 0) {\n            this.apartmentInfoService.getAllApartmentsByFloor(this.selectedFloor).subscribe(\n                data => {\n                    this.apartments = data;\n                    this.loading=false;\n                },\n                error => {\n                    this.openSnackBar(\"No apartments on this floor\", \"Choose another one\");\n                }\n            );\n        }\n        if (this.selectedFloor == -1) {\n            this.getAllApartments();\n        }\n    }\n\n    apartmentInfo(id: Number) {\n        this.router.navigate(['/apartment', {id: id}]);\n    }\n\n\n}\n","\n<mat-toolbar class=\"mat-toolbar col-12\">\n    <mat-card-title class=\"title-center col-2\">APARTMENTS</mat-card-title>\n\n    <mat-form-field class=\"form-field\">\n        <mat-label>Apartment number</mat-label>\n        <input type=\"number\" min=1 [(ngModel)]=\"searchValue\"\n               aria-label=\"Number\"\n               matInput\n               [formControl]=\"myControl\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                {{option}}\n            </mat-option>\n        </mat-autocomplete>\n        <button mat-button *ngIf=\"searchValue\" matSuffix mat-icon-button aria-label=\"Clear\"\n                (click)=\"searchValue=null; getAllApartments()\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <button mat-icon-button (click)=\"getApartment()\">\n        <mat-icon>search</mat-icon>\n    </button>\n\n\n    <mat-form-field class=\"form-field\">\n        <mat-label>Floor</mat-label>\n        <mat-select [(value)]=\"selectedFloor\">\n            <mat-option [value]=\"-1\">All</mat-option>\n            <mat-option *ngFor=\"let floor of floors\" [value]=\"floor\">\n                {{floor}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <button mat-icon-button (click)=\"getAllApartmentsByFloor()\">\n        <mat-icon>filter_list</mat-icon>\n    </button>\n\n\n    <div class=\"col-1\">\n        <button mat-icon-button class=\"create-btn float-right\"\n                routerLink=\"/apartments/create\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </div>\n</mat-toolbar>\n\n<div class=\"container\">\n    <div class=\"row row-cols-md-2 row-cols-sm-1 row-cols-lg-3 row-cols-xs-1 cols-1 g-4\">\n        <div *ngFor=\"let apartment of apartments\" class=\"card col-4\">\n\n            <mat-card class=\"example-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"res-circle \">\n                        <div class=\"circle-txt\">\n                            {{apartment.apartmentNumber}}\n                        </div>\n                    </div>\n                    <mat-card-title>{{apartment.firstName}}  {{apartment.lastName}}</mat-card-title>\n                    <mat-card-subtitle> Email: {{apartment.email}}</mat-card-subtitle>\n                    <mat-card-subtitle> Phone: {{apartment.phoneNumber}}</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <hr>\n                    <ul class=\"ul\">\n                        <li>Floor: {{apartment.floor}}</li>\n                        <li>Square meters: {{apartment.squareMetres}}</li>\n                        <li>People count: {{apartment.peopleCount}}</li>\n                    </ul>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button class=\"more-btn\"><a (click)=\"apartmentInfo(apartment.accountId)\"\n                                                           class=\"btn btn-outlined btn-black text-muted more-button\">\n                        <mat-icon>perm_identity</mat-icon>\n                        <small>MORE</small></a> <span class=\"vl ml-3\"></span></button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ManagerSubBillService} from \"../../services/manager-sub-bill.service\";\nimport {ManagerSubBill} from \"../../models/manager-sub-bill\";\nimport {ApartmentSubBill} from \"../../models/apartment-sub-bill\";\n\n\nclass single {\n    name?: String;\n    value?: Number;\n}\n\n@Component({\n  selector: 'app-dashboard-manager-bill-debt',\n  templateUrl: './dashboard-manager-bill-debt.component.html',\n  styleUrls: ['./dashboard-manager-bill-debt.component.css']\n})\n\n\nexport class DashboardManagerBillDebtComponent implements OnInit {\n\n    subbills: ApartmentSubBill[] = [];\n    balance: number = 0;\n\n// options\n    gradient: boolean = true;\n    showLegend: boolean = true;\n    showLabels: boolean = true;\n    isDoughnut: boolean = false;\n    legendPosition: string = 'below';\n    maxChars = 30;\n    title = \"Debt\";\n    single: any[];\n    view: any[] = [800, 260];\n\n    billMap: Map<ManagerSubBill, number> = new Map<ManagerSubBill, number>();\n    sumDebt: number=0;\n    constructor(private managerSubBillService: ManagerSubBillService) {\n\n    }\n\n    ngOnInit(): void {\n        this.managerSubBillService.getManagerSubBillsDebt().subscribe(\n            response => {\n\n                var i = 0;\n                var single: single[] = [];\n                Object.keys(response).forEach(key => {\n\n                        this.billMap.set(JSON.parse(key), response[key]);\n                        single[i] = {name: JSON.parse(key).communalUtility.name, value: response[key] }\n\n                        this.sumDebt +=response[key];\n\n                        i++;\n                    }\n                )\n                console.log(single)\n                console.log(this.billMap)\n                console.log(this.sumDebt)\n                Object.assign(this, {single});\n\n            },\n\n            error => {\n                console.log(error)\n            }\n\n            )\n\n    }\n\n\n    onResize(event) {\n        if (event.target.innerWidth > 1000) {\n            this.view = [700, 280];\n        } else if (event.target.innerWidth < 1000 && event.target.innerWidth > 700) {\n            this.view = [500, 250];\n            this.maxChars = 15;\n        } else {\n            this.view = [300, 150];\n            this.maxChars = 10;\n        }\n        console.log(event.target.innerWidth);\n    }\n\n\n\n    onSelect(data): void {\n        console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n    }\n\n    onActivate(data): void {\n        console.log('Activate', JSON.parse(JSON.stringify(data)));\n    }\n\n    onDeactivate(data): void {\n        console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n    }\n}\n","<div class=\"container main-div\">\n    <ngx-charts-pie-chart\n            (window:resize)=\"onResize($event)\"\n            [view]=\"view\"\n            [results]=\"single\"\n            [gradient]=\"gradient\"\n            [legendPosition]=\"legendPosition\"\n            [labels]=\"showLabels\"\n            [doughnut]=\"isDoughnut\"\n            [legend]=\"showLegend\"\n            [scrollLeft]=\"true\"\n            [legendTitle]=\"title+' '+sumDebt\"\n            [maxLabelLength]=\"maxChars\"\n            (select)=\"onSelect($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n    >\n    </ngx-charts-pie-chart>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable} from 'rxjs';\nimport {VotingOption} from \"../models/voting-option\";\nimport {BackEndError} from \"../models/back-end-error\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class VotingOptionService {\n    private baseUrl = 'http://localhost:8888/announcements';\n    err: BackEndError | undefined;\n\n    constructor(private http: HttpClient, private _snackBar: MatSnackBar) {}\n\n    createVotingOption(announcementId: number, votingOption: VotingOption): Observable<any> {\n        return this.http.post(`${this.baseUrl}/${announcementId}/house_voting/voting_options`, votingOption);\n    }\n\n    getVotingOption(announcementId: number): Observable<VotingOption> {\n        return this.http.get(`${this.baseUrl}/${announcementId}/house_voting/voting_options/get_vote`);\n    }\n\n    addVote(announcementId: number, votingOptionId: number): Observable<any> {\n        return this.http.post(`${this.baseUrl}/${announcementId}/house_voting/voting_options/${votingOptionId}/add_vote`, null);\n    }\n\n    handleError(error: HttpErrorResponse) {\n        let err = new BackEndError();\n        let errorMessage = '';\n        err = error.error;\n\n        // @ts-ignore\n        errorMessage = errorMessage.concat(err.errors);\n\n        this.openSnackBar(errorMessage, \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config);\n    }\n}\n","\nimport {Component, OnInit} from \"@angular/core\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n}\n","<app-nav></app-nav>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CommunalUtility} from \"../models/communal-utility\";\nimport {Observable, of, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommunalUtilityService {\n\n    httpOptions = {\n        headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n\n    private utilitiesUrl = 'http://localhost:8888/communal-utilities';\n\n    constructor(private _snackBar: MatSnackBar,\n                private http: HttpClient) {\n    }\n\n\n    getCommunalUtilities(): Observable<CommunalUtility[]> {\n        return this.http.get<CommunalUtility[]>(this.utilitiesUrl)\n            .pipe(\n                catchError((err) => {\n                    console.log('error caught in service')\n                    console.error(err);\n                    this.openSnackBar(err.error.errors, 'OK')\n                    return throwError(err);    //Rethrow it back to component\n                }));\n  }\n\n  getCommunalUtility(id: number): Observable<CommunalUtility> {\n    const url = `${this.utilitiesUrl}/${id}`;\n      return this.http.get<CommunalUtility>(url).pipe(\n          catchError((err) => {\n              console.log('error caught in service')\n              console.error(err);\n              this.openSnackBar(err.error.errors, 'OK')\n              return throwError(err);    //Rethrow it back to component\n          }));\n  }\n\n  updateCommunalUtility(communalUtility: CommunalUtility): Observable<any> {\n      return this.http.put(this.utilitiesUrl, communalUtility, this.httpOptions).pipe(\n          catchError((err) => {\n              console.log(err)\n              console.error(err.message);\n              this.openSnackBar(err.error.errors, 'OK')\n              return throwError(err);    //Rethrow it back to component\n          }));\n  }\n\n  addCommunalUtility(communalUtility: CommunalUtility): Observable<CommunalUtility> {\n      return this.http.post<CommunalUtility>(this.utilitiesUrl, communalUtility, this.httpOptions).pipe(\n          catchError((err) => {\n              console.log('error caught in service')\n              console.error(err);\n              this.openSnackBar(err.error.errors, 'OK')\n              return throwError(err);    //Rethrow it back to component\n          })\n      );\n  }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            this.openSnackBar('Can\\'t ' + operation, 'OK')\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {BackEndError} from \"../models/back-end-error\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {ManagerSubBill} from \"../models/manager-sub-bill\";\nimport {ApartmentSubBill} from \"../models/apartment-sub-bill\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerSubBillService {\n  private baseURL = 'http://localhost:8888/manager-sub-bill';\n  private urlGetManagerSubBillsDebt = 'http://localhost:8888/manager-sub-bill/get-manager-sub-bill-debt';\n  err: BackEndError | undefined;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getManagerSubBillByCommunalUtilityId(communalUtilityId: Number): Observable<Object> {\n    return this.httpClient.get(`${this.baseURL}/get-by-communal/?communalUtilityId=${communalUtilityId}`);\n  }\n\n  getManagerSubBill(managerSubBillId: Number): Observable<ManagerSubBill> {\n    return this.httpClient.get(`${this.baseURL}/get/${managerSubBillId}`).pipe(\n        catchError(this.handleError.bind(this))\n    );\n  }\n\n  getManagerSubBillsDebt()\n  {\n    return this.httpClient.get(this.urlGetManagerSubBillsDebt);\n  }\n\n\n  getAllManagerSubBills(): Observable<ManagerSubBill[]> {\n    return this.httpClient.get<ManagerSubBill[]>(`${this.baseURL}/get`).pipe(\n        catchError(this.handleError.bind(this))\n    );\n  }\n\n  getManagerSubBillByCommunalName(id: String): Observable<ManagerSubBill>{\n    return this.httpClient.get<ManagerSubBill>(`${this.baseURL}/get-by-communal-name/${id}`);\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let err = new BackEndError();\n    let errorMessage = '';\n    err = error.error;\n\n    // @ts-ignore\n    errorMessage = errorMessage.concat(err.errors);\n\n    window.alert(errorMessage);\n    return throwError(error);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CommunalUtilityService} from \"../../../services/communal-utility.service\";\nimport {Location} from '@angular/common';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-communal-utilities-create',\n    templateUrl: './communal-utilities-create.component.html',\n    styleUrls: ['./communal-utilities-create.component.css']\n})\nexport class CommunalUtilitiesCreateComponent implements OnInit {\n    calculationMethods: string[] = [\n        'SquareMeters', 'PeopleCount', 'Floor'\n    ];\n    form: FormGroup;\n    minDate: Date;\n    status: string[] = [\n        'Enabled', 'Disabled'\n    ];\n    dyr_type: string[] = [\n        'Temporary', 'Constant'\n    ];\n\n    constructor(private route: ActivatedRoute,\n                private service: CommunalUtilityService,\n                private location: Location\n    ) {\n        this.initForm();\n    }\n\n    ngOnInit(): void {\n    }\n\n    initForm(): void {\n        this.form = new FormGroup({\n            name: new FormControl('', [Validators.required,\n                Validators.minLength(2),\n                Validators.maxLength(255)]),\n            coefficient: new FormControl('', [Validators.required,\n                Validators.min(0.00001),\n                Validators.max(1000)]),\n            status: new FormControl('', Validators.required),\n            calculationMethod: new FormControl('', Validators.required),\n            durationType: new FormControl('', Validators.required),\n            deadline: new FormControl('', Validators.required)\n        })\n    }\n\n    add(): void {\n        const communalUtility = {\n            ...this.form.value,\n        };\n        this.service.addCommunalUtility(communalUtility)\n            .subscribe(() => this.goBack());\n    }\n\n    goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"p-3\" fxFlex=\"60\" fxFlexFill fxFlexOffset=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <mat-card>\n        <form (ngSubmit)=\"add()\" [formGroup]=\"form\" fxLayout=\"column\" xLayoutAlign=\"center\">\n            <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput name=\"name\"\n                />\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('name').invalid && form.get('name').touched\">\n                <small *ngIf=\"form.get('name').errors.required\">Name is required</small>\n                <small *ngIf=\"form.get('name').errors.minlength\">Name length must be more than 1</small>\n            </mat-error>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Status</mat-label>\n                <mat-select formControlName=\"status\">\n                    <mat-option *ngFor=\"let stat of status\" value=\"{{stat}}\">\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('status').invalid && form.get('status').touched\">\n                <small *ngIf=\"form.get('status').errors.required\">Status is required</small>\n            </mat-error>\n            <mat-form-field>\n                <mat-label>Coefficient</mat-label>\n                <input formControlName=\"coefficient\" matInput name=\"coefficient\"\n                />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Duration type</mat-label>\n                <mat-select formControlName=\"durationType\">\n                    <mat-option *ngFor=\"let stat of dyr_type\" value=\"{{stat}}\">\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('durationType').invalid && form.get('durationType').touched\">\n                <small *ngIf=\"form.get('durationType').errors.required\">Status is required</small>\n            </mat-error>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Calculation Methods</mat-label>\n                <mat-select formControlName=\"calculationMethod\">\n                    <mat-option *ngFor=\"let stat of calculationMethods\" value=\"{{stat}}\">\n                        {{stat}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('calculationMethod').invalid && form.get('calculationMethod').touched\">\n                <small *ngIf=\"form.get('calculationMethod').errors.required\">Status is required</small>\n            </mat-error>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Deadline</mat-label>\n                <input [matDatepicker]=\"picker\" [min]=\"minDate\" formControlName=\"deadline\"\n                       matInput>\n                <mat-datepicker-toggle [for]=\"picker\" matSuffix></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-error *ngIf=\"form.get('deadline').hasError('required')\">\n                    Valid date required.\n                </mat-error>\n            </mat-form-field>\n            <button [disabled]=\"!form.valid\" color=\"primary\" mat-flat-button type=\"submit\">Submit</button>\n        </form>\n    </mat-card>\n</div>\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {ApartmentSubBillService} from \"../../../services/apartment-sub-bill.service\";\r\nimport {ApartmentOperation} from \"../../../models/apartment-operation\";\r\nimport {ApartmentSubBill} from \"../../../models/apartment-sub-bill\";\r\nimport {Router} from \"@angular/router\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n    selector: 'app-apartment-sub-bill-transfer-create',\r\n    templateUrl: './apartment-sub-bill-transfer-create.component.html',\r\n    styleUrls: ['./apartment-sub-bill-transfer-create.component.css']\r\n})\r\nexport class ApartmentSubBillTransferCreateComponent implements OnInit {\r\n    apartmentSubBills?: ApartmentSubBill[];\r\n    fromApartmentSubBill: string;\r\n    toApartmentSubBill: string;\r\n    sum: number;\r\n\r\n    ngOnInit() {\r\n        this.retrieveApartmentSubBills();\r\n    }\r\n\r\n    constructor(private apartmentSubBillService: ApartmentSubBillService,\r\n                private router: Router, private _snackBar: MatSnackBar) {\r\n    }\r\n\r\n    retrieveApartmentSubBills(): void {\r\n        this.apartmentSubBillService.getApartmentSubBillList()\r\n            .subscribe(\r\n                data => {\r\n                    this.apartmentSubBills = data;\r\n                    console.log(data);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    transferCreate(): void {\r\n        if (this.sum == undefined) {\r\n            this.sum = 0;\r\n        }\r\n        if (this.fromApartmentSubBill == this.toApartmentSubBill) {\r\n            this.openSnackBar('SubBills are identical, select another', '');\r\n        } else {\r\n            this.apartmentSubBillService.createApartmentSubBillTransfer([this.fromApartmentSubBill, this.toApartmentSubBill, this.sum.toString()])\r\n                .subscribe(\r\n                    response => {\r\n                        this.openSnackBar('Transfer successful', '');\r\n                        this.redirectToApartmentSubBillList();\r\n                        console.log(response);\r\n                    },\r\n                    error => {\r\n                        console.log(error);\r\n                        this.openSnackBar(error.error.message, '');\r\n                    });\r\n        }\r\n    }\r\n\r\n    openSnackBar(message: string, action: string) {\r\n        this._snackBar.open(message, action, {\r\n            duration: 10000,\r\n        });\r\n    }\r\n\r\n    redirectToApartmentSubBillList(): void {\r\n        this.router.navigate([`/apartment-sub-bills`])\r\n    }\r\n\r\n}","<mat-toolbar class=\"mat-toolbar \">\r\n    <mat-card-title class=\"title-center\">Transfer</mat-card-title>\r\n</mat-toolbar>\r\n    <div id=\"back\">\r\n        <mat-card id=\"card\">\r\n            <form id=\"apartment_sub_bills\">\r\n                    <div>\r\n                        <div class=\"row\">\r\n                        <div class=\"text\">From:</div>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Choose From</mat-label>\r\n                                <mat-select\r\n                                        id=\"from\"\r\n                                        [(ngModel)]=\"fromApartmentSubBill\"\r\n                                        name=\"from\">\r\n                                    <mat-option\r\n                                            *ngFor=\"let apartmentSubBill of\r\n                                            apartmentSubBills\r\n                                            let i = index\"\r\n                                            value=\"{{apartmentSubBill.communalUtility.name}}\"\r\n                                    >\r\n                                        {{apartmentSubBill.communalUtility.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"text\">To:</div>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Choose To</mat-label>\r\n                                <mat-select\r\n                                        id=\"to\"\r\n                                        [(ngModel)]=\"toApartmentSubBill\"\r\n                                        name=\"to\">\r\n                                    <mat-option\r\n                                            *ngFor=\"let apartmentSubBill of\r\n                                            apartmentSubBills\r\n                                            let i = index\"\r\n                                            value=\"{{apartmentSubBill.communalUtility.name}}\"\r\n                                    >\r\n                                        {{apartmentSubBill.communalUtility.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                <div class=\"input\">\r\n                    <mat-form-field>\r\n                        <mat-label>Sum</mat-label>\r\n                        <input matInput\r\n                               id=\"sum\"\r\n                               type=\"number\"\r\n                               [(ngModel)]=\"sum\"\r\n                               name=\"sum\"\r\n                        min=\"0\"/>\r\n                    </mat-form-field>\r\n                <button mat-raised-button color=\"primary\"\r\n                        (click)=\"transferCreate()\"\r\n                >\r\n                    Transfer\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n    </div>","import { Component, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {ManagerOperation} from \"../../../models/manager-operation\";\nimport {ManagerOperationService} from \"../../../services/manager-operation.service\";;\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {CommunalUtility} from \"../../../models/communal-utility\";\nimport {DatePipe} from \"@angular/common\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ManagerOperationCreateComponent} from \"../manager-operation-create/manager-operation-create.component\";\n\n\n\n@Component({\n  selector: 'app-manager-operation-list',\n  templateUrl: './manager-operation-list.component.html',\n  styleUrls: ['./manager-operation-list.component.scss'],\n})\nexport class ManagerOperationListComponent implements OnInit {\n\n  operations: ManagerOperation[] = []\n  oSub: Subscription\n  hidden: boolean = false;\n  id:number;\n  managerSubBillId:number;\n  form: FormGroup;\n  utility:FormGroup;\n  displayedColumns: string[] = ['position', 'description', 'sum', 'communalUtility', 'balance','createdAt', 'operation'];\n  dateStart: String;\n  dateEnd: String;\n  dataSource = new MatTableDataSource<ManagerOperation>(this.operations);\n  communals: CommunalUtility[] = []\n  pSub: Subscription\n  description: String;\n  sum: number;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl()\n  });\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private managerService: ManagerOperationService,private datePipe: DatePipe,private _snackBar: MatSnackBar,private dialog: MatDialog) {\n  }\n\n\n\n  ngOnInit(): void {\n\n\n    this.dataSource = new MatTableDataSource<ManagerOperation>(this.operations);\n\n\n    this.form = new FormGroup({\n      sum:new FormControl('',[Validators.required]),\n      description:new FormControl('',[Validators.required,Validators.minLength(2), Validators.maxLength(1000)]),\n      operationId: new FormControl(''),\n      managerSubBillId: new FormControl('')\n    })\n\n    this.utility = new FormGroup({\n      communalUtilityId: new FormControl('',[Validators.required])\n    })\n\n\n    this.pSub = this.managerService.getAllCommunalUtility().subscribe(communal => {\n      this.communals = communal\n    })\n\n    this.dateEnd =  this.datePipe.transform(Date.now()+ ( 3600 * 1000 * 24),'MM/dd/yyyy');\n    this.dateStart =  this.datePipe.transform(Date.now() - ( 3600 * 1000 * 24),'MM/dd/yyyy');\n\n\n    this.geDataByDateRange(this.dateStart, this.dateEnd)\n    }\n\n\n\n\n\n\n  dateRangeChange(dateRangeStart, dateRangeEnd) {\n    this.dateStart = dateRangeStart;\n    this.dateEnd = dateRangeEnd;\n    if (this.utility.invalid && (this.range.valid || (this.dateStart !=null && this.dateEnd !=null))) {\n      this.geDataByDateRange(this.dateStart, this.dateEnd)\n    }\n    this.filterManagerOperation()\n  }\n\n\n  openCreateSpending()\n  {\n   this.dialog.open(ManagerOperationCreateComponent);\n  }\n\n    geDataByDateRange(start, end)\n  {\n    console.log(start)\n    this.oSub = this.managerService.getAllByDate(start, end).subscribe(operations => {\n      this.dataSource.data = operations;\n      console.log(operations)\n      this.dataSource.paginator = this.paginator;\n    },\n    error => {\n      console.log(error);\n    }\n    )\n  }\n\n  updateButton(operationId:number, managerSubBill:number)\n  {\n      this.managerSubBillId = managerSubBill;\n      this.id = operationId;\n      this.hidden = true;\n  }\n\n  setSum(sum)\n  {\n    this.sum = sum;\n    this.form.get('sum').setValue(sum);\n\n  }\n  setDescription(description)\n  {\n    this.description = description;\n    this.form.get('description').setValue(description);\n  }\n\n\n\n  isHidden(operationId:number): boolean {\n    return operationId == this.id && this.hidden == true;\n  }\n\n  cancel()\n  {\n    this.id = 0;\n    this.hidden = false;\n\n  }\n\n  onSubmit():void {\n    this.form.controls['operationId'].setValue(this.id);\n    this.form.controls['managerSubBillId'].setValue(this.managerSubBillId);\n\n    console.log(this.form.value)\n    console.log(this.range.valid)\n    console.log(this.utility.invalid && (this.range.valid || (this.dateStart !=null && this.dateEnd !=null)))\n    if (this.description!=this.form.get('description').value || this.sum != this.form.get('sum').value)\n    {\n      this.managerService.updateSpending(this.form.value).subscribe(\n          res => {\n            this.dateRangeChange(this.dateStart, this.dateEnd);\n          },\n          error => {\n            if (error.error.errorCode===8092)\n            {\n              this.openErrorSnackBar('Insufficient funds on the balance sheet, cant update', 'OK')\n            }else if (error.error.errorCode===143)\n            {\n              this.openErrorSnackBar('Not Found Sub Bill', 'OK')\n            }\n            else\n            {\n              this.openErrorSnackBar('Cant update spending!', 'OK')\n            }\n          }\n\n      )\n      this.cancel()\n    }\n  }\n\n\n  openErrorSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      panelClass:['snackBar-fail'],\n      duration: 100000,\n    });\n  }\n\n\n\n\n  filterManagerOperation()\n  {\n\n    if (this.range.invalid && this.utility.valid)\n    {\n      this.oSub = this.managerService.filterByCommunalUtility(this.utility.value).subscribe(operations => {\n        console.log(operations)\n        this.operations = operations\n        this.dataSource = new MatTableDataSource<ManagerOperation>(this.operations);\n        this.dataSource.paginator = this.paginator;\n      })\n    }\n    if (this.range.valid && this.utility.valid) {\n      console.log(this.utility.value)\n      console.log(this.range.value)\n\n      this.oSub = this.managerService.filterByDateAndCommunalUtility(this.utility.value, this.dateStart, this.dateEnd).subscribe(operations => {\n        console.log(operations)\n        this.operations = operations\n        this.dataSource = new MatTableDataSource<ManagerOperation>(this.operations);\n        this.dataSource.paginator = this.paginator;\n      })\n    }\n  }\n\n\n  paginateHide()\n  {\n    return this.dataSource.data.length>0\n  }\n\n\n\n\n}\n","\n\n    <mat-toolbar class=\"mat-toolbar col-12\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n        <mat-card-title class=\"title-center col-2\">Manager Operations</mat-card-title>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <div fxLayout=\"row\">\n\n\n                <form >\n                    <mat-form-field [formGroup]=\"range\" class=\"form-field ml-4\">\n                        <mat-label>Enter a date range</mat-label>\n                        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                            <input required matStartDate formControlName=\"start\" placeholder=\"Start date\" #dateRangeStart>\n                            <input required matEndDate formControlName=\"end\" placeholder=\"End date\"  #dateRangeEnd (dateChange)=\"dateRangeChange(dateRangeStart.value, dateRangeEnd.value)\">\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker ></mat-date-range-picker>\n\n                        <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n                        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n\n                    </mat-form-field>\n\n                    <mat-form-field [formGroup]=\"utility\" class=\"form-field ml-4\">\n                        <mat-label>Select communal utility</mat-label>\n\n                        <mat-select formControlName=\"communalUtilityId\"  multiple>\n                            <mat-option  *ngFor=\"let communal of communals\"  value=\"{{communal.communalUtilityId}}\">{{communal.name}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <button mat-button class=\"find-button\" (click)=\"filterManagerOperation()\"><i class=\"fas fa-search\"></i></button>\n                </form>\n            </div>\n\n\n        </div>\n\n\n\n        <div class=\"col-1\">\n            <button (click)=\"openCreateSpending()\" mat-icon-button class=\"create-btn float-right\"><mat-icon>add</mat-icon></button>\n        </div>\n\n    </mat-toolbar>\n\n\n\n<div class=\"container-fluid p-5\">\n    <div class=\"row\">\n\n\n\n\n    <h1 [hidden]=\"dataSource.data.length\">No data, please enter date or communal utility</h1>\n    <div class=\"col-md-12\" [hidden]=\"!dataSource.data.length\">\n\n        <div class=\"mat-elevation-z8\" >\n            <form [formGroup]=\"form\" (ngSubmit) = \"onSubmit()\">\n            <table mat-table [dataSource]=\"dataSource\" >\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"position\">\n                    <th mat-header-cell *matHeaderCellDef>№</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.operationId}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"description\" >\n                    <th mat-header-cell *matHeaderCellDef> Description </th>\n                    <ng-container *matCellDef=\"let element\">\n                    <td mat-cell [hidden]=\"isHidden(element.operationId)\"> {{(element.description.length>10) ? ((element.description | slice:0:10)+'...' ) : element.description}} </td>\n                        <td mat-cell [hidden]=\"!isHidden(element.operationId)\"> <textarea matInput matAutosizeMinRows=2 class=\"color-border\"  [value]=\"element.description\"\n                                                                                          formControlName=\"description\"></textarea> </td>\n                        <input hidden formControlName=\"managerSubBillId\" [value]=\"element.managerSubBill.subBillId\" type=\"text\" >\n                    </ng-container>\n\n                </ng-container>\n\n                <!-- Weight Column -->\n                <ng-container  matColumnDef=\"sum\">\n                    <th mat-header-cell *matHeaderCellDef> Sum</th>\n                    <ng-container *matCellDef=\"let element; let i = index\">\n                    <td mat-cell [hidden]=\"isHidden(element.operationId)\"> {{element.sum}} </td>\n                    <td mat-cell [hidden]=\"!isHidden(element.operationId)\" > <input class=\"color-border-input\" min=\"0\"\n                                                                                    type=\"number\"\n                                                                                    formControlName=\"sum\"></td>\n                    </ng-container>\n                </ng-container>\n\n\n                    <ng-container matColumnDef=\"communalUtility\">\n                        <th mat-header-cell *matHeaderCellDef> Communal Utility </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.managerSubBill.communalUtility.name}} </td>\n                    </ng-container>\n\n                <ng-container matColumnDef=\"balance\">\n                    <th mat-header-cell *matHeaderCellDef> Balance </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.managerSubBill.balance}}</td>\n                </ng-container>\n\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"createdAt\">\n                    <th mat-header-cell *matHeaderCellDef> Created at </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.createdAt | date:'yyyy-MM-dd, HH:mm:ss ' }} </td>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"operation\">\n                    <th mat-header-cell *matHeaderCellDef> Operation </th>\n                    <ng-container *matCellDef=\"let element\">\n                    <td mat-cell>\n                        <button type=\"button\" [hidden]=\"isHidden(element.operationId)\"\n                                (click)=\"updateButton(element.operationId,element.managerSubBill.subBillId);\n                                         setSum(element.sum);\n                                         setDescription(element.description)\" mat-button>\n                            <i class=\"fas fa-edit\"></i></button>\n\n                        <button [disabled]=\"form.invalid\" [hidden]=\"!isHidden(element.operationId)\" type = \"submit\" mat-button>Send</button>\n                        <button type=\"button\" [hidden]=\"!isHidden(element.operationId)\" (click)=\"cancel()\" mat-button>🗙</button>\n                    </td>\n                    </ng-container>\n                </ng-container>\n\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n            </table>\n            </form>\n            <div [hidden] = \" !paginateHide() \" >\n            <mat-paginator  [pageSizeOptions]=\"[10, 20]\" showFirstLastButtons></mat-paginator>\n            </div>\n        </div>\n    </div>\n    </div>\n\n\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Announcement} from \"../../../models/announcement\";\nimport {AnnouncementService} from \"../../../services/announcement.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {HouseVotingService} from \"../../../services/house-voting.service\";\nimport {VotingOptionService} from \"../../../services/voting-option.service\";\nimport {HouseVoting} from \"../../../models/house-voting\";\nimport {VotingOption} from \"../../../models/voting-option\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n    selector: 'app-announcements-create',\n    templateUrl: './announcements-create.component.html',\n    styleUrls: ['./announcements-create.component.css']\n})\nexport class AnnouncementsCreateComponent implements OnInit {\n    announcementFormGroup: FormGroup;\n    announcement: Announcement = {\n        title: '',\n        body: '',\n        isOpened: false,\n    };\n\n    votingFormGroup: FormGroup;\n    hasVoting: boolean = false;\n    houseVoting: HouseVoting = {\n        title: ''\n    };\n    maxVotingCount: number = 10;\n    minVotingCount: number = 2;\n    currVotingCount: number = this.minVotingCount;\n\n    constructor(private announcementService: AnnouncementService,\n                private houseVotingService: HouseVotingService,\n                private votingOptionService: VotingOptionService,\n                private router: Router,\n                private _snackBar: MatSnackBar) {}\n\n    counter(i: number) {\n        return new Array(i);\n    }\n\n    public noWhitespaceValidator(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n\n    ngOnInit(): void {\n        this.announcementFormGroup = new FormGroup({\n            title: new FormControl('',[\n                Validators.required,\n                this.noWhitespaceValidator,\n                Validators.minLength(2),\n                Validators.maxLength(255)\n            ]),\n            body:new FormControl('',Validators.maxLength(1023)),\n            isOpened:new FormControl('',Validators.required)\n        })\n\n        this.votingFormGroup = new FormGroup({\n            title: new FormControl('',[\n                Validators.required,\n                this.noWhitespaceValidator,\n                Validators.minLength(2),\n                Validators.maxLength(255)\n            ]),\n        })\n\n        for (let i = 0; i < this.currVotingCount; i++) {\n            this.votingFormGroup.addControl(\n                'name' + i,\n                new FormControl('',[\n                    Validators.required,\n                    this.noWhitespaceValidator,\n                    Validators.minLength(2),\n                    Validators.maxLength(255)\n                ])\n            )\n        }\n\n        console.log(this.votingFormGroup);\n    }\n\n    saveAnnouncement(): void {\n        this.announcementService.createAnnouncement(this.announcement)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    if (this.hasVoting) {\n                        this.houseVoting.announcement = response;\n                        this.saveHouseVoting(response.announcementId);\n                    }\n                    else {\n                        this.router.navigateByUrl('announcements');\n                    }\n                    this.openSnackBar('Announcement is created', 'OK');\n                },\n                error => {\n                    console.log(error);\n                });\n    };\n\n    addVotingOptionControl() {\n        if (this.currVotingCount < this.maxVotingCount) {\n            this.votingFormGroup.addControl(\n                'name' + this.currVotingCount++,\n                new FormControl('',[\n                    Validators.required,\n                    Validators.minLength(2),\n                    Validators.maxLength(255)\n                ])\n            )\n        }\n\n    }\n\n    deleteVotingOptionControl() {\n        if (this.currVotingCount > this.minVotingCount) {\n            this.votingFormGroup.removeControl('name' + (--this.currVotingCount));\n        }\n\n    }\n\n    saveHouseVoting(announcementId: number): void {\n        this.houseVotingService.createHouseVoting(announcementId, this.houseVoting)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    for (let i = 0; i < this.currVotingCount; ++i) {\n                        let votingOption: VotingOption = {\n                            name: this.votingFormGroup.value['name'+ i],\n                            houseVoting: response\n                        };\n\n                        this.saveVotingOption(announcementId, votingOption);\n                    }\n\n                    this.router.navigateByUrl('announcements');\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    saveVotingOption(announcementId: number, votingOption:VotingOption): void {\n        console.log(votingOption);\n        this.votingOptionService.createVotingOption(announcementId, votingOption)\n            .subscribe(\n                response => {\n                    console.log(response);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n}\n","<div class=\"p-3\" fxFlex=\"60\" fxFlexOffset=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\" fxFlexFill>\n    <mat-card >\n        <mat-card-header>\n            <mat-card-title>Announcement Create</mat-card-title>\n        </mat-card-header>\n        <mat-vertical-stepper linear=\"true\" #stepper>\n            <mat-step [stepControl]=\"announcementFormGroup\">\n                <form xLayoutAlign=\"center\" fxLayout=\"column\"\n                      [formGroup]=\"announcementFormGroup\">\n\n                    <ng-template matStepLabel>Announcement info</ng-template>\n                    <mat-form-field>\n                        <mat-label>Title</mat-label>\n                        <input matInput type=\"text\"\n                               formControlName=\"title\"\n                               [(ngModel)]=\"announcement.title\"\n                        />\n                    </mat-form-field>\n\n                    <mat-error *ngIf=\"announcementFormGroup.get('title').invalid && announcementFormGroup.get('title').touched\">\n                        <small *ngIf=\"announcementFormGroup.get('title').errors.required\">Title is required<br></small>\n                        <small *ngIf=\"announcementFormGroup.get('title').errors.whitespace\">Title must be filled<br></small>\n                        <small *ngIf=\"announcementFormGroup.get('title').errors.minlength\">Title length must be more than 1<br></small>\n                        <small *ngIf=\"announcementFormGroup.get('title').errors.maxlength\">Title length must be less than 256<br></small>\n                    </mat-error>\n\n                    <mat-form-field>\n                        <mat-label>Body</mat-label>\n                        <textarea matInput\n                                  formControlName=\"body\"\n                                  rows=\"8\"\n                                  [(ngModel)]=\"announcement.body\"\n                        >\n                </textarea>\n                    </mat-form-field>\n\n                    <mat-error *ngIf=\"announcementFormGroup.get('body').invalid && announcementFormGroup.get('body').touched\">\n                        <small *ngIf=\"announcementFormGroup.get('body').errors.maxlength\">Body length must be less than 1024<br></small>\n                    </mat-error>\n\n                    <mat-checkbox formControlName=\"isOpened\" [(ngModel)]=\"announcement.isOpened\">\n                        Open for Comments\n                    </mat-checkbox>\n\n                    <mat-error *ngIf=\"announcementFormGroup.get('isOpened').invalid && announcementFormGroup.get('isOpened').touched\">\n                        <small *ngIf=\"announcementFormGroup.get('isOpened').errors.required\">isOpened is required<br></small>\n                    </mat-error>\n\n                    <div>\n                        <button mat-flat-button [disabled]=\"announcementFormGroup.invalid\"  color=\"primary\" matStepperNext>Next</button>\n                    </div>\n                </form>\n            </mat-step>\n            <mat-step [stepControl]=\"hasVoting? votingFormGroup : null\">\n                <ng-template matStepLabel>Voting creation</ng-template>\n                <mat-checkbox [(ngModel)]=\"hasVoting\">\n                    Has Voting\n                </mat-checkbox>\n\n                <form *ngIf=\"hasVoting\" [formGroup]=\"votingFormGroup\">\n                    <mat-form-field>\n                        <mat-label>Title</mat-label>\n                        <input matInput type=\"text\"\n                               formControlName=\"title\"\n                               [(ngModel)]=\"houseVoting.title\"\n                        />\n                    </mat-form-field>\n\n                    <mat-error *ngIf=\"votingFormGroup.get('title').invalid && votingFormGroup.get('title').touched\">\n                        <small *ngIf=\"votingFormGroup.get('title').errors.required\">Title is required<br></small>\n                        <small *ngIf=\"votingFormGroup.get('title').errors.whitespace\">Title must be filled<br></small>\n                        <small *ngIf=\"votingFormGroup.get('title').errors.minlength\">Title length must be more than 1<br></small>\n                        <small *ngIf=\"votingFormGroup.get('title').errors.maxlength\">Title length must be less than 256<br></small>\n                    </mat-error>\n\n                    <p>Voting Options:</p>\n                    <div  *ngFor=\"let item of counter(currVotingCount); let i = index\">\n                        <mat-form-field>\n                            <mat-label>{{i+1}}. Name</mat-label>\n                            <input matInput type=\"text\"\n                                   formControlName=\"name{{i}}\"\n                            />\n                        </mat-form-field>\n\n                        <mat-error *ngIf=\"votingFormGroup.get('name'+i).invalid && votingFormGroup.get('name'+i).touched\">\n                            <small *ngIf=\"votingFormGroup.get('name'+i).errors.required\">Name is required<br></small>\n                            <small *ngIf=\"votingFormGroup.get('name'+i).errors.whitespace\">Name must be filled<br></small>\n                            <small *ngIf=\"votingFormGroup.get('name'+i).errors.minlength\">Name length must be more than 1<br></small>\n                            <small *ngIf=\"votingFormGroup.get('name'+i).errors.maxlength\">Name length must be less than 256<br></small>\n                        </mat-error>\n                    </div>\n                    <button mat-icon-button color=\"primary\"\n                            [disabled]=\"currVotingCount>=maxVotingCount\"\n                            (click)=\"addVotingOptionControl()\">\n                        <mat-icon>add</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"primary\"\n                            [disabled]=\"currVotingCount<=minVotingCount\"\n                            (click)=\"deleteVotingOptionControl()\">\n                        <mat-icon>remove</mat-icon>\n                    </button>\n                </form>\n\n                <div>\n                    <button mat-button matStepperPrevious>Back</button>\n                    <button mat-flat-button [disabled]=\"hasVoting && votingFormGroup.invalid\"  color=\"primary\" matStepperNext>Next</button>\n                </div>\n            </mat-step>\n            <mat-step>\n                <ng-template matStepLabel>Done</ng-template>\n                <p>Announcement has been successfully filled.</p>\n                <div>\n                    <button mat-button matStepperPrevious>Back</button>\n                    <button mat-flat-button color=\"primary\" (click)=\"saveAnnouncement()\">Submit</button>\n                </div>\n            </mat-step>\n        </mat-vertical-stepper>\n    </mat-card>\n\n</div>\n","import {Account} from \"./account\";\n\nexport class Apartment extends Account {\n    apartmentNumber?: number;\n    squareMetres?: number;\n    floor?:number;\n    peopleCount?: number;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Comment} from \"../models/comment\";\nimport {BackEndError} from \"../models/back-end-error\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentService {\n    private baseUrl = 'http://localhost:8888/comment/';\n    err: BackEndError | undefined;\n\n    constructor(private http: HttpClient, private _snackBar: MatSnackBar) {}\n\n    createComment(comment: Comment): Observable<any> {\n        return this.http.post(this.baseUrl, comment);\n    }\n\n    updateComment(comment: Comment): Observable<any> {\n        return this.http.put(this.baseUrl, comment);\n    }\n\n    deleteComment(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}${id}`);\n    }\n\n    handleError(error: HttpErrorResponse) {\n        let err = new BackEndError();\n        let errorMessage = '';\n        err = error.error;\n\n        // @ts-ignore\n        errorMessage = errorMessage.concat(err.errors);\n\n        this.openSnackBar(errorMessage, \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config);\n    }\n}\n","import {Apartment} from \"./apartment\";\n\nexport class Comment {\n    commentId?: number;\n    body?: String;\n    createdAt?: Date;\n    apartment?: Apartment;\n}\n","import {Component} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map, shareReplay} from 'rxjs/operators';\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: './nav.component.html',\n    styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n        .pipe(\n            map(result => result.matches),\n            shareReplay()\n        );\n\n    constructor(private breakpointObserver: BreakpointObserver,\n                private tokenStorageService: TokenStorageService, private router: Router\n    ) {\n    }\n\n    role?: string;\n    isLoggedIn = false;\n    isOpen = false;\n    username?: string;\n\n    ngOnInit(): void {\n        this.isLoggedIn = this.tokenStorageService.isAuthenticated();\n\n        if (this.isLoggedIn) {\n            const user = this.tokenStorageService.getUser();\n            this.role = user.role;\n            this.username = user.username;\n        }\n\n    }\n\n    getIsLoggedIn() {\n        this.ngOnInit();\n        if (!this.isLoggedIn && this.router.url !== '/login') {\n            this.tokenStorageService.signOut()\n            this.router.navigate(['/login'])\n        }\n        return this.isLoggedIn;\n    }\n\n    logout(): void {\n        this.tokenStorageService.signOut();\n        this.isLoggedIn = false;\n        this.isOpen = false;\n        window.location.reload();\n        this.redirectPage();\n    }\n\n    redirectPage(): void {\n        this.router.navigate(['/login/']);\n    }\n\n    editAccountPage(){\n        if (this.role == 'MANAGER') {\n            this.router.navigate(['manager-info/update', {id: this.tokenStorageService.getAccountId()}]);\n        }\n        if (this.role == 'OWNER') {\n            this.router.navigate(['apartments/update/:id', {id: this.tokenStorageService.getAccountId()}]);\n        }\n    }\n\n    goToAccountPage() {\n        if (this.role == 'MANAGER') {\n            this.router.navigate(['/manager-info']);\n        }\n        if (this.role == 'OWNER') {\n            this.router.navigate(['/apartment', {id: this.tokenStorageService.getAccountId()}]);\n        }\n    }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n                 [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n                 [mode]=\"(isHandset$ | async) ? 'push' : 'side'\"\n                 [opened]=\"false\">\n        <div>\n            <mat-toolbar *ngIf=\"getIsLoggedIn()\">\n                <img src=\"assets/svg/apartment_main.svg\" class=\"img-logo\" alt=\"Apt\" >\n            </mat-toolbar>\n            <mat-nav-list style=\" margin-top:20px;\">\n                <a mat-list-item class=\"hover-link\" routerLink=\"/home\">Home</a>\n                <a mat-list-item class=\"hover-link\" routerLink=\"/apartment-sub-bills\">Subbills</a>\n                <a mat-list-item class=\"hover-link\" routerLink=\"/announcements\">Announcements</a>\n                <a *ngIf=\"role != 'MANAGER'\" class=\"hover-link\" mat-list-item\n                   routerLink=\"/request-to-manager\">Request</a>\n                <a *ngIf=\"role == 'MANAGER'\" class=\"hover-link\" mat-list-item routerLink=\"/reports\">Reports</a>\n                <a *ngIf=\"role == 'OWNER'\" class=\"hover-link\" mat-list-item routerLink=\"/reports\">Report</a>\n                <a *ngIf=\"role == 'MANAGER'\" class=\"hover-link\" mat-list-item routerLink=\"/apartments\">Apartments</a>\n                <a *ngIf=\"role == 'MANAGER'\" class=\"hover-link\" mat-list-item\n                   routerLink=\"/manager-operation\">Spending</a>\n                <a class=\"hover-link\" mat-list-item routerLink=\"/communal-utilities\">Communal utilities</a>\n                <a *ngIf=\"role == 'MANAGER'\" class=\"hover-link\" mat-list-item routerLink=\"/apartment-operation\">Apartment\n                    Operation</a>\n            </mat-nav-list>\n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar color=\"primary\">\n            <button\n                    type=\"button\"\n                    aria-label=\"Toggle sidenav\"\n                    mat-icon-button\n                    (click)=\"drawer.toggle()\" *ngIf=\"getIsLoggedIn()\">\n\n                <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n            </button>\n\n            <span class=\"navbar-text\">Apartments Management</span>\n\n            <mat-icon *ngIf=\"getIsLoggedIn()\" class=\"mat-icon-account\" [matMenuTriggerFor]=\"menu\">account_circle\n            </mat-icon>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"goToAccountPage()\">My account</button>\n                <button mat-menu-item (click)=\"editAccountPage()\">Edit</button>\n            </mat-menu>\n\n            <button mat-raised-button *ngIf=\"getIsLoggedIn()\" (click)=\"logout()\">LogOut</button>\n        </mat-toolbar>\n\n        <div class=\"site\">\n            <div class=\"content\">\n                <router-outlet></router-outlet>\n            </div>\n\n            <footer class=\"page-footer\">\n                <div class=\"footer-copyright text-center py-3\">© 2021 Copyright:\n                    <a href=\"https://odessa.edu-netcracker.com/\">BestTeamEver</a>\n                </div>\n            </footer>\n        </div>\n\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import {Component, OnInit} from '@angular/core';\nimport {BackEndError} from \"../../models/back-end-error\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n\n@Component({\n    selector: 'app-job-trigger',\n    templateUrl: './job-trigger.component.html',\n    styleUrls: ['./job-trigger.component.css']\n})\nexport class JobTriggerComponent implements OnInit {\n\n    ngOnInit(): void {\n    }\n\n    private baseURL = 'http://localhost:8888/trigger';\n    err: BackEndError | undefined;\n\n    constructor(private httpClient: HttpClient, private _snackBar: MatSnackBar) {\n    }\n\n    debtPaymentTrigger() {\n        this.httpClient.get(`${this.baseURL}/debtPaymentJobTrigger`).subscribe(\n            data=> this.openSnackBar(\"Triggered\",\"OK\"));\n    }\n\n\n    debtNotificationTrigger() {\n        this.httpClient.get(`${this.baseURL}/debtNotificationJobTrigger`).subscribe(\n            data=> this.openSnackBar(\"Triggered\",\"OK\"));\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config\n        );\n    }\n}\n","<div fxLayoutAlign=\"center center\" fxFlexFill>\n        <button class=\"button-1\" (click)=\"debtPaymentTrigger()\">Debt payment Trigger</button>\n        <button class=\"button-1\" (click)=\"debtNotificationTrigger()\">Debt notification Trigger</button>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ManagerSubBill} from \"../../../models/manager-sub-bill\";\nimport {ManagerSubBillService} from \"../../../services/manager-sub-bill.service\";\n\nclass single {\n    name?: String;\n    value?: bigint;\n    deadLine?: number;\n    progress?: number;\n}\n\n@Component({\n    selector: 'app-manager-sub-bills-dashboard',\n    templateUrl: './manager-sub-bills-dashboard.component.html',\n    styleUrls: ['./manager-sub-bills-dashboard.component.scss']\n})\n\nexport class ManagerSubBillsDashboardComponent implements OnInit {\n    constructor(private service: ManagerSubBillService) {\n\n    }\n\n    subbills: ManagerSubBill[] = [];\n    circleOnPage = 6;\n    single: single[][] = [][this.circleOnPage];\n    billMap: Map<ManagerSubBill, number> = new Map<ManagerSubBill, number>();\n    loading: boolean = false;\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.service.getAllManagerSubBills().subscribe(\n            data => {\n                this.subbills = data;\n                this.service.getManagerSubBillsDebt().subscribe(\n                    response => {\n\n                        Object.keys(response).forEach(key => {\n                                this.billMap.set(JSON.parse(key), response[key]);\n                            }\n                        )\n                        this.setCirlesData();\n                        this.loading=false;\n                    },\n\n                    error => {\n                        console.log(error)\n                    }\n                )\n            }\n        );\n    }\n\n    setCirlesData() {\n        var m = this.subbills.length;\n        var s = [];\n        var n = 0, i = 0;\n        var single: single[][] = [[]];\n\n        for (var j = 0; j < m; j++) {\n            s[i] = {\n                name: this.subbills[j].communalUtility.name,\n                deadLine: this.countTotal(this.subbills[j].communalUtility.deadline),\n                value: this.subbills[j].balance,\n                progress: this.subbills[j].balance * 100 / this.fillProgress(this.subbills[j])\n            };\n            if (s[i].value == 0) s[i].value = 0.0000001\n            i++;\n            if (i == this.circleOnPage) {\n                single[n] = s;\n                n++;\n                i = 0;\n                s = [];\n            }\n        }\n        if (s.length > 0) single[n] = s;\n        Object.assign(this, {single});\n\n    }\n\n    fillProgress(sub: ManagerSubBill): number {\n        var val = 1;\n        this.billMap.forEach(function (value, key) {\n            if (key.communalUtility.name == sub.communalUtility.name) {\n                if (value == 0) val = 1;\n                else val = value;\n            }\n        });\n        return val;\n    }\n\n    add(accumulator, a) {\n        return accumulator + a;\n    }\n\n    countTotal(deadLine: Date): number {\n        var date1 = new Date(deadLine);\n        var date2 = new Date(new Date());\n        return Math.ceil(Math.abs(date2.getTime() - date1.getTime()) / (1000 * 3600 * 24));\n    }\n\n    onResize(event) {\n        if (event.target.innerWidth > 1200) {\n            this.circleOnPage = 6;\n        } else if (event.target.innerWidth < 1200 && event.target.innerWidth > 1000) {\n            this.circleOnPage = 4;\n        } else if (event.target.innerWidth < 1000 && event.target.innerWidth > 800) {\n            this.circleOnPage = 2;\n        } else {\n            this.circleOnPage = 1;\n        }\n        this.setCirlesData();\n    }\n}\n\n","<carousel [pauseOnFocus]=\"true\" class=\"carousel\">\n    <button class=\"floating-btn\" routerLink=\"/manager-operation\">Pay</button>\n    <div class=\"container-main\">\n        <div *ngFor=\"let item of single; let i = index\">\n            <slide>\n                <div class=\"row row-cols-md-2 row-cols-sm-1 row-cols-lg-3 row-cols-xs-1 cols-1 g-4\">\n                    <div *ngFor=\"let item of single[i]; let j = index\">\n                        <div class=\"courses-container\" (window:resize)=\"onResize($event)\">\n                            <div class=\"course\">\n                                <div class=\"course-preview\">\n                                    <h6>Days left</h6>\n                                    <h2>{{single[i][j].deadLine}}</h2>\n                                </div>\n                                <div class=\"course-info\">\n                                    <div class=\"progress-container\">\n                                        <mat-progress-bar mode=\"determinate\"\n                                                          value=\"{{single[i][j].progress}}\"></mat-progress-bar>\n                                        <span class=\"progress-text\">\n\t\t\t\tBalance: {{single[i][j].value}}\n\t\t\t\t</span>\n                                    </div>\n\n                                    <h2>{{single[i][j].name}}</h2>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </slide>\n        </div>\n    </div>\n</carousel>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {TokenStorageService} from '../../services/token-storage.service';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n    form:FormGroup;\n    message:string;\n\n\n\n    constructor(public authService: AuthService,\n                private tokenStorage: TokenStorageService,\n                private router: Router,\n                private route:ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n\n        this.route.queryParams.subscribe((params:Params)=>\n        {\n            if(params['loginAgain'])\n            {\n                this.message = 'Please, enter data (unauthorized)'\n            }\n\n        })\n\n\n        this.form = new FormGroup({\n            email: new FormControl('',[Validators.required, Validators.email]),\n            password: new FormControl('',[Validators.required, Validators.minLength(6)])\n        })\n    }\n\n    onSubmit(): void {\n\n\n        this.authService.login(this.form.value.email, this.form.value.password, ).subscribe(\n\n            data => {\n                this.tokenStorage.saveToken(data.token);\n                this.tokenStorage.saveUser(data);\n                this.redirectPage()\n            },\n        );\n    }\n\n    redirectPage(): void {\n        this.router.navigate(['/home']);\n    }\n}\n\n","\n<div class =\"row p-5 login-background\">\n    <div class=\"col-md-12\">\n\n        <div class=\"alert alert-info\" *ngIf=\"message\">\n            {{message}}\n        </div>\n\n\n\n    <div  fxLayoutAlign = \"center center\" fxFlexFill>\n        <mat-card fxFlex=\"30\">\n            <mat-card-title>\n                Login\n            </mat-card-title>\n\n            <form fxLayoutAlign=\"center\" [formGroup]=\"form\"  (ngSubmit) = \"onSubmit()\" fxLayout=\"column\"  name=\"form\">\n\n                    <mat-form-field>\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\"\n                          formControlName=\"email\"\n                    />\n                </mat-form-field>\n\n                <mat-error *ngIf=\"form.get('email').invalid && form.get('email').touched\">\n                    <small *ngIf=\"form.get('email').errors.required\">Email is required</small>\n                    <small *ngIf=\"form.get('email').errors.email\">Field must be email</small>\n                </mat-error>\n\n\n                <mat-form-field>\n                    <input matInput type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\"/>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"form.get('password').invalid && form.get('password').touched\">\n                    <small *ngIf=\"form.get('password').errors.required\">Password is required</small>\n                    <small *ngIf=\"form.get('password').errors.minlength\">Password must be more than 6 characters</small>\n                </mat-error>\n\n\n                <mat-error *ngIf=\"authService.error$ | async as error\">\n                    <small><strong>{{error}}</strong></small>\n                </mat-error>\n                <button mat-raised-button [disabled]=\"form.invalid\" class=\"my-3\" type = \"submit\" color=\"primary\">\n                    Login\n                </button>\n\n\n\n\n\n\n<!--                    <div role=\"alert\"-->\n<!--                         *ngIf=\"f.submitted && isLoginFailed\"-->\n<!--                    >-->\n<!--                        <mat-error> Wrong password or email</mat-error>-->\n<!--                    </div>-->\n\n\n            </form>\n\n<!--            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">-->\n<!--                Logged in as {{ role }}.-->\n<!--            </div>-->\n\n        </mat-card>\n    </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ManagerSubBill} from \"../../../models/manager-sub-bill\";\nimport {Subscription} from \"rxjs\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ManagerOperationService} from \"../../../services/manager-operation.service\";\n\n@Component({\n  selector: 'app-manager-operation-update',\n  templateUrl: './manager-operation-update.component.html',\n  styleUrls: ['./manager-operation-update.component.css']\n})\nexport class ManagerOperationUpdateComponent implements OnInit {\n\n\n  form: FormGroup;\n\n  constructor(private managerService: ManagerOperationService) { }\n\n  ngOnInit(): void {\n\n\n    this.form = new FormGroup({\n      description: new FormControl('',[Validators.required, Validators.minLength(2)]),\n      sum:new FormControl('',Validators.required),\n      subBillId:new FormControl('',Validators.required)\n    })\n\n\n  }\n  onClickSubmit() {\n    this.managerService.updateSpending(this.form.value)\n  }\n}\n","\n<div  fxLayoutAlign = \"center center\" fxFlexFill>\n    <mat-card fxFlex=\"60\">\n        <form fxLayoutAlign=\"center\" fxLayout=\"column\" [formGroup]=\"form\"  (ngSubmit) = \"onClickSubmit()\">\n            <mat-form-field>\n                <mat-label>Enter Description</mat-label>\n                <textarea formControlName=\"description\" matInput></textarea>\n            </mat-form-field>\n            <mat-error *ngIf=\"form.get('description').invalid && form.get('description').touched\">\n                <small *ngIf=\"form.get('description').errors.required\">Description is required</small>\n                <small *ngIf=\"form.get('description').errors.minlength\">Description length must be more than 1</small>\n            </mat-error>\n\n            <mat-form-field>\n                <mat-label>Enter sum of spending</mat-label>\n                <input formControlName=\"sum\" min=\"0\" type=\"number\" matInput ngModel>\n                <span matPrefix>₴&nbsp;</span>\n            </mat-form-field>\n\n            <mat-error *ngIf=\"form.get('sum').invalid && form.get('sum').touched\">\n                <small *ngIf=\"form.get('sum').errors.required\">Sum is required</small>\n            </mat-error>\n\n            <button [disabled]=\"form.invalid\" mat-raised-button type = \"submit\" color=\"primary\">\n                Make spending\n            </button>\n        </form>\n    </mat-card>\n</div>","import {Manager} from \"./manager\";\r\n\r\nexport class ManagerBill {\r\n    managerBillId:Number;\r\n    manager:Manager;\r\n    cardNumber:String;\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApartmentOperationService} from \"../../services/apartment-operation.service\";\nimport {ApartmentInfoService} from \"../../services/apartment-info.service\";\nimport {Apartment} from \"../../models/apartment\";\nimport {FormControl} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {map, startWith} from \"rxjs/operators\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {ApartmentOperation} from \"../../models/apartment-operation\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-apartment-operation-list',\n  templateUrl: './apartment-operation-list.component.html',\n  styleUrls: ['./apartment-operation-list.component.scss']\n})\nexport class ApartmentOperationListComponent implements OnInit {\n\n  constructor(private apartmentOperation:ApartmentOperationService,private _snackBar: MatSnackBar, private apartmentService: ApartmentInfoService) { }\n\n    apartments?: Apartment[] = [];\n    searchValue?: Number;\n    floors?;\n    myControl = new FormControl();\n    options: Number[] = [];\n    filteredOptions: Observable<Number[]>;\n    dataSource = new MatTableDataSource<ApartmentOperation>();\n\n    displayedColumns: string[] = ['operation id', 'sum', 'communalUtility','createdAt',];\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit(): void {\n    this.apartmentService.getAllApartments().subscribe(\n        data => {\n          console.log(data);\n\n        }\n    )\n\n    this.getAllApartments();\n      this.filteredOptions = this.myControl.valueChanges\n          .pipe(\n              startWith(''),\n              map(value => this._filter(value))\n          );\n  }\n\n\n    private _filter(value: Number): Number[] {\n        if (this.options != null && value != null) {\n            return this.options.filter(option => option.toString().includes(value.toString()));\n        }\n    }\n\n    getAllApartments() {\n        this.apartmentService.getAllApartments().subscribe(\n            data => {\n                this.apartments = data;\n                this.floors = this.uniqueArray(this.apartments.map(item => item.floor));\n                this.options = this.apartments.map(item => item.apartmentNumber);\n            },\n        );\n    }\n\n\n    paginateHide()\n    {\n        return this.apartments.length>0\n    }\n\n    uniqueArray(ar) {\n        var j = {};\n\n        ar.forEach(function (v) {\n            j[v + '::' + typeof v] = v;\n        });\n\n        return Object.keys(j).map(function (v) {\n            return j[v];\n        });\n    }\n\n\n\n    getAllOperations(id:Number)\n  {\n    this.apartmentOperation.getAllByAccountId(id).subscribe(\n        data => {\n          console.log(data);\n            this.dataSource.data = data;\n            this.dataSource.paginator = this.paginator;\n        },\n        error => {\n          console.log(error.error.errors[0]);\n          this.openErrorSnackBar(error.error.errors[0],\"OK\")\n        }\n    )\n  }\n\n    openErrorSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            panelClass:['snackBar-fail'],\n            duration: 100000,\n        });\n    }\n\n\n}\n","<div>\n\n\n    <mat-toolbar class=\"mat-toolbar col-12\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n        <mat-card-title class=\"title-center col-2\">Apartment Operation</mat-card-title>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <div fxLayout=\"row\">\n\n                <button mat-button *ngIf=\"searchValue\" matSuffix mat-icon-button aria-label=\"Clear\"\n                        (click)=\"getAllOperations(searchValue)\">\n                    <mat-icon>search</mat-icon>\n                </button>\n                <mat-form-field class=\"form-field\">\n                    <mat-label>Apartment number</mat-label>\n                    <input type=\"number\" min=1 [(ngModel)]=\"searchValue\"\n                           aria-label=\"Number\"\n                           matInput\n                           [formControl]=\"myControl\"\n                           [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n\n\n\n                </mat-form-field>\n            </div>\n\n\n        </div>\n\n\n    </mat-toolbar>\n</div>\n\n<div class=\"container-fluid p-5\">\n    <div class=\"row\">\n\n\n\n\n        <h1 [hidden]=\"dataSource.data.length\">No data, please enter apartment number</h1>\n        <div class=\"col-md-12\" [hidden]=\"!dataSource.data.length\">\n\n            <div class=\"mat-elevation-z8\" >\n\n                    <table mat-table [dataSource]=\"dataSource\" >\n\n                        <!-- Position Column -->\n                        <ng-container matColumnDef=\"operation id\">\n                            <th mat-header-cell *matHeaderCellDef>Operation Id</th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.operationId}} </td>\n                        </ng-container>\n\n\n                        <!-- Weight Column -->\n                        <ng-container  matColumnDef=\"sum\">\n                            <th mat-header-cell *matHeaderCellDef> Sum</th>\n                            <ng-container *matCellDef=\"let element; let i = index\">\n                                <td mat-cell> {{element.sum>0? \"+\"+element.sum:element.sum}} </td>\n\n                            </ng-container>\n                        </ng-container>\n\n\n                        <ng-container matColumnDef=\"communalUtility\">\n                            <th mat-header-cell *matHeaderCellDef> Communal Utility </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.apartmentSubBill.communalUtility.name}} </td>\n                        </ng-container>\n\n\n\n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"createdAt\">\n                            <th mat-header-cell *matHeaderCellDef> Created at </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.createdAt | date:'yyyy-MM-dd' }} </td>\n                        </ng-container>\n\n\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n                <div [hidden] = \" !paginateHide() \" >\n                    <mat-paginator  [pageSizeOptions]=\"[10, 20]\" showFirstLastButtons></mat-paginator>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n</div>\n","export class ApartmentRequestToManager {\n    apartmentId?: Number;\n    text?: String;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Announcement} from \"../../../models/announcement\";\nimport {AnnouncementService} from \"../../../services/announcement.service\";\n// @ts-ignore\nimport {PageEvent} from \"@angular/material\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DatePipe} from \"@angular/common\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-announcements-list',\n    templateUrl: './announcements-list.component.html',\n    styleUrls: ['./announcements-list.component.scss']\n})\nexport class AnnouncementsListComponent implements OnInit {\n    announcements?: Announcement[];\n    currentAnnouncement?: Announcement;\n    currentIndex: number = -1;\n\n    searchText: string;\n    startDate: Date;\n    endDate: Date;\n    hasVoting: string;\n\n    lowValue = 0;\n    highValue = 10;\n\n    range = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n    });\n\n    constructor(private announcementService: AnnouncementService,\n                private tokenStorageService: TokenStorageService,\n                private _snackBar: MatSnackBar,\n                private datePipe: DatePipe) {}\n\n    ngOnInit(): void {\n        this.getAnnouncements();\n    }\n\n    public getPaginatorData(event: PageEvent): PageEvent {\n        this.lowValue = event.pageIndex * event.pageSize;\n        this.highValue = this.lowValue + event.pageSize;\n        return event;\n    }\n\n    getRole(): any {\n        return this.tokenStorageService.getRole();\n    }\n\n    getAnnouncements(): void {\n        this.announcementService.getAnnouncementList(\n            this.searchText,\n            this.datePipe.transform(this.startDate,'MM/dd/yyyy'),\n            this.datePipe.transform(this.endDate,'MM/dd/yyyy'),\n            this.hasVoting\n        )\n            .subscribe(\n                data => {\n                    this.announcements = data;\n                    this.refreshCurrentAnnouncement();\n                    console.log(data);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n\n    refreshList(): void {\n        this.getAnnouncements();\n        this.refreshCurrentAnnouncement();\n    }\n\n    refreshCurrentAnnouncement(): void {\n        this.currentAnnouncement = undefined;\n        this.currentIndex = -1;\n    }\n\n    setActiveAnnouncement(announcement: Announcement, index: number): void {\n        this.currentAnnouncement = announcement;\n        this.currentIndex = index;\n    }\n\n    deleteAnnouncement(announcementId: number): void {\n        this.announcementService.deleteAnnouncement(announcementId)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.refreshList();\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n}\n","<mat-toolbar class=\"mat-toolbar col-12\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n    <mat-card-title class=\"title-center col-2\">ANNOUNCEMENTS</mat-card-title>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <div fxLayout=\"row\">\n            <div>\n                <mat-form-field class=\"form-field ml-4\">\n                    <mat-label>Search</mat-label>\n                    <input matInput placeholder=\"Input some text\" [(ngModel)]=\"searchText\">\n                </mat-form-field>\n\n                <button mat-icon-button (click)=\"getAnnouncements()\">\n                    <mat-icon>search</mat-icon>\n                </button>\n            </div>\n\n            <mat-form-field class=\"form-field ml-4\">\n                <mat-label>Enter a date range</mat-label>\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                    <input matStartDate formControlName=\"start\" placeholder=\"Start date\" [(ngModel)]=\"startDate\">\n                    <input matEndDate formControlName=\"end\" placeholder=\"End date\" [(ngModel)]=\"endDate\" (dateChange)=\"getAnnouncements()\">\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker ></mat-date-range-picker>\n\n                <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n                <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n            </mat-form-field>\n        </div>\n\n        <mat-checkbox class=\"form-field ml-4\" [(ngModel)]=\"hasVoting\" (change)=\"getAnnouncements()\">Only with votings</mat-checkbox>\n    </div>\n\n\n\n    <div class=\"col-1\">\n        <button mat-icon-button class=\"create-btn float-right\"\n                routerLink=\"create\"\n                *ngIf=\"getRole() == 'MANAGER'\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </div>\n</mat-toolbar>\n\n<div class=\"list row p-2\">\n    <div class=\"col-md-6\">\n        <mat-selection-list [multiple]=\"false\">\n            <mat-list-option\n                    *ngFor=\"let announcement of\n                    (announcements | slice: lowValue : highValue); let i = index\"\n                    [class.active]=\"i == currentIndex\"\n                    (click)=\"setActiveAnnouncement(announcement, i)\"\n            >\n                <div  fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n                    <div class=\"truncate\">\n                        {{ announcement.title }}\n                    </div>\n                    <div class=\"mat-card-subtitle\">\n                        {{ announcement.createdAt | date:'yyyy-MM-dd, HH:mm ' }}\n                    </div>\n                </div>\n\n                <mat-divider></mat-divider>\n            </mat-list-option>\n            <mat-paginator  [length]=\"announcements?.length\" pageSize=10\n                            (page)=\"getPaginatorData($event)\" [pageSizeOptions]=\"[10]\"></mat-paginator>\n        </mat-selection-list>\n    </div>\n    <mat-card class=\"col-md-6 p-2\">\n        <div *ngIf=\"currentAnnouncement\">\n            <mat-card-header>\n                <mat-card-title>{{ currentAnnouncement.title }}</mat-card-title>\n                <mat-card-subtitle>Created at {{ currentAnnouncement.createdAt | date:'yyyy-MM-dd, HH:mm ' }}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                 <pre><p>{{ currentAnnouncement.body }}</p></pre>\n            </mat-card-content>\n            <mat-card-actions class=\"p-2\">\n                <button mat-stroked-button routerLink=\"{{currentAnnouncement.announcementId}}\">Show Full</button>\n                <button mat-stroked-button color=\"warn\"\n                        *ngIf=\"getRole() == 'MANAGER'\"\n                        (click)=\"deleteAnnouncement(currentAnnouncement.announcementId)\">Delete</button>\n            </mat-card-actions>\n        </div>\n\n        <div *ngIf=\"!currentAnnouncement\">\n            <br/>\n            <p>Click on an Announcement...</p>\n        </div>\n    </mat-card>\n\n</div>\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class OwnerGuard implements CanActivate {\r\n    constructor(\r\n        private tokenService: TokenStorageService,\r\n        private router: Router,\r\n        private authService: AuthService\r\n    ) {\r\n    }\r\n\r\n    canActivate(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean>|boolean {\r\n        return this.authService.getAccount().pipe(map((auth) => {\r\n            if (auth.role == \"ROLE_OWNER\")  {\r\n                console.log(auth);\r\n                return true;\r\n            }\r\n            console.log('not authenticated');\r\n            this.tokenService.signOut();\r\n            this.router.navigateByUrl('login');\r\n            return false;\r\n        }));\r\n    }\r\n}","import {Component, OnInit} from '@angular/core';\nimport {Apartment} from '../../../models/apartment';\nimport {ApartmentInfoService} from '../../../services/apartment-info.service';\nimport {TokenStorageService} from '../../../services/token-storage.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n@Component({\n    selector: 'app-apartment-info-page',\n    templateUrl: './apartment-info-page.component.html',\n    styleUrls: ['./apartment-info-page.component.scss']\n})\nexport class ApartmentInfoPageComponent implements OnInit {\n\n    apartment: Apartment = new Apartment();\n    loading: boolean = false;\n\n    constructor(private service: ApartmentInfoService, private token: TokenStorageService,\n                private route: ActivatedRoute, private  router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        const accountId = this.route.snapshot.paramMap.get('id');\n        this.service.getApartmentByAccountId(Number(accountId))\n            .subscribe(data => {\n                this.apartment = data;\n                this.loading=false;\n            });\n    }\n\n    updateApartment() {\n        this.router.navigate(['apartments/update', this.apartment.accountId]);\n    }\n}\n","<mat-toolbar class=\"mat-toolbar col-12\">\n    <mat-card-title class=\"title-center  col-11\">Apartment Page</mat-card-title>\n    <div class=\"col-1\">\n        <button mat-icon-button class=\"edit-btn float-right\"\n                (click)=\"updateApartment()\">\n            <mat-icon>settings</mat-icon>\n        </button>\n    </div>\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"main-body\">\n\n        <div class=\"row gutters-sm\">\n            <div class=\"col-md-4 mb-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\" matBadge=\"{{apartment.floor}}\" matBadgeColor=\"primary\">\n                        <div class=\"d-flex flex-column align-items-center text-center\">\n                            <div mat-card-avatar class=\"res-circle \">\n                                <div class=\"circle-txt\">\n                                    {{apartment.apartmentNumber}}\n                                </div>\n                            </div>\n\n                            <div class=\"mt-3\">\n                                <p class=\"text-secondary mb-1\"> People count: {{apartment.peopleCount}}</p>\n                                <p class=\"text-muted font-size-sm\"> Square metres: {{apartment.squareMetres}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"card mb-3\">\n                    <div class=\"card-body\">\n                        <h2>Owner</h2>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">First Name</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{apartment.firstName}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Last Name</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{apartment.lastName}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Email</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{apartment.email}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Phone</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{apartment.phoneNumber}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</div>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 355\">\n            <g id=\"ocean\">\n                <path id=\"sky\" class=\"st0\" d=\"M0 0h1000v203.1H0z\"/>\n                <linearGradient id=\"water_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"500\" y1=\"354\" x2=\"500\" y2=\"200.667\">\n                    <stop offset=\"0\" stop-color=\"#fff\"/>\n                    <stop offset=\"1\" stop-color=\"#b3dcdf\"/>\n                </linearGradient>\n                <path id=\"water\" fill=\"url(#water_1_)\" d=\"M0 200.7h1000V354H0z\"/>\n                <path id=\"land\" class=\"st0\" d=\"M0 273.4h1000V354H0z\"/>\n                <g id=\"bumps\">\n                    <path class=\"st0\" d=\"M0 275.2s83.8-28 180-28 197 28 197 28H0z\"/>\n                    <path class=\"st0\" d=\"M377 275.2s54.7-28 117.5-28 128.6 28 128.6 28H377z\"/>\n                    <path class=\"st0\" d=\"M623.2 275.2s83.7-28 179.9-28 196.9 28 196.9 28H623.2z\"/>\n                    <path class=\"st0\" d=\"M-998 275.2s83.8-28 180-28 197 28 197 28h-377z\"/>\n                    <path class=\"st0\" d=\"M-621 275.2s54.7-28 117.5-28 128.6 28 128.6 28H-621z\"/>\n                    <path class=\"st0\" d=\"M-374.8 275.2s83.7-28 179.9-28S2 275.2 2 275.2h-376.8z\"/>\n                </g>\n            </g>\n            <g id=\"tracks\">\n                <path class=\"st2\" d=\"M9.8 282.4h-3L0 307.6h3z\"/>\n                <path class=\"st2\" d=\"M19.8 282.4h-3L10 307.6h3z\"/>\n                <path class=\"st2\" d=\"M29.8 282.4h-3L20 307.6h3z\"/>\n                <path class=\"st2\" d=\"M39.8 282.4h-3L30 307.6h3z\"/>\n                <path class=\"st2\" d=\"M49.8 282.4h-3L40 307.6h3z\"/>\n                <path class=\"st2\" d=\"M59.8 282.4h-3L50 307.6h3z\"/>\n                <path class=\"st2\" d=\"M69.8 282.4h-3L60 307.6h3z\"/>\n                <path class=\"st2\" d=\"M79.8 282.4h-3L70 307.6h3z\"/>\n                <path class=\"st2\" d=\"M89.8 282.4h-3L80 307.6h3z\"/>\n                <path class=\"st2\" d=\"M99.8 282.4h-3L90 307.6h3z\"/>\n                <path class=\"st2\" d=\"M109.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M119.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M129.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M139.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M149.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M159.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M169.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M179.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M189.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M199.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M209.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M219.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M229.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M239.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M249.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M259.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M269.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M279.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M289.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M299.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M309.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M319.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M329.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M339.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M349.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M359.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M369.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M379.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M389.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M399.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M409.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M419.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M429.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M439.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M449.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M459.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M469.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M479.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M489.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M499.8 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M1000 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M990 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M980 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M970 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M960 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M950 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M940 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M930 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M920 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M910 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M900 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M890 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M880 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M870 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M860 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M850 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M840 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M830 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M820 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M810 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M800 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M790 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M780 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M770 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M760 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M750 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M740 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M730 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M720 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M710 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M700 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M690 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M680 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M670 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M660 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M650 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M640 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M630 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M620 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M610 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M600 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M590 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M580 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M570 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M560 282.4h-3l-6.8 25.2h3z\"/>\n                <g>\n                    <path class=\"st2\" d=\"M-490.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-480.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-470.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-460.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-450.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-440.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-430.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-420.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-410.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-400.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-390.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-380.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-370.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-360.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-350.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-340.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-330.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-320.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-310.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-300.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-290.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-280.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-270.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-260.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-250.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-240.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-230.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-220.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-210.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-200.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-190.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-180.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-170.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-160.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-150.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-140.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-130.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-120.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-110.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-100.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-90.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-80.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-70.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-60.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-50.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-40.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-30.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-20.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-10.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M-.2 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M500 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M490 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M480 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M470 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M460 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M450 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M440 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M430 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M420 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M410 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M400 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M390 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M380 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M370 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M360 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M350 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M340 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M330 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M320 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M310 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M300 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M290 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M280 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M270 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M260 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M250 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M240 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M230 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M220 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M210 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M200 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M190 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M180 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M170 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M160 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M150 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M140 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M130 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M120 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M110 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M100 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M90 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M80 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M70 282.4h-3l-6.8 25.2h3z\"/>\n                    <path class=\"st2\" d=\"M60 282.4h-3l-6.8 25.2h3z\"/>\n                </g>\n                <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M550 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M540 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M530 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M520 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st2\" d=\"M510 282.4h-3l-6.8 25.2h3z\"/>\n                <path class=\"st3\" d=\"M-499.5 300.2H1000v5.1H-499.5z\"/>\n                <path class=\"st3\" d=\"M-499.5 283.8H1000v2.8H-499.5z\"/>\n            </g>\n            <g id=\"cloudsAll\">\n                <path id=\"cloud1\" class=\"st4\" d=\"M19.5 69.7s-21.3.5-25-12.2c0 0-4.3-21.3 16-21.8 0 0-2.1-12.2 12.2-14.9 0 0 15-3.2 21.3 6.9 0 0 3.6-20.7 17.8-22.3 0 0 24-3 26.6 13.1 0 0 .1 9.5-2.8 13.5 0 0 9.5-15 26.5-4.8 0 0 12.1 7.9 7 20.2 0 0 16 4.8 10.1 18.1 0 0-10.2 8.5-17.1-1.1 0 0-5.5 16-32.5 16 0 0-19.1 2.1-27-13.3 0 0 .5 10.1-13.3 10.6-.1 0-20.3 3.2-19.8-8z\"/>\n                <path id=\"cloud3\" class=\"st4\" d=\"M836 132s-18.3 2.1-22.2-4.9c0 0-4.9-11.8 12.5-13.8 0 0-2.5-6.8 9.7-9.6 0 0 12.7-3.1 18.7 2.1 0 0 2-12.2 14-14.3 0 0 16.6-3.3 23.7 2.1 0 0 4.8 3.9 2.4 6.5 0 0 3.1-4.8 18.4-.4 0 0 10.9 3.5 7.2 11 0 0 13.8-1.5 9.7 9.5 0 0-4.1 10.8-15.5 4.8 0 0-3.1 5.6-26.4 7.9 0 0-16.3 2.8-24-5.3 0 0 1 5.7-10.8 7.2-.1.1-17.2 3.6-17.4-2.8z\"/>\n                <path id=\"cloud2\" class=\"st4\" d=\"M19.3 159.5s-15.9.6-18.8-5.1c0 0-3.4-9.5 11.7-10.1 0 0-1.7-5.5 9-6.9 0 0 11.2-1.7 16 2.8 0 0 2.5-9.4 13.1-10.3 0 0 17.9-1.8 20 5.4 0 0 .2 4.3-2 6.1 0 0 6.9-6.9 19.8-2.6 0 0 9.1 3.4 5.5 9 0 0 6.5 0 4.5 6.7 0 0-2.6 5.6-9.6 1 0 0-4 7.3-24.2 7.7 0 0-14.2 1.3-20.4-5.5 0 0 .5 4.5-9.8 5 0 .1-15 1.8-14.8-3.2z\"/>\n                <path id=\"cloud4\" class=\"st4\" d=\"M370.3 109.5s15.9.6 18.8-5.1c0 0 3.4-9.5-11.7-10.1 0 0 1.7-5.5-9-6.9 0 0-11.2-1.7-16 2.8 0 0-2.5-9.4-13.1-10.3 0 0-17.9-1.8-20 5.4 0 0-.2 4.3 2 6.1 0 0-6.9-6.9-19.8-2.6 0 0-9.1 3.4-5.5 9 0 0-12 1.9-7.7 8 0 0 7.5 4 12.8-.2 0 0 4 7.3 24.2 7.7 0 0 14.2 1.3 20.4-5.5 0 0-.5 4.5 9.8 5 0 0 15.1 1.7 14.8-3.3z\"/>\n                <path id=\"cloud5\" class=\"st4\" d=\"M511.7 12.4s-21.3-.3-25 7c0 0-4.3 12.2 16 12.5 0 0-2.1 7 12.2 8.6 0 0 15 1.8 21.3-4 0 0 3.6 11.9 17.8 12.8 0 0 19.5 1.6 27-4.4 0 0 5-4.4 2.1-6.7 0 0 4.1 4.4 21.2-1.5 0 0 12.1-4.6 7-11.6 0 0 16-2.8 10.1-10.4 0 0-10.2-4.9-17.1.6 0 0-5.5-9.2-32.5-9.2 0 0-19.1-1.2-27 7.6 0 0 .5-5.8-13.3-6.1-.1.2-20.3-1.6-19.8 4.8z\"/>\n            </g>\n            <g id=\"train\">\n                <path fill=\"#b3dcdf\" d=\"M344.5 248.5h507.2v37.8H344.5z\"/>\n                <g id=\"wheels\">\n                    <circle class=\"st6\" cx=\"384.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M384.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                    <circle class=\"st6\" cx=\"416.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M416.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                    <circle class=\"st6\" cx=\"469.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M469.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                    <circle class=\"st6\" cx=\"734.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M734.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                    <circle class=\"st6\" cx=\"766.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M766.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                    <circle class=\"st6\" cx=\"821.1\" cy=\"285.6\" r=\"15.1\"/>\n                    <path class=\"st2\" d=\"M821.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\"/>\n                </g>\n                <path id=\"bracefront\" class=\"st7\" d=\"M383.2 285.6h88.1\"/>\n                <path id=\"braceback\" class=\"st7\" d=\"M733.2 285.6h88.1\"/>\n                <g id=\"car-layers\">\n                    <path id=\"car\" class=\"st8\" d=\"M321.8 300.7v-32.4s1.2.7-1.5-2.4v-29.1s3.1-11.6 10.7-21.1c0 0 7.6-12 15.5-17.5h1.3s10.2-4.9 30.9-28h.6s-.9-1.4 0-2.7c0 0 10.1-10.5 21-12.3 0 0 9.4-1.8 20.2-1.8h47.7V151H492v-1.1h10.1v1.1h19v2.2s8.2.9 19.2-4.2c0 0 1.4-1.1 28.8-1.1h291.5v6.8h7.5v2.2s12.2-.6 12.2 9.8V177l-10-.1v57.9s14.9-.5 14.9 10.2c0 0 1 9-14.9 8.9v3.8H719.5s-2.4.1-4.3 3l-15 29s-2.9 5.1-10.8 5.1H504.3s-2.9.1-6.1-5l-13.1-25s-4.5-7.1-11.8-7.1H369v2.4s-3.2 1.3-7.1 8.7L351.4 289s-2.9 6.3-6.9 6.4h-17.8l-4.9 5.3z\"/>\n                    <path id=\"streamline-outine\" class=\"st8\" d=\"M320.3 236.6s1.4-6.8 4.4-11.3c0 0 .1-2.3 23.2-6.3l78-16.6s103.3-21.1 134.9-26.1c0 0 93.3-16 120.5-17.9 0 0 57.6-4.3 100-4.1h88.9v63.4s-10.3 5.4-17.1 5.3c0 0-305.6 4.9-366.3 8.1 0 0-100.3 4.8-119.1 6.8 0-.1-46.6 1.2-47.4-1.3z\"/>\n                    <g id=\"window-grate\">\n                        <path class=\"st9\" d=\"M739.5 182.6H854\"/>\n                        <path class=\"st9\" d=\"M739.5 177.6H854\"/>\n                        <path class=\"st9\" d=\"M739.5 172.6H854\"/>\n                        <path class=\"st9\" d=\"M739.5 167.6H854\"/>\n                        <path class=\"st9\" d=\"M739.5 161.4H854v26.1H739.5z\"/>\n                    </g>\n                    <path class=\"st9\" d=\"M320.3 257.8h549.9\"/>\n                    <g id=\"Text\">\n                        <text transform=\"translate(377.037 230.025)\" class=\"st8 st10\" font-size=\"21\">\n                            404\n                        </text>\n                        <text transform=\"translate(659.5 213.994)\" class=\"st8 st10\" font-size=\"24.025\">\n                            Page not found.\n                        </text>\n                    </g>\n                    <g id=\"ladders\">\n                        <g id=\"ladder-f\">\n                            <path id=\"front-ladder\" class=\"st8\" d=\"M433.8 258.4h17.8v34.8h-17.8z\"/>\n                            <path id=\"fb-rung\" class=\"st9\" d=\"M433.8 281.1h17.7\"/>\n                            <path id=\"ft-rung\" class=\"st9\" d=\"M433.8 268.6h17.7\"/>\n                        </g>\n                        <g id=\"ladder-b\">\n                            <path id=\"ladder-back\" class=\"st8\" d=\"M851.8 257.8h17.8v34.8h-17.8z\"/>\n                            <path id=\"bt-rung\" class=\"st9\" d=\"M851.8 268.6h17.7\"/>\n                            <path id=\"bb-rung\" class=\"st9\" d=\"M851.8 281.1h17.7\"/>\n                        </g>\n                    </g>\n                    <path id=\"window-front\" class=\"st8\" d=\"M350.5 196.4s-.4 3.9 15.2 4.3l32.3-30.3s-18.2 1.1-19-.8l-28.5 26.8z\"/>\n                </g>\n            </g>\n        </svg>\n","export class BackEndError {\n    timestamp?: Date;\n    status?: String;\n    message?: String;\n    errors?: String[];\n    errorCode?: BigInteger;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Announcement} from \"../../../models/announcement\";\nimport {AnnouncementService} from \"../../../services/announcement.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n    selector: 'app-announcements-update',\n    templateUrl: './announcements-update.component.html',\n    styleUrls: ['./announcements-update.component.css']\n})\nexport class AnnouncementsUpdateComponent implements OnInit {\n    form: FormGroup;\n    id: number;\n    announcement: Announcement;\n\n    constructor(private announcementService: AnnouncementService,\n                private router: Router,\n                private route: ActivatedRoute,\n                private _snackBar: MatSnackBar) {\n    }\n\n    ngOnInit(): void {\n        this.id = this.route.snapshot.params['id'];\n        this.announcementService.getAnnouncement(this.id)\n            .subscribe(\n                data => {\n                    this.announcement = data;\n                    console.log(data);\n                },\n                error => {\n                    console.log(error);\n                });\n\n        this.form = new FormGroup({\n            title: new FormControl('',[\n                Validators.required,\n                this.noWhitespaceValidator,\n                Validators.minLength(2),\n                Validators.maxLength(255)\n            ]),\n            body:new FormControl('',Validators.maxLength(1023)),\n            isOpened:new FormControl('',Validators.required)\n        })\n    }\n\n    public noWhitespaceValidator(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n\n    saveAnnouncement(): void {\n        this.announcementService.updateAnnouncement(this.id, this.announcement)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.openSnackBar('Announcement is updated', 'OK');\n                    this.router.navigateByUrl('announcements/' + this.id);\n                },\n                error => {\n                    console.log(error);\n                });\n    };\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n}\n","<div class=\"p-3\" fxFlex=\"60\" fxFlexOffset=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\" fxFlexFill>\n    <mat-card >\n        <mat-card-header>\n            <mat-card-title>Announcement Edit</mat-card-title>\n        </mat-card-header>\n\n        <form xLayoutAlign=\"center\" fxLayout=\"column\" [formGroup]=\"form\" (ngSubmit)=\"saveAnnouncement()\">\n\n            <mat-form-field>\n                <mat-label>Title</mat-label>\n                <input matInput type=\"text\"\n                       formControlName=\"title\"\n                       [(ngModel)]=\"announcement.title\"\n                />\n            </mat-form-field>\n\n            <mat-error *ngIf=\"form.get('title').invalid && form.get('title').touched\">\n                <small *ngIf=\"form.get('title').errors.required\">Title is required<br></small>\n                <small *ngIf=\"form.get('title').errors.whitespace\">Title must be filled<br></small>\n                <small *ngIf=\"form.get('title').errors.minlength\">Title length must be more than 1<br></small>\n                <small *ngIf=\"form.get('title').errors.maxlength\">Title length must be less than 256<br></small>\n            </mat-error>\n\n            <mat-form-field>\n                <mat-label>Body</mat-label>\n                <textarea matInput\n                          formControlName=\"body\"\n                          rows=\"8\"\n                          [(ngModel)]=\"announcement.body\">\n                </textarea>\n            </mat-form-field>\n\n            <mat-error *ngIf=\"form.get('body').invalid && form.get('body').touched\">\n                <small *ngIf=\"form.get('body').errors.maxlength\">Body length must be less than 1024</small>\n            </mat-error>\n\n            <mat-checkbox formControlName=\"isOpened\" [(ngModel)]=\"announcement.isOpened\">\n                Open for Comments\n            </mat-checkbox>\n\n            <mat-error *ngIf=\"form.get('isOpened').invalid && form.get('isOpened').touched\">\n                <small *ngIf=\"form.get('isOpened').errors.required\">isOpened is required</small>\n            </mat-error>\n\n            <button [disabled]=\"form.invalid\"  mat-flat-button color=\"primary\" type=\"submit\">Submit</button>\n\n        </form>\n    </mat-card>\n\n</div>\n","import {HTTP_INTERCEPTORS, HttpErrorResponse, HttpEvent} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\n\r\nimport {TokenStorageService} from '../services/token-storage.service';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {Router} from \"@angular/router\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private tokenStorageService: TokenStorageService, private router:Router) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authReq = req;\r\n        const token = this.tokenStorageService.getToken();\r\n        if (token != null) {\r\n            authReq = req.clone({headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)});\r\n        }\r\n        return next.handle(authReq).pipe(catchError(\r\n            (error:HttpErrorResponse)=>{\r\n                if (error.status === 401)\r\n                {\r\n                    this.tokenStorageService.signOut();\r\n                    this.router.navigate(['']);\r\n\r\n                }\r\n                return throwError(error);\r\n            }\r\n\r\n        ));\r\n    }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport {Announcement} from \"../../../models/announcement\";\nimport {AnnouncementService} from \"../../../services/announcement.service\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n// @ts-ignore\nimport {PageEvent} from \"@angular/material\";\n\n@Component({\n  selector: 'app-announcement-dashboard',\n  templateUrl: './announcement-dashboard.component.html',\n  styleUrls: ['./announcement-dashboard.component.css']\n})\nexport class AnnouncementDashboardComponent implements OnInit {\n  announcements?: Announcement[];\n\n  lowValue = 0;\n  highValue = 5;\n\n  constructor(private announcementService: AnnouncementService,\n              private tokenStorageService: TokenStorageService,\n              private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    this.getAnnouncements();\n  }\n\n  public getPaginatorData(event: PageEvent): PageEvent {\n    this.lowValue = event.pageIndex * event.pageSize;\n    this.highValue = this.lowValue + event.pageSize;\n    return event;\n  }\n\n  getRole(): any {\n    return this.tokenStorageService.getRole();\n  }\n\n  getAnnouncements(): void {\n    this.announcementService.getAnnouncementList()\n        .subscribe(\n            data => {\n              this.announcements = data;\n              console.log(data);\n            },\n            error => {\n              console.log(error);\n            });\n  }\n\n}\n","<div class=\"list\">\n    <div>\n        <mat-selection-list [multiple]=\"false\">\n            <mat-list-option\n                    *ngFor=\"let announcement of\n                    (announcements | slice: lowValue : highValue); let i = index\"\n                    routerLink=\"../announcements/{{ announcement.announcementId }}\"\n            >\n                <div  fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n                    <div class=\"truncate\">\n                        {{ announcement.title }}\n                    </div>\n\n                    <div class=\"mat-card-subtitle\">\n                        {{ announcement.createdAt | date:'yyyy-MM-dd' }}\n                    </div>\n                </div>\n\n                <mat-divider></mat-divider>\n            </mat-list-option>\n            <mat-paginator  [length]=\"announcements?.length\" pageSize=5\n                            (page)=\"getPaginatorData($event)\" [pageSizeOptions]=\"[5]\"></mat-paginator>\n        </mat-selection-list>\n    </div>\n\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse,} from '@angular/common/http';\nimport {Observable, throwError} from \"rxjs\";\nimport {Apartment} from \"../models/apartment\";\nimport {BackEndError} from \"../models/back-end-error\";\nimport {sha256} from \"js-sha256\";\nimport {catchError} from \"rxjs/operators\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApartmentInfoService {\n\n    private baseURL = 'https://housemanagement.herokuapp.com/apartments';\n    err: BackEndError | undefined;\n\n    constructor(private httpClient: HttpClient, private _snackBar: MatSnackBar) {\n    }\n\n    getApartmentByApartmentNumber(number: Number): Observable<Object> {\n        return this.httpClient.get(`${this.baseURL}/${number}`);\n    }\n\n    getApartmentByAccountId(id: Number): Observable<Object> {\n        return this.httpClient.get(`${this.baseURL}/apartment/?id=${id}`).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    getAllApartments(): Observable<Apartment[]> {\n        return this.httpClient.get<Apartment[]>(this.baseURL).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    getAllApartmentsByFloor(floor: Number): Observable<Object[]> {\n        return this.httpClient.get<Apartment[]>(`${this.baseURL}/apartments-on-floor?floor=${floor}`);\n    }\n\n    createApartment(apartment: Apartment): Observable<Object> {\n        apartment.password = sha256(apartment.password + \"\");\n        return this.httpClient.post(this.baseURL, apartment).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    updateApartment(apartment: Apartment): Observable<Apartment> {\n        return this.httpClient.put(this.baseURL, apartment).pipe(\n            catchError(this.handleError.bind(this)));\n\n    }\n\n    updatePassword(apartment: Apartment) {\n        apartment.password = sha256(apartment.password + \"\");\n        return this.httpClient.put(`${this.baseURL}/updatePassword`, apartment).pipe(\n            catchError(this.handleError.bind(this))\n        ).subscribe(data => console.log(data))\n    }\n\n\n    handleError(error: HttpErrorResponse) {\n        let err = new BackEndError();\n        let errorMessage = '';\n        err = error.error;\n\n        // @ts-ignore\n        errorMessage = errorMessage.concat(err.errors);\n\n        this.openSnackBar(errorMessage, \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subject, Subscription, throwError} from 'rxjs';\nimport { sha256} from 'js-sha256';\nimport {catchError} from \"rxjs/operators\";\nimport {Account} from \"../models/account\";\nimport {environment} from \"../../environments/environment\";\n\n\nconst baseUrl=environment.url;\nconst AUTH_API = baseUrl+'/auth/';\nconst USER_API = baseUrl+'/auth/user/';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    constructor(private http: HttpClient) {\n\n    }\n\n\n    public error$: Subject<string> = new Subject<string>()\n\n    login(email: string, password: string): Observable<any> {\n\n            password = sha256(password)\n            return this.http.post(AUTH_API + 'login', {\n                email,\n                password\n            }, httpOptions).pipe(\n                catchError(this.handleError.bind(this))\n            );\n    }\n\n   getAccount() : Observable<Account>{\n       return  this.http.post<Account>(USER_API,httpOptions);\n    }\n\n    private handleError(error: HttpErrorResponse)\n    {\n        if (error.status === 401 || error.status === 403)\n        {\n            this.error$.next('Wrong password or email!')\n        }\n\n        return throwError(error)\n    }\n}\n","import {Component, OnInit,} from '@angular/core';\nimport {ApartmentSubBill} from \"../../../models/apartment-sub-bill\";\nimport {ApartmentSubBillService} from \"../../../services/apartment-sub-bill.service\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\n\nclass single {\n    name?: String;\n    value?: Number;\n}\n\n@Component({\n    selector: 'app-apartment-sub-bill-dashboard',\n    templateUrl: './apartment-sub-bill-dashboard.component.html',\n    styleUrls: ['./apartment-sub-bill-dashboard.component.scss']\n})\nexport class ApartmentSubBillDashboardComponent implements OnInit {\n\n    subbills: ApartmentSubBill[] = [];\n    balance: number = 0;\n\n// options\n    gradient: boolean = true;\n    showLegend: boolean = true;\n    showLabels: boolean = true;\n    isDoughnut: boolean = false;\n    legendPosition: string = 'right';\n    maxChars = 30;\n    title = \"Balance\";\n    single: any[];\n    view: any[] = [1000, 320];\n    loading: boolean = false;\n\n    constructor(public subbillsSevice: ApartmentSubBillService, public token: TokenStorageService) {\n    }\n\n    onResize(event) {\n        if (event.target.innerWidth > 1000) {\n            this.view = [1000, 320];\n        } else if (event.target.innerWidth < 1000 && event.target.innerWidth > 700) {\n            this.view = [700, 310];\n            this.maxChars = 15;\n        } else {\n            this.view = [500, 220];\n            this.maxChars = 10;\n        }\n        console.log(event.target.innerWidth);\n    }\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.subbillsSevice.getApartmentSubBillList().subscribe(\n            data => {\n                this.subbills = data\n                var j;\n                var single: single[] = [];\n                for (j in this.subbills) {\n                    single[j] = {name: this.subbills[j].communalUtility.name, value: this.subbills[j].balance};\n                    if (single[j].value == 0) single[j].value = 0.0000001\n                    this.balance = this.balance + this.subbills[j].balance;\n                }\n                this.loading = false;\n                Object.assign(this, {single});\n\n            });\n\n    }\n\n    onSelect(data): void {\n        console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n    }\n\n    onActivate(data): void {\n        console.log('Activate', JSON.parse(JSON.stringify(data)));\n    }\n\n    onDeactivate(data): void {\n        console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n    }\n\n}\n","<div class=\"container\" style=\"margin-left:-60px \">\n    <ngx-charts-pie-chart\n            (window:resize)=\"onResize($event)\"\n            [view]=\"view\"\n            [results]=\"single\"\n            [gradient]=\"gradient\"\n            [legendPosition]=\"legendPosition\"\n            [labels]=\"showLabels\"\n            [doughnut]=\"isDoughnut\"\n            [legend]=\"showLegend\"\n            [scrollLeft]=\"true\"\n            [legendTitle]=\"title+' '+balance\"\n            [maxLabelLength]=\"maxChars\"\n            (select)=\"onSelect($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n    >\n    </ngx-charts-pie-chart>\n</div>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>","import {Injectable} from '@angular/core';\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/pdf',\n      responseType: 'blob',\n      Accept: 'application/pdf',\n        observe: 'response'\n    })\n  };\n\n    private managerSpendingByDateCommName = 'http://localhost:8888/make-report/manager-spending/by-date-comm-name';\n    private managerSpendingByDate = 'http://localhost:8888/make-report/manager-spending/by-date';\n    private apartmentDeptReport = 'http://localhost:8888/make-report/apartment/dept-report';\n    private managerDeptManagerBill = 'http://localhost:8888/make-report/manager/dept-manager-bill';\n\n\n    constructor(private http: HttpClient,\n                private _snackBar: MatSnackBar) {\n    }\n\n    makeManagerSpendingByDateCommName(start: string, end: string, communalUtility: string): Observable<Blob> {\n        return this.http.get(this.managerSpendingByDateCommName, {\n            responseType: 'blob', params: {\n                start,\n                end,\n                communalUtility\n            }\n        }).pipe(\n            catchError((err) => {\n                console.log(err)\n                console.error(err.message);\n                this.openSnackBar('Data not found', 'OK')\n                return throwError(err);    //Rethrow it back to component\n            })\n        );\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n\n    makeManagerSpendingByDate(start: string, end: string): Observable<Blob> {\n        return this.http.get(this.managerSpendingByDate, {\n            responseType: 'blob', params: {\n                start,\n                end\n            }\n        }).pipe(\n            catchError((err) => {\n                console.log(err)\n                console.error(err.message);\n                this.openSnackBar('Data not found', 'OK')\n                return throwError(err);    //Rethrow it back to component\n            })\n        );\n    }\n\n  makeDeptManagerBill(communalUtility: string): Observable<Blob> {\n      return this.http.get(this.managerDeptManagerBill, {\n          responseType: 'blob', params: {\n              communalUtility\n          }\n      }).pipe(\n          catchError((err) => {\n              console.log(err)\n              console.error(err.message);\n              this.openSnackBar('Data not found', 'OK')\n              return throwError(err);    //Rethrow it back to component\n          })\n      );\n  }\n\n  makeApartmentDebtReport(accountId: string, communalUtility: string): Observable<Blob> {\n      return this.http.get(this.apartmentDeptReport, {\n          responseType: 'blob', params: {\n              communalUtility,\n              accountId\n          }\n      }).pipe(\n          catchError((err) => {\n              console.log(err)\n              console.error(err.message);\n              this.openSnackBar('Data not found', 'OK')\n              return throwError(err);    //Rethrow it back to component\n          })\n      );\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApartmentRequestToManager} from \"../../models/apartment-request-to-manager\";\nimport {RequestToManagerService} from \"../../services/request-to-manager.service\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {Apartment} from \"../../models/apartment\";\nimport {ApartmentInfoService} from \"../../services/apartment-info.service\";\nimport {ThemePalette} from \"@angular/material/core\";\nimport {ProgressSpinnerMode} from \"@angular/material/progress-spinner\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ManagerService} from \"../../services/manager.service\";\nimport {Account} from \"../../models/account\";\n\n@Component({\n    selector: 'app-request',\n    templateUrl: './request.component.html',\n    styleUrls: ['./request.component.scss']\n})\nexport class RequestComponent implements OnInit {\n\n    request: ApartmentRequestToManager = new ApartmentRequestToManager();\n    apartment?: Apartment = new Apartment();\n    isSent = false;\n    color: ThemePalette = 'primary';\n    mode: ProgressSpinnerMode = 'determinate';\n    value = 0;\n    manager: Account=new Account();\n    formGroup: FormGroup = new FormBuilder().group({\n        'requestText': ['', [Validators.required, Validators.minLength(1)]]\n    });\n\n    constructor(private service: RequestToManagerService, private apartmentService: ApartmentInfoService, private router: Router,\n                private _snackBar: MatSnackBar, public tokenStorage: TokenStorageService,\n                private managerService: ManagerService) {\n        managerService.getManagerInfo().subscribe(\n            data => this.manager = data)\n    }\n\n    ngOnInit(): void {\n        this.apartmentService.getApartmentByAccountId(this.tokenStorage.getAccountId())\n            .subscribe(\n                data => {\n                    this.apartment = data;\n                }\n            );\n    }\n\n    sendRequest() {\n        if (this.formGroup.valid && this.request.text.trim().length > 0) {\n            this.mode = \"indeterminate\";\n            this.request.apartmentId = this.tokenStorage.getAccountId();\n            this.service.sendRequest(this.request).subscribe(\n                data => {\n                    this.openSnackBar('Request has been sent', '');\n                    this.isSent = true;\n                    this.mode = \"determinate\";\n                    this.value = 100;\n                    this.request.text = ' ';\n                });\n        } else this.openSnackBar(\"Text can not be empty\", \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n}\n","<mat-toolbar class=\"mat-toolbar col-12\">\n    <mat-card-title class=\"title-center  col-11\">Request to manager</mat-card-title>\n</mat-toolbar>\n<div class=\"background\">\n    <div class=\"container\">\n        <div class=\"screen\">\n\n            <div class=\"screen-body\">\n                <div class=\"screen-body-item left col-3\">\n                    <div class=\"app-title\">\n                        <span>CONTACT</span>\n                        <p></p>\n                        <span>MANAGER</span>\n                    </div>\n\n                    <mat-spinner class=\"mat-spinner\" [mode]='mode'></mat-spinner>\n                </div>\n                <div class=\"screen-body-item col-9\">\n                    <div class=\"app-form\">\n                        <form [formGroup]=\"formGroup\">\n                            <div class=\"app-form-group message\">\n                                <mat-form-field class=\"form-field \">\n                                    <mat-label>Leave a request message</mat-label>\n                                    <textarea [(ngModel)]=\"request.text\" #message maxlength=\"500\" minlength=\"1\"\n                                              formControlName=\"requestText\"\n                                              matInput placeholder=\"Ex. It makes me feel...\" required></textarea>\n                                    <mat-hint align=\"end\">{{message.value.length}} / 500</mat-hint>\n                                    <mat-error\n                                            *ngIf=\"formGroup.controls['requestText'].invalid\">\n                                        Text is requires\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"app-form-group buttons\">\n\n                                <button routerLink=\"/home\" class=\"app-form-button\">CANCEL</button>\n                                <button (click)=\"sendRequest()\" class=\"app-form-button\">SEND</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {ManagerOperation} from \"../models/manager-operation\";\nimport {Observable, Subject, throwError} from \"rxjs\";\nimport {HttpClient, HttpErrorResponse, HttpParams} from \"@angular/common/http\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {ManagerSubBill} from \"../models/manager-sub-bill\";\nimport {CommunalUtility} from \"../models/communal-utility\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerOperationService {\n\n  constructor(private http: HttpClient) { }\n    private baseUrl = 'http://localhost:8888/manager-operation-spending/get-by-date/';\n    private urlManagerOperation = 'http://localhost:8888/manager-sub-bill/get-manager-sub-bill-info';\n    private urlCreateManagerOperation = 'http://localhost:8888/manager-operation-spending/';\n    private urlUpdateManagerOperation='http://localhost:8888/manager-operation-spending/';\n    private urlFilterByDateAndCommunalUtility='http://localhost:8888/manager-operation-spending/get-by-date-comm-util/';\n    private urlFilterByCommunalUtility='http://localhost:8888/manager-operation-spending/get-by-comm-util/';\n    private urlGetAllCommUtility='http://localhost:8888/communal-utilities/comm-util';\n\n\n    public error$: Subject<string> = new Subject<string>()\n    public success$: Subject<string> = new Subject<string>()\n\n  getAllByDate(startDate: String, endDate: String): Observable<ManagerOperation[]> {\n\n      // @ts-ignore\n      let params = new HttpParams().set(\"start\",startDate).set(\"end\", endDate); //Create new HttpParams\n        console.log(params);\n      return this.http.get(this.baseUrl,{params:params})\n        .pipe(map((response: {[key: string]: any}) => {\n            console.log(response)\n          return Object\n              .keys(response)\n              .map(key => ({\n                ...response[key],\n                createdAt: new Date(response[key].createdAt)\n              }))\n        }))\n  }\n\n  getAllManagerSubBill(): Observable<ManagerSubBill[]>\n  {\n      return this.http.get<ManagerSubBill[]>(this.urlManagerOperation);\n  }\n\n  getAllCommunalUtility(): Observable<CommunalUtility[]>\n  {\n      return this.http.get<CommunalUtility[]>(this.urlGetAllCommUtility);\n  }\n\n  makeSpending(managerSpending:ManagerOperation)\n  {\n      return this.http.post<ManagerOperation>(this.urlCreateManagerOperation, managerSpending).pipe(\n          catchError(this.handleErrorBalance.bind(this)),\n      );\n  }\n\n  updateSpending(managerOperation:ManagerOperation)\n  {\n     return this.http.put<ManagerOperation>(this.urlUpdateManagerOperation,managerOperation).pipe(\n          catchError(this.handleErrorBalance.bind(this))\n      );\n  }\n\n\n  handleSuccess(result)\n  {\n      console.log(result)\n      if (result.statusCode == 200)\n      {\n          this.success$.next(\"Manager spending was added\")\n      }\n  }\n\n\n\n    private handleErrorBalance(error: HttpErrorResponse)\n    {\n        console.log(error)\n        if (error.error.errorCode == 8092)\n        {\n            this.error$.next('Not enough money')\n        }\n\n        return throwError(error)\n    }\n\n    filterByDateAndCommunalUtility(communalUtility:CommunalUtility[],start,end)\n    {\n\n        let params = this.getParams(communalUtility).set(\"start\",start).set(\"end\", end);\n        console.log(params)\n        return this.http.get(this.urlFilterByDateAndCommunalUtility,{params:params})\n            .pipe(map((response: {[key: string]: any}) => {\n\n                return Object\n                    .keys(response)\n                    .map(key => ({\n                        ...response[key],\n                        createdAt: new Date(response[key].createdAt)\n                    }))\n\n            }))\n    }\n\n    filterByCommunalUtility(communalUtility:CommunalUtility[])\n    {\n        let params = this.getParams(communalUtility);\n        console.log(params)\n        return this.http.get(this.urlFilterByCommunalUtility,{params:params})\n            .pipe(map((response: {[key: string]: any}) => {\n                return Object\n                    .keys(response)\n                    .map(key => ({\n                        ...response[key],\n                        createdAt: new Date(response[key].createdAt)\n                    }))\n            }))\n    }\n\n    private getParams(query) {\n        let params: HttpParams = new HttpParams();\n        for (const key of Object.keys(query)) {\n            if (query[key]) {\n                if (query[key] instanceof Array) {\n                    query[key].forEach((item) => {\n                        params = params.append(`${key.toString()}`, item);\n                    });\n                } else {\n                    params = params.append(key.toString(), query[key]);\n                }\n            }\n        }\n        return params;\n    }\n\n\n}\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {ApartmentSubBill} from \"../../../models/apartment-sub-bill\";\r\nimport {Apartment} from \"../../../models/apartment\";\r\nimport {ApartmentSubBillService} from \"../../../services/apartment-sub-bill.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-apartment-sub-bill-show',\r\n    templateUrl: './apartment-sub-bill-show.component.html',\r\n    styleUrls: ['./apartment-sub-bill-show.component.css']\r\n})\r\nexport class ApartmentSubBillShowComponent implements OnInit {\r\n    currentApartmentSubBill: ApartmentSubBill;\r\n\r\n    constructor(private apartmentSubBillService: ApartmentSubBillService,\r\n                private route: ActivatedRoute,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getApartmentSubBill(this.route.snapshot.params.id);\r\n    }\r\n\r\n    getApartmentSubBill(id: number): void{\r\n        this.apartmentSubBillService.getApartmentSubBill(id)\r\n            .subscribe(\r\n                data => {\r\n                    this.currentApartmentSubBill = data;\r\n                    console.log(data);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    redirectToApartmentSubBillList(): void{\r\n        this.router.navigate([`/apartment-sub-bills`])\r\n    }\r\n\r\n}","<div id=\"back\">\r\n    <mat-card id=\"card\">\r\n        <div *ngIf=\"currentApartmentSubBill\">\r\n            <h2>\r\n                {{ currentApartmentSubBill.communalUtility.name}}\r\n            </h2>\r\n            <h3>\r\n                Calculation method: {{ currentApartmentSubBill.communalUtility.calculationMethod.toString()}}\r\n            </h3>\r\n            <div id=\"row\">\r\n                <div id=\"money_names\">\r\n                    <p>\r\n                        Debt:\r\n                    </p>\r\n                    <p>\r\n                        Balance:\r\n                    </p>\r\n                </div>\r\n                <div id=\"money\">\r\n                    <p>\r\n                        {{currentApartmentSubBill.debt}}\r\n                    </p>\r\n                    <p>\r\n                        {{currentApartmentSubBill.balance}}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <mat-button-toggle\r\n                id=\"button\"\r\n                (click)=\"redirectToApartmentSubBillList()\"\r\n        >\r\n            Back\r\n        </mat-button-toggle>\r\n    </mat-card>\r\n</div>\r\n","import {Injectable} from '@angular/core';\nimport {BackEndError} from \"../models/back-end-error\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ApartmentRequestToManager} from \"../models/apartment-request-to-manager\";\nimport {catchError} from \"rxjs/operators\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RequestToManagerService {\n    private baseURL = 'https://housemanagement.herokuapp.com/createApartmentRequestToManager';\n    err: BackEndError | undefined;\n\n    constructor(private httpClient: HttpClient,private _snackBar: MatSnackBar) {\n    }\n\n\n    sendRequest(request: ApartmentRequestToManager): Observable<Object> {\n        return this.httpClient.post(this.baseURL, request).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n\n    handleError(error: HttpErrorResponse) {\n        let err = new BackEndError();\n        let errorMessage = '';\n        err = error.error;\n\n        // @ts-ignore\n        errorMessage = errorMessage.concat(err.errors);\n\n        this.openSnackBar(errorMessage, \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config\n        );\n    }\n}\n","import {ApartmentInfoService} from \"../../../services/apartment-info.service\";\nimport {Apartment} from \"../../../models/apartment\";\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n    selector: 'app-apartment-registration',\n    templateUrl: './apartment-registration.component.html',\n    styleUrls: ['./apartment-registration.component.scss']\n})\nexport class ApartmentRegistrationComponent implements OnInit {\n    apartment: Apartment = {\n        apartmentNumber: 1,\n        squareMetres: 15,\n        floor: 1,\n        peopleCount: 0,\n        accountId: 0,\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n        role: 'OWNER'\n    };\n\n    hide = true;\n    isCreated = false;\n    apartmentSave?: Apartment;\n    loading: boolean = false;\n\n    firstFormGroup: FormGroup = new FormBuilder().group({\n        'emailCtrl': ['', [Validators.required, Validators.pattern(\"^[0-9a-zA-Z]+([0-9a-zA-Z]*[-._+])*[0-9a-zA-Z]+@[0-9a-zA-Z]+([-.][0-9a-zA-Z]+)*([0-9a-zA-Z]*[.])[a-zA-Z]{2,6}$\")]],\n        'firstNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n        'lastNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n        'phoneNumberCtrl': ['', [Validators.required, Validators.pattern(\"\\\\+(9[976]\\\\d|8[987530]\\\\d|6[987]\\\\d|5[90]\\\\d|42\\\\d|3[875]\\\\d|2[98654321]\\\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\\\d{1,13}$\")]],\n        'passwordCtrl': ['', [Validators.required, Validators.minLength(8), Validators.maxLength(256)]],\n    });\n    secondFormGroup: FormGroup = new FormBuilder().group({\n        'apartmentNumberCtrl': ['', [Validators.required, Validators.min(1)]],\n        'floorCtrl': ['', [Validators.required, Validators.min(1)]],\n        'squareMetresCtrl': ['', [Validators.required, Validators.min(15)]],\n        'peopleCountCtrl': ['', [Validators.required, Validators.min(0)]]\n    });\n    public mask = ['+', /[1-9]/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\n\n\n    constructor(private apartmentInfoService: ApartmentInfoService,\n                private router: Router, private _snackBar: MatSnackBar) {\n    }\n\n    saveApartment() {\n        this.loading=true;\n        this.apartmentSave = Object.assign({}, this.apartment)\n        this.apartmentInfoService.createApartment(this.apartmentSave).subscribe(\n            data => {\n                this.openSnackBar('Apartment is created', 'OK');\n                this.isCreated = true;\n                this.loading=false;\n                this.goToApartmentsList();\n\n            },\n            error => {\n                console.log(error)\n            }\n        );\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n\n    goToApartmentsList() {\n        this.router.navigate(['/apartments']);\n    }\n\n    onSubmit() {\n        this.saveApartment();\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","\n<mat-toolbar class=\"mat-toolbar \">\n    <mat-card-title class=\"title-center\">New Apartment</mat-card-title>\n</mat-toolbar>\n<div class=\"container\">\n    <mat-card>\n        <form (ngSubmit)=\"onSubmit()\">\n            <div class=\"card-body\" *ngIf=\"!isCreated\">\n                <div method=\"POST\">\n\n                    <mat-horizontal-stepper [linear]=true #stepper>\n                        <mat-step [stepControl]=\"firstFormGroup\" errorMessage=\"Name is required.\">\n                            <form [formGroup]=\"firstFormGroup\">\n                                <ng-template matStepLabel>Owner Info</ng-template>\n                                <div class=\"row row-cols-2\">\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">First name</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"firstNameCtrl\" type=\"text\"\n                                                       name=\"first_name\"\n                                                       [(ngModel)]=\"apartment.firstName\" required>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('pattern')\">\n                                                    Please enter a valid first name\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('required')\">\n                                                    First Name is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Last name</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"lastNameCtrl\" type=\"text\"\n                                                       [(ngModel)]=\"apartment.lastName\" required>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('pattern')\">\n                                                    Please enter a valid last name\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                                    Last name is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row row-cols-2\">\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Email address</div>\n                                        <div class=\"value\">\n                                            <div class=\"input-group\">\n                                                <mat-form-field appearance=\"standard\">\n                                                    <input matInput formControlName=\"emailCtrl\"\n                                                           type=\"email\"\n                                                           name=\"email\"\n                                                           placeholder=\"example@email.com\"\n                                                           [(ngModel)]=\"apartment.email\" required>\n                                                    <mat-error\n                                                            *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('pattern')\">\n                                                        Please enter a valid email address\n                                                    </mat-error>\n                                                    <mat-error\n                                                            *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('required')\">\n                                                        Email is required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Phone number</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <mat-label>Input your phone number</mat-label>\n                                                <input matInput formControlName=\"phoneNumberCtrl\" type=\"tel\"\n                                                       [(ngModel)]=\"apartment.phoneNumber\"\n                                                       [textMask]=\"{mask: mask, guide: true}\" required>\n                                                <mat-hint>Format: +XXXYYTTEEQQQ</mat-hint>\n                                                <mat-icon matSuffix>phone</mat-icon>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['phoneNumberCtrl'].hasError('length')\">\n                                                    Please enter a valid phone number\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                                    Phone number is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"form-row\">\n                                    <div class=\"name\">Password</div>\n                                    <div class=\"value\">\n                                        <div class=\"input-group\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput [type]=\"hide ? 'password' : 'text'\"\n                                                       placeholder=\"\" formControlName=\"passwordCtrl\"\n                                                       [(ngModel)]=\"apartment.password\" required>\n                                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                                        [attr.aria-label]=\"'Hide password'\"\n                                                        [attr.aria-pressed]=\"hide\">\n                                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                                </button>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['passwordCtrl'].hasError('minlength')\">\n                                                    Password length should be more than 8 chars\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"firstFormGroup.controls['passwordCtrl'].hasError('required')\">\n                                                    Password is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"right\">\n                                    <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                                </div>\n                            </form>\n                        </mat-step>\n                        <mat-step [stepControl]=\"secondFormGroup\" label=\"Apartment info\">\n                            <form [formGroup]=\"secondFormGroup\">\n                                <ng-template matStepLabel>Apartment Info</ng-template>\n                                <div class=\"row row-cols-2\">\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Apartment number</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"apartmentNumberCtrl\" type=\"number\"\n                                                       name=\"apartment_number\" min=\"0\"\n                                                       [(ngModel)]=\"apartment.apartmentNumber\" required>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['apartmentNumberCtrl'].hasError('min')\">\n                                                    Apartment number value is too low\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['apartmentNumberCtrl'].hasError('required')\">\n                                                    ApartmentNumber is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Floor</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"floorCtrl\" type=\"number\"\n                                                       name=\"floor\" placeholder=\"\" min=\"0\"\n                                                       [(ngModel)]=\"apartment.floor\" required>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['floorCtrl'].hasError('min')\">\n                                                    Floor value is too low\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['floorCtrl'].hasError('required')\">\n                                                    Floor is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row row-cols-2\">\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">Square meters</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"squareMetresCtrl\" type=\"number\"\n                                                       name=\"square_meters\" placeholder=\"\" min=\"15\"\n                                                       [(ngModel)]=\"apartment.squareMetres\">\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['squareMetresCtrl'].hasError('min')\">\n                                                    Square metres value is too low\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['squareMetresCtrl'].hasError('required')\">\n                                                    Square metres is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <div class=\"name\">People count</div>\n                                        <div class=\"value\">\n                                            <mat-form-field appearance=\"standard\">\n                                                <input matInput formControlName=\"peopleCountCtrl\" type=\"number\"\n                                                       name=\"people_count\" placeholder=\"\" min=\"0\"\n                                                       [(ngModel)]=\"apartment.peopleCount\">\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['peopleCountCtrl'].hasError('min')\">\n                                                    People count is too low\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"secondFormGroup.controls['peopleCountCtrl'].hasError('required')\">\n                                                    People Count is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <button mat-stroked-button color=\"primary\" matStepperPrevious>Back</button>\n                                    <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                                </div>\n                            </form>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Done</ng-template>\n                            <button mat-stroked-button color=\"primary\" matStepperPrevious>Back</button>\n                            <button mat-raised-button color=\"primary\" type=\"submit\">Create</button>\n                        </mat-step>\n                    </mat-horizontal-stepper>\n\n                </div>\n            </div>\n        </form>\n        <div class=\"alert alert-success\" *ngIf=\"isCreated\">\n            New Apartment created\n        </div>\n    </mat-card>\n</div>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Announcement} from \"../../../models/announcement\";\nimport {AnnouncementService} from \"../../../services/announcement.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {VotingOptionService} from \"../../../services/voting-option.service\";\nimport {VotingOption} from \"../../../models/voting-option\";\nimport {Comment} from \"../../../models/comment\";\nimport {CommentService} from \"../../../services/comment.service\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {HouseVotingService} from \"../../../services/house-voting.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n    selector: 'app-announcements-show',\n    templateUrl: './announcements-show.component.html',\n    styleUrls: ['./announcements-show.component.css']\n})\nexport class AnnouncementsShowComponent implements OnInit {\n    announcement: Announcement = {\n        title: '',\n        body: '',\n        isOpened: false,\n        comments: []\n    };\n\n    selectedVotingOptionId?:number;\n    currentVotingOption?:VotingOption;\n\n    form: FormGroup;\n    commentsListOpen = false;\n    commentsCreationOpen = false;\n    comment: Comment = {\n        body: ''\n    }\n\n    constructor(public dialog: MatDialog,\n                private announcementService: AnnouncementService,\n                private houseVotingService: HouseVotingService,\n                private votingOptionService: VotingOptionService,\n                private commentService: CommentService,\n                private tokenStorageService: TokenStorageService,\n                private route: ActivatedRoute,\n                private router: Router,\n                private _snackBar: MatSnackBar) {\n    }\n\n    ngOnInit(): void {\n        this.getAnnouncement(this.route.snapshot.params.id);\n        if (this.getRole() =='OWNER')\n            this.getVotingOption(this.route.snapshot.params.id);\n\n        this.form = new FormGroup({\n            body: new FormControl('',[\n                Validators.required,\n                this.noWhitespaceValidator,\n                Validators.minLength(1),\n                Validators.maxLength(1000)\n            ]),\n        })\n    }\n\n    public noWhitespaceValidator(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n\n    getRole(): any {\n        return this.tokenStorageService.getRole();\n    }\n\n    getAccountId(): any {\n        return this.tokenStorageService.getAccountId();\n    }\n\n    getAnnouncement(id: number): void {\n        this.announcementService.getAnnouncement(id)\n            .subscribe(\n                data => {\n                    this.announcement = data;\n                    if (this.announcement.houseVoting != null\n                        && this.announcement.houseVoting.votingOptions?.length != 0) {\n                        let sum = this.getSumVotes();\n                        var votingOptions = this.announcement.houseVoting.votingOptions;\n\n                        if(votingOptions != null) {\n                            for(let i = 0; i < votingOptions.length;++i) {\n                                // @ts-ignore\n                                votingOptions[i][\"percent\"] = votingOptions[i].count/sum*100;\n                            }\n                        }\n\n                    }\n                    console.log(data);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    getSumVotes(): number {\n        var sum = 0;\n\n        // @ts-ignore\n        for (let votingOption of this.announcement.houseVoting.votingOptions) {\n            // @ts-ignore\n            sum += votingOption.count;\n        }\n        return sum;\n    }\n\n    getVotingOption(id: number): void {\n        this.votingOptionService.getVotingOption(id)\n            .subscribe(\n                data => {\n                    this.currentVotingOption = data;\n                    console.log(data);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    addVote() {\n        if (this.selectedVotingOptionId != null && this.announcement.announcementId != null) {\n            this.votingOptionService.addVote(\n                    this.announcement.announcementId,\n                    this.selectedVotingOptionId)\n                .subscribe(\n                data => {\n                    this.currentVotingOption = data;\n                    console.log(data);\n\n                    this.getAnnouncement(this.route.snapshot.params.id);\n                    if (this.getRole() =='OWNER')\n                        this.getVotingOption(this.route.snapshot.params.id);\n                },\n                error => {\n                    console.log(error);\n                });\n        }\n    }\n\n    deleteAnnouncement(announcementId: number): void {\n        this.announcementService.deleteAnnouncement(announcementId)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.router.navigate([\"/announcements\"]);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    deleteHouseVoting(announcementId: number) {\n        this.houseVotingService.deleteHouseVoting(announcementId)\n            .subscribe(\n            response => {\n                console.log(response);\n                window.location.reload();\n            },\n            error => {\n                console.log(error);\n            });\n    }\n\n    saveComment() {\n        let currentComment = this.comment;\n        currentComment['announcementId'] = this.announcement.announcementId;\n\n        this.commentService.createComment(currentComment)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.openSnackBar('Comment is created', 'OK');\n                    this.getAnnouncement(this.announcement.announcementId);\n                    this.commentsCreationOpen = false;\n                    this.comment.body = '';\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    deleteComment(commentId: number) {\n        this.commentService.deleteComment(commentId)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.getAnnouncement(this.announcement.announcementId);\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    openDialog(comment: Comment): void {\n        const dialogRef = this.dialog.open(CommentEditDialog, {\n            data: comment,\n            minWidth: 700\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getAnnouncement(this.announcement.announcementId);\n        });\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n}\n\n@Component({\n    selector: 'comment-edit-dialog',\n    templateUrl: 'comment-edit-dialog.html',\n})\n\nexport class CommentEditDialog {\n    form: FormGroup;\n\n    constructor(private commentService: CommentService,\n                public dialogRef: MatDialogRef<CommentEditDialog>,\n                @Inject(MAT_DIALOG_DATA) public data: Comment,\n                private _snackBar: MatSnackBar) {\n        this.form = new FormGroup({\n            body: new FormControl('',[\n                Validators.required,\n                this.noWhitespaceValidator,\n                Validators.minLength(1),\n                Validators.maxLength(1000)\n            ]),\n        })\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    public noWhitespaceValidator(control: FormControl) {\n        const isWhitespace = (control.value || '').trim().length === 0;\n        const isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true };\n    }\n\n    updateComment() {\n        this.commentService.updateComment(this.data)\n            .subscribe(\n                response => {\n                    console.log(response);\n                    this.openSnackBar('Comment is updated', 'OK');\n                    this.dialogRef.close();\n                },\n                error => {\n                    console.log(error);\n                });\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n}","<div class=\"p-3\" fxFlex=\"60\" fxFlexOffset=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <mat-card>\n        <div *ngIf=\"announcement\">\n            <mat-card-header>\n                <mat-card-title>{{ announcement.title }}</mat-card-title>\n                <mat-card-subtitle>Created at {{ announcement.createdAt | date:'yyyy-MM-dd, HH:mm ' }}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <pre><p>{{ announcement.body }}</p></pre>\n                <div *ngIf=\"announcement.houseVoting\" class=\"p-2\">\n                    <mat-card *ngIf=\"announcement.houseVoting\" class=\"p-2\">\n                        <mat-card-header class=\"mat-primary\">\n                            <h3>{{announcement.houseVoting.title}}</h3>\n                        </mat-card-header>\n                        <mat-card-content>\n                            <div *ngIf=\"getRole() == 'MANAGER' || (getRole() == 'OWNER' && currentVotingOption)\">\n                                <div *ngFor=\"let votingOption of announcement.houseVoting.votingOptions; let i = index\">\n                                    <p>{{votingOption.name}}: {{ votingOption.count}} votes</p>\n                                    <mat-progress-bar class=\"col-md-6\" mode=\"determinate\" value=\"{{votingOption.percent}}\"></mat-progress-bar>\n                                </div>\n\n                            </div>\n                            <div *ngIf=\"getRole() == 'OWNER' && !currentVotingOption\">\n                                <mat-radio-group labelPosition=\"after\" [(ngModel)]=\"selectedVotingOptionId\">\n                                    <mat-list>\n                                        <mat-list-item *ngFor=\"let votingOption of announcement.houseVoting.votingOptions; let i = index\">\n                                            <mat-radio-button value=\"{{votingOption.votingOptionId}}\">\n                                                {{votingOption.name}}\n                                            </mat-radio-button>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </mat-radio-group>\n                                <button mat-flat-button [disabled]=\"selectedVotingOptionId==null\" color=\"primary\" (click)=\"addVote()\">Vote</button>\n                            </div>\n                            <div *ngIf=\"getRole() == 'MANAGER'\" align=\"end\">\n                                <button mat-stroked-button color=\"warn\"\n                                        (click)=\"deleteHouseVoting(announcement.announcementId)\">\n                                    Delete Voting\n                                </button>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </mat-card-content>\n            <mat-card-actions *ngIf=\"getRole() == 'MANAGER'\" class=\"p-2\" align=\"end\">\n                <button mat-flat-button color=\"accent\"\n                        routerLink=\"update\">Edit</button>\n                <button mat-stroked-button color=\"warn\"\n                        (click)=\"deleteAnnouncement(announcement.announcementId)\">\n                    Delete\n                </button>\n            </mat-card-actions>\n        </div>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"announcement.isOpened\"\n                         (opened)=\"commentsListOpen = true\"\n                         (closed)=\"commentsListOpen = false\"\n                        class=\"mt-3\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                Comments\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <button mat-icon-button (click)=\"commentsCreationOpen = !commentsCreationOpen\"\n                color=\"primary\"\n                *ngIf=\"getRole() == 'OWNER'\">\n            <mat-icon>add</mat-icon> Add comment\n        </button>\n\n        <div *ngIf=\"commentsCreationOpen\">\n            <form fxLayoutAlign=\"center start\" fxLayout=\"column\" class=\"p-2\"\n                  [formGroup]=\"form\"\n                  (ngSubmit)=\"saveComment()\">\n\n                <mat-form-field class=\"col-md-6\">\n                    <mat-label>Body</mat-label>\n                    <textarea matInput\n                              formControlName=\"body\"\n                              rows=\"4\"\n                              [(ngModel)]=\"comment.body\">\n                    </textarea>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"form.get('body').invalid && form.get('body').touched\">\n                    <small *ngIf=\"form.get('body').errors.minlength\">Body length must not be empty<br></small>\n                    <small *ngIf=\"form.get('body').errors.whitespace\">Body must be filled<br></small>\n                    <small *ngIf=\"form.get('body').errors.maxlength\">Body length must be less than 1000<br></small>\n                </mat-error>\n                <button [disabled]=\"form.invalid\"  mat-flat-button color=\"primary\" type=\"submit\">Submit</button>\n            </form>\n            <mat-divider></mat-divider>\n        </div>\n\n\n        <div *ngFor=\"let comment of announcement.comments; let i = index\">\n            <div class=\"p-2\">\n                <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <mat-card-title>Apt. {{ comment.apartment?.apartmentNumber  }}: {{comment.apartment?.firstName}} {{comment.apartment?.lastName}}</mat-card-title>\n                    <mat-card-subtitle>Created at {{ comment.createdAt | date:'yyyy-MM-dd, HH:mm '  }}</mat-card-subtitle>\n\n                    <div  fxLayout=\"row\" fxLayoutAlign=\"end start\"\n                          *ngIf=\"getRole() == 'OWNER' && getAccountId() == comment.apartment.accountId\">\n                        <button mat-icon-button (click)=\"openDialog(comment)\"\n                                color=\"accent\"\n                        >\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"error\" (click)=\"deleteComment(comment.commentId)\">\n                            <mat-icon>delete_outline</mat-icon>\n                        </button>\n                    </div>\n\n\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        {{ comment.body }}\n                    </p>\n                </mat-card-content>\n                <mat-divider></mat-divider>\n            </div>\n\n        </div>\n    </mat-expansion-panel>\n</div>\n","<div>\r\n    <h1 mat-dialog-title>Edit comment</h1>\r\n    <form fxLayoutAlign=\"center\" fxLayout=\"column\" class=\"p-2\"\r\n          [formGroup]=\"form\"\r\n          (ngSubmit)=\"updateComment()\">\r\n        <div mat-dialog-content>\r\n\r\n            <mat-form-field  class=\"col-md-12\">\r\n                <mat-label>Body</mat-label>\r\n                <textarea matInput\r\n                          formControlName=\"body\"\r\n                          rows=\"4\"\r\n                          [(ngModel)]=\"data.body\">\r\n                    </textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-error *ngIf=\"form.get('body').invalid && form.get('body').touched\">\r\n                <small *ngIf=\"form.get('body').errors.minlength\">Body length must not be empty<br></small>\r\n                <small *ngIf=\"form.get('body').errors.whitespace\">Body must be filled<br></small>\r\n                <small *ngIf=\"form.get('body').errors.maxlength\">Body length must be less than 1000<br></small>\r\n            </mat-error>\r\n\r\n        </div>\r\n        <div mat-dialog-actions>\r\n            <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n            <button [disabled]=\"form.invalid\" mat-flat-button color=\"primary\" type=\"submit\">Submit</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ManagerService} from \"../../services/manager.service\";\nimport {ManagerOperation} from \"../../models/manager-operation\";\nimport {Manager} from \"../../models/manager\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ManagerBill} from \"../../models/manager-bill\";\n\n// @ts-ignore\n@Component({\n  selector: 'app-manager-info-page',\n  templateUrl: './manager-info-page.component.html',\n  styleUrls: ['./manager-info-page.component.scss']\n})\nexport class ManagerInfoPageComponent implements OnInit {\n\n  manager: Manager = {\n    managerBill: new ManagerBill(),\n    accountId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: null,\n    phoneNumber: '',\n    role: 'OWNER'\n  };\n\n  constructor(private managerService:ManagerService, private router: Router)  { }\n\n  ngOnInit(): void {\n\n    this.managerService.getManagerInfo().subscribe(data =>\n    {\n      console.log(data)\n      this.manager = data;\n    });\n\n  }\n\n  updateManager() {\n    this.router.navigate(['/manager-info/update'])\n  }\n\n}\n","\n\n<div class=\"container-fluid p-5\">\n    <div class=\"container\">\n    <mat-toolbar class=\"mat-toolbar\">\n        <mat-card-title class=\"title-center  col-11\">Manager Page</mat-card-title>\n        <div class=\"col-1\">\n            <button mat-icon-button class=\"edit-btn float-right\"\n                    (click)=\"updateManager()\">\n                <mat-icon>settings</mat-icon>\n            </button>\n        </div>\n    </mat-toolbar>\n\n    <div class=\"main-body\">\n\n        <div class=\"row gutters-sm\">\n            <div class=\"col-md-4 mb-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\" matBadgeColor=\"primary\">\n                        <div class=\"d-flex flex-column align-items-center text-center\">\n                                <img src=\"../../../assets/png/img_110816.png\" alt=\"Apt\" class=\"rounded-circle\" width=\"300\">\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"card mb-3\">\n                    <div class=\"card-body\">\n                        <h2>Manager</h2>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">First Name</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{manager.firstName}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Last Name</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{manager.lastName}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Email</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{manager.email}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Phone</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{manager.phoneNumber}}\n                            </div>\n                        </div>\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <h6 class=\"mb-0\">Card Number</h6>\n                            </div>\n                            <div class=\"col-sm-9 text-secondary\">\n                                {{manager.managerBill.cardNumber}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n    </div>\n</div>","import {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ManagerOperation} from \"../models/manager-operation\";\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {ApartmentOperation} from \"../models/apartment-operation\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {CommunalUtility} from \"../models/communal-utility\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApartmentOperationService {\r\n\r\n    private getApartOperationURL = 'http://localhost:8888/apartment-operation/';\r\n\r\n\r\n    constructor(private httpClient: HttpClient, private _snackBar: MatSnackBar) {\r\n    }\r\n\r\n    getAllByAccountId(id:Number) : Observable<ApartmentOperation[]>{\r\n\r\n        return this.httpClient.get<ApartmentOperation[]>(this.getApartOperationURL + id);\r\n\r\n    }\r\n\r\n}","import {Component, OnInit} from \"@angular/core\";\r\nimport {ApartmentSubBillService} from \"../../../services/apartment-sub-bill.service\";\r\nimport {ApartmentSubBill} from \"../../../models/apartment-sub-bill\";\r\nimport {ApartmentOperation} from \"../../../models/apartment-operation\";\r\nimport {Router} from \"@angular/router\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n    selector: 'app-apartment-sub-bill-payment',\r\n    templateUrl: './apartment-sub-bill-payment.component.html',\r\n    styleUrls: ['./apartment-sub-bill-payment.component.css']\r\n})\r\nexport class ApartmentSubBillPaymentComponent implements OnInit {\r\n    apartmentSubBills?: ApartmentSubBill[];\r\n    sums: number[] = [];\r\n    displayedColumns: string[] = ['name', 'balance', 'sum'];\r\n\r\n    constructor(private apartmentSubBillService: ApartmentSubBillService,\r\n                private router: Router, private _snackBar: MatSnackBar,\r\n                private dialog: MatDialog) {\r\n    }\r\n\r\n    public cardMask = [/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/];\r\n    public dateMask = [/[0-3]/,/(?<!3)[0-9]/, '/', /[0-1]/, /[0-9]/];\r\n    public cvvMask = [/\\d/,/\\d/,/\\d/];\r\n\r\n    ngOnInit() {\r\n        this.retrieveApartmentSubBills();\r\n    }\r\n\r\n    retrieveApartmentSubBills(): void {\r\n        this.apartmentSubBillService.getApartmentSubBillList()\r\n            .subscribe(\r\n                data => {\r\n                    this.apartmentSubBills = data;\r\n                    console.log(data);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    openSnackBar(message: string, action: string) {\r\n        this._snackBar.open(message, action, {\r\n            duration: 10000,\r\n        });\r\n    }\r\n\r\n    pay(): void {\r\n        let apartmentOperations: ApartmentOperation[] = [];\r\n        for (let i = 0; i < this.apartmentSubBills.length; i++) {\r\n            if(this.sums[i] != undefined) {\r\n                apartmentOperations.push({sum: this.sums[i], apartmentSubBill: this.apartmentSubBills[i]})\r\n            } else {\r\n                apartmentOperations.push({sum: 0, apartmentSubBill: this.apartmentSubBills[i]})\r\n            }\r\n        }\r\n        this.apartmentSubBillService.updateApartmentSubBillsByApartmentOperation(apartmentOperations)\r\n            .subscribe(\r\n                response => {\r\n                    this.openSnackBar('Payment successful', '');\r\n                    this.redirectToApartmentSubBillList();\r\n                },\r\n                error => {\r\n                    this.openSnackBar(error.error.message, '');\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    redirectToApartmentSubBillList(): void {\r\n        this.router.navigate([`/apartment-sub-bills`])\r\n    }\r\n\r\n}","<body>\r\n<div id=\"back\">\r\n    <mat-card id=\"card\">\r\n        <h2>\r\n            Enter Card:\r\n        </h2>\r\n        <div id=\"card_number\">\r\n            <input matInput type=\"text\"\r\n                   placeholder=\"____-____-____-____\"\r\n            [textMask]=\"{mask:cardMask}\">\r\n        </div>\r\n        <div id=\"datecvv\">\r\n            <input id=\"date\" matInput type=\"text\"\r\n                   placeholder=\"__/__\"\r\n                   [textMask]=\"{mask:dateMask}\">\r\n            <input id=\"cvv\" matInput type=\"text\"\r\n                   placeholder=\"___\"\r\n                   required\r\n                [textMask]=\"{mask:cvvMask}\">\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <h2>\r\n            Enter sums to pay:\r\n        </h2>\r\n        <div id=\"lists\">\r\n            <mat-list>\r\n                <mat-list-item\r\n                        *ngFor=\"let apartmentSubBill of\r\n                                apartmentSubBills\r\n                        let i = index\"\r\n                >\r\n                    {{apartmentSubBill.communalUtility.name}}\r\n                </mat-list-item>\r\n            </mat-list>\r\n            <mat-list id = \"inputlist\">\r\n                <mat-list-item\r\n                        *ngFor=\"let apartmentSubBill of\r\n                                    apartmentSubBills\r\n                            let i = index;\">\r\n                    <input type=\"number\"\r\n                           value=\"0\"\r\n                           placeholder=\"0\"\r\n                           [(ngModel)]=\"sums[i]\"\r\n                            id = {{apartmentSubBill.communalUtility.name}}\r\n                    />\r\n                </mat-list-item>\r\n            </mat-list>\r\n        </div>\r\n        <mat-button-toggle id=\"pay\"\r\n        (click)=\"pay()\">\r\n            Pay\r\n        </mat-button-toggle>\r\n        <mat-button-toggle\r\n                id=\"backbtn\"\r\n                (click)=\"redirectToApartmentSubBillList()\">\r\n            Back\r\n        </mat-button-toggle>\r\n    </mat-card>\r\n</div>\r\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url : 'https://housemanagement.herokuapp.com/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\nimport {AnnouncementsListComponent} from './components/announcements/announcements-list/announcements-list.component';\nimport {AnnouncementsCreateComponent} from './components/announcements/announcements-create/announcements-create.component';\nimport {\n    AnnouncementsShowComponent,\n    CommentEditDialog\n} from \"./components/announcements/announcements-show/announcements-show.component\";\nimport {AnnouncementsUpdateComponent} from \"./components/announcements/announcements-update/announcements-update.component\";\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {LoginComponent} from './components/login/login.component';\nimport {authInterceptorProviders} from './helpers/auth.interceptor';\nimport {JWT_OPTIONS, JwtHelperService} from \"@auth0/angular-jwt\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {ManagerOperationListComponent} from './components/manager-operation/manager-operation-list/manager-operation-list.component';\nimport {ManagerOperationCreateComponent} from './components/manager-operation/manager-operation-create/manager-operation-create.component';\nimport {AuthGuard} from \"./services/guard/auth.guard\";\nimport {OwnerGuard} from \"./services/guard/owner.guard\";\nimport {ManagerGuard} from \"./services/guard/manager.guard\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {ApartmentsComponent} from \"./components/apartments/apartments-list/apartments.component\";\nimport {ApartmentRegistrationComponent} from \"./components/apartments/apartment-registration/apartment-registration.component\";\nimport {ApartmentInfoEditComponent} from \"./components/apartments/manager-apartment-info-edit/apartment-info-edit.component\";\nimport {NavComponent} from \"./components/nav/nav.component\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {NotFoundComponent} from \"./components/not-found/not-found.component\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatStepperModule} from \"@angular/material/stepper\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {LayoutModule} from \"@angular/cdk/layout\";\nimport {TextMaskModule} from \"angular2-text-mask\";\nimport {ApartmentSubBillListComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-list/apartment-sub-bill-list.component\";\nimport {ApartmentSubBillShowComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-show/apartment-sub-bill-show.component\";\nimport {ApartmentInfoPageComponent} from './components/apartments/apartment-info-page/apartment-info-page.component';\nimport {CommunalUtilitiesShowComponent} from \"./components/communal-utilities/communal-utilities-show/communal-utilities-show.component\";\nimport {CommunalUtilitiesCreateComponent} from \"./components/communal-utilities/communal-utilities-create/communal-utilities-create.component\";\nimport {CommunalUtilitiesListComponent} from \"./components/communal-utilities/communal-utilities-list/communal-utilities-list.component\";\nimport {ApartmentSubBillTransferCreateComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-transfer-create/apartment-sub-bill-transfer-create.component\";\nimport {ApartmentSubBillPaymentComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-payment/apartment-sub-bill-payment.component\";\nimport {IsAuthGuard} from \"./services/guard/isauth.guard\";\nimport {ReportCreateComponent} from './components/report-create/report-create.component';\nimport {DatePipe} from \"@angular/common\";\nimport {RequestComponent} from './components/request/request.component';\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {ManagerInfoPageComponent} from \"./components/manager-info-page/manager-info-page.component\";\nimport {JobTriggerComponent} from './components/job-trigger/job-trigger.component';\nimport {AnnouncementDashboardComponent} from './components/announcements/announcement-dashboard/announcement-dashboard.component';\nimport {ManagerOperationUpdateComponent} from \"./components/manager-operation/manager-operation-update/manager-operation-update.component\";\nimport {ApartmentSubBillDashboardComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-sub-bill-dashboard.component\";\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {ManagerInfoUpdateComponent} from \"./components/manager/manager-info-update.component\";\n\nimport {DashboardManagerBillDebtComponent} from \"./components/dashboard-manager-bill-debt/dashboard-manager-bill-debt.component\";\nimport {ManagerSubBillsDashboardComponent} from './components/manager-sub-bills/manager-sub-bills-dashboard/manager-sub-bills-dashboard.component';\nimport {CarouselModule} from \"ngx-bootstrap/carousel\";\nimport {ApartmentOperationListComponent} from './components/apartment-operation-list/apartment-operation-list.component';\nimport {ApartmentDebtComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-dashboard/apartment-debt/apartment-debt.component\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {ManagerSubBillListComponent} from \"./components/manager-sub-bills/manager-sub-bills-list/manager-sub-bills-list.component\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CommunalUtilitiesShowComponent,\n        CommunalUtilitiesCreateComponent,\n        CommunalUtilitiesListComponent,\n        AnnouncementsListComponent,\n        AnnouncementsShowComponent,\n        AnnouncementsCreateComponent,\n        AnnouncementsUpdateComponent,\n        ApartmentOperationListComponent,\n        CommentEditDialog,\n        LoginComponent,\n        ManagerOperationListComponent,\n        ManagerOperationCreateComponent,\n        ManagerInfoPageComponent,\n        ApartmentsComponent,\n        ApartmentRegistrationComponent,\n        ApartmentInfoEditComponent,\n        NavComponent,\n        HomeComponent,\n        NotFoundComponent,\n        ReportCreateComponent,\n        ApartmentInfoPageComponent,\n        NotFoundComponent,\n        ApartmentSubBillListComponent,\n        ApartmentSubBillShowComponent,\n        ApartmentSubBillTransferCreateComponent,\n        ApartmentSubBillPaymentComponent,\n        ApartmentInfoPageComponent,\n        ApartmentInfoPageComponent,\n        RequestComponent,\n        JobTriggerComponent,\n        AnnouncementDashboardComponent,\n        ManagerOperationUpdateComponent,\n        ApartmentSubBillDashboardComponent,\n        ManagerInfoUpdateComponent,\n        ApartmentDebtComponent,\n        ManagerSubBillListComponent,\n        DashboardManagerBillDebtComponent,\n        ManagerSubBillsDashboardComponent\n    ],\n    imports: [\n        MatProgressSpinnerModule,\n        MatAutocompleteModule,\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FlexLayoutModule,\n        MatCardModule,\n        HttpClientModule,\n        FormsModule,\n        MatButtonModule,\n        MatListModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatProgressBarModule,\n        MatPaginatorModule,\n        MatTableModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatDialogModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatStepperModule,\n        TextMaskModule,\n        LayoutModule,\n        MatGridListModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatBadgeModule,\n        MatMenuModule,\n        MatBadgeModule,\n        NgxChartsModule,\n        CarouselModule,\n        MatSortModule\n    ],\n    providers: [authInterceptorProviders,{ provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n        JwtHelperService, AuthGuard,OwnerGuard,ManagerGuard,IsAuthGuard,DatePipe],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AnnouncementsListComponent} from \"./components/announcements/announcements-list/announcements-list.component\";\nimport {AnnouncementsCreateComponent} from \"./components/announcements/announcements-create/announcements-create.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {AnnouncementsShowComponent} from \"./components/announcements/announcements-show/announcements-show.component\";\nimport {ManagerOperationListComponent} from \"./components/manager-operation/manager-operation-list/manager-operation-list.component\";\nimport {AuthGuard} from \"./services/guard/auth.guard\";\nimport {AnnouncementsUpdateComponent} from \"./components/announcements/announcements-update/announcements-update.component\";\nimport {ManagerGuard} from \"./services/guard/manager.guard\";\nimport {ApartmentInfoEditComponent} from \"./components/apartments/manager-apartment-info-edit/apartment-info-edit.component\";\nimport {ApartmentRegistrationComponent} from \"./components/apartments/apartment-registration/apartment-registration.component\";\nimport {ApartmentsComponent} from \"./components/apartments/apartments-list/apartments.component\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {NotFoundComponent} from \"./components/not-found/not-found.component\";\nimport {ApartmentInfoPageComponent} from \"./components/apartments/apartment-info-page/apartment-info-page.component\";\nimport {CommunalUtilitiesCreateComponent} from \"./components/communal-utilities/communal-utilities-create/communal-utilities-create.component\";\nimport {CommunalUtilitiesListComponent} from \"./components/communal-utilities/communal-utilities-list/communal-utilities-list.component\";\nimport {CommunalUtilitiesShowComponent} from \"./components/communal-utilities/communal-utilities-show/communal-utilities-show.component\";\nimport {ReportCreateComponent} from \"./components/report-create/report-create.component\";\nimport {IsAuthGuard} from \"./services/guard/isauth.guard\";\nimport {ApartmentSubBillListComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-list/apartment-sub-bill-list.component\";\nimport {ApartmentSubBillShowComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-show/apartment-sub-bill-show.component\";\nimport {ApartmentSubBillTransferCreateComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-transfer-create/apartment-sub-bill-transfer-create.component\";\nimport {ApartmentSubBillPaymentComponent} from \"./components/apartment-sub-bills/apartment-sub-bill-payment/apartment-sub-bill-payment.component\";\nimport {RequestComponent} from \"./components/request/request.component\";\nimport {JobTriggerComponent} from \"./components/job-trigger/job-trigger.component\";\nimport {ManagerInfoPageComponent} from \"./components/manager-info-page/manager-info-page.component\";\nimport {ManagerOperationCreateComponent} from \"./components/manager-operation/manager-operation-create/manager-operation-create.component\";\nimport {ApartmentOperationListComponent} from \"./components/apartment-operation-list/apartment-operation-list.component\";\nimport {ManagerInfoUpdateComponent} from \"./components/manager/manager-info-update.component\";\n\n\nconst routes: Routes = [\n    {path: '', redirectTo: '/login', pathMatch: 'full', canActivate: [IsAuthGuard]},\n    {path: 'apartments', component: ApartmentsComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'login', component: LoginComponent, canActivate: [IsAuthGuard]},\n    {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n    {path: 'apartments/create', component: ApartmentRegistrationComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'apartments/update/:id', component: ApartmentInfoEditComponent, canActivate: [AuthGuard]},\n    {path: 'manager-operation', component: ManagerOperationListComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'announcements', component: AnnouncementsListComponent, canActivate: [AuthGuard]},\n    {path: 'announcements/create', component: AnnouncementsCreateComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'announcements/:id', component: AnnouncementsShowComponent, canActivate: [AuthGuard]},\n    {path: 'announcements/:id/update', component: AnnouncementsUpdateComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'manager-info', component: ManagerInfoPageComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'apartment-operation', component: ApartmentOperationListComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n    {path: 'apartments/create', component: ApartmentRegistrationComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'apartments/update/:number', component: ApartmentInfoEditComponent, canActivate: [AuthGuard]},\n    {path: 'manager-operation', component: ManagerOperationListComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'manager-operation/create', component: ManagerOperationCreateComponent, canActivate: [AuthGuard]},\n    {path: 'manager-info/update', component: ManagerInfoUpdateComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'apartment-sub-bills', component: ApartmentSubBillListComponent, canActivate: [AuthGuard]},\n    {path: 'apartment-sub-bills/:id', component: ApartmentSubBillShowComponent, canActivate: [AuthGuard]},\n    {\n        path: 'apartment-sub-bill-transfer-create',\n        component: ApartmentSubBillTransferCreateComponent,\n        canActivate: [AuthGuard]\n    },\n    {path: 'apartment-sub-bill-payment', component: ApartmentSubBillPaymentComponent, canActivate: [AuthGuard]},\n    {\n        path: 'communal-utilities/create',\n        component: CommunalUtilitiesCreateComponent,\n        canActivate: [AuthGuard, ManagerGuard]\n    },\n    {path: 'communal-utilities', component: CommunalUtilitiesListComponent, canActivate: [AuthGuard]},\n    {path: 'communal-utilities/:id', component: CommunalUtilitiesShowComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: 'apartment', component: ApartmentInfoPageComponent},\n    {path: 'request-to-manager', component: RequestComponent},\n    {path: 'reports', component: ReportCreateComponent, canActivate: [AuthGuard]},\n    {path: 'triggers', component: JobTriggerComponent, canActivate: [AuthGuard, ManagerGuard]},\n    {path: '**', component: NotFoundComponent},\n];\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Announcement} from \"../models/announcement\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material/snack-bar\";\nimport {BackEndError} from \"../models/back-end-error\";\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AnnouncementService {\n    private baseUrl = 'http://localhost:8888/announcements';\n    err: BackEndError | undefined;\n\n    constructor(private http: HttpClient, private _snackBar: MatSnackBar) {}\n\n    getAnnouncementList(searchText: string = null,\n                        startDate: string = null,\n                        endDate: string = null,\n                        hasVoting: string = null): Observable<Announcement[]> {\n        let params = new HttpParams();\n        if (searchText != null) {\n            params = params.set(\"searchText\",searchText);\n        }\n\n        if (startDate != null && endDate != null) {\n            params = params.set(\"startDate\",startDate);\n            params = params.set(\"endDate\",endDate);\n        }\n\n        if (hasVoting != null && hasVoting) {\n            params = params.set(\"hasVoting\",hasVoting);\n        }\n\n        return this.http.get<Announcement[]>(`${this.baseUrl}/`, {params}).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    getAnnouncement(id: number): Observable<Announcement> {\n        return this.http.get(`${this.baseUrl}/${id}`).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    createAnnouncement(announcement: Announcement): Observable<any> {\n        return this.http.post(this.baseUrl, announcement).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    updateAnnouncement(id: number, value: Announcement): Observable<any> {\n        return this.http.put(`${this.baseUrl}/${id}`, value).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    deleteAnnouncement(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`).pipe(\n            catchError(this.handleError.bind(this))\n        );\n    }\n\n    handleError(error: HttpErrorResponse) {\n        let err = new BackEndError();\n        let errorMessage = '';\n        err = error.error;\n\n        // @ts-ignore\n        errorMessage = errorMessage.concat(err.errors);\n\n        this.openSnackBar(errorMessage, \"OK\");\n    }\n\n    openSnackBar(message: string, action: string) {\n        const config = new MatSnackBarConfig();\n        config.panelClass = ['snack-bar-error'];\n        config.duration = 10000;\n        this._snackBar.open(message, action, config);\n    }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\r\nimport {Observable} from 'rxjs';\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class ManagerGuard implements CanActivate {\r\n\r\n\r\n    constructor(\r\n        private tokenService: TokenStorageService,\r\n        private router: Router,\r\n\r\n    ){}\r\n\r\n    canActivate(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this.tokenService.getRole() == 'MANAGER')\r\n        {\r\n            return true;\r\n        }\r\n        this.tokenService.signOut()\r\n        this.router.navigate(['/login'], {\r\n            queryParams: {\r\n                loginAgain: true\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ApartmentSubBill} from \"../models/apartment-sub-bill\";\r\nimport {ApartmentOperation} from \"../models/apartment-operation\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApartmentSubBillService{\r\n    private baseUrl = \"http://localhost:8888/apartment-sub-bills\";\r\n    private transferUrl = \"http://localhost:8888/apartment-sub-bill-transfer\";\r\n    private paymentUrl = \"http://localhost:8888/apartment-sub-bill-payment\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getApartmentSubBillList(): Observable<ApartmentSubBill[]>{\r\n        return this.http.get<ApartmentSubBill[]>(this.baseUrl);\r\n    }\r\n\r\n    getApartmentSubBill(id: number): Observable<ApartmentSubBill>{\r\n        return this.http.get<ApartmentSubBill>(`${this.baseUrl}/${id}`);\r\n    }\r\n\r\n    createApartmentSubBillTransfer(params: string[]): Observable<any>{\r\n        return this.http.post(this.transferUrl, params);\r\n    }\r\n\r\n    updateApartmentSubBillsByApartmentOperation(apartmentOperations: ApartmentOperation[]): Observable<any>{\r\n        return this.http.post(this.paymentUrl, apartmentOperations);\r\n    }\r\n}","import {Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Manager} from \"../../models/manager\";\nimport {ManagerService} from \"../../services/manager.service\";\nimport {ManagerBill} from \"../../models/manager-bill\";\n\n@Component({\n  selector: 'app-manager-info-update',\n  templateUrl: './manager-info-update.component.html',\n  styleUrls: ['./manager-info-update.component.scss']\n})\nexport class ManagerInfoUpdateComponent implements OnInit {\n  constructor(private service: ManagerService, private route: ActivatedRoute, private router: Router,\n              private _snackBar: MatSnackBar, public tokenStorage: TokenStorageService) {\n  }\n\n  manager: Manager = {\n    managerBill: new ManagerBill(),\n    accountId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: null,\n    phoneNumber: '',\n    role: 'OWNER'\n  };\n  managerToSave?: Manager;\n  hide = true;\n\n  firstFormGroup: FormGroup = new FormBuilder().group({\n    'emailCtrl': ['', [Validators.required, Validators.email]],\n    'firstNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n    'lastNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n    'phoneNumberCtrl': ['', [Validators.required]],\n    'passwordCtrl': ['', [Validators.minLength(8), Validators.maxLength(256)]],\n    'cardNumberCtrl': ['', [Validators.minLength(16), Validators.maxLength(16)]],\n  });\n\n  public phoneMask = ['+', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\n  public cardMask = [/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/,'-',/\\d/, /\\d/, /\\d/, /\\d/];\n\n\n  updateManager() {\n    this.managerToSave = Object.assign({}, this.manager)\n    this.service.updateManager(this.managerToSave).subscribe(\n        data => {\n          this.openSnackBar('Manager is updated', '');\n          this.goToManagerInfo();\n        });\n    if (this.manager.password != null) {\n      this.service.updateManagerPassword(this.managerToSave);\n    }\n\n    if (this.manager.managerBill.cardNumber != null) {\n      this.service.updateManagerBill(this.managerToSave.managerBill);\n    }\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n  goToManagerInfo() {\n    this.router.navigate(['/manager-info']);\n  }\n\n\n  ngOnInit(): void {\n    this.service.getManagerInfo().subscribe(data => {\n      this.manager = data;\n    }, error => console.log(error));\n  };\n\n}\n","<div class=\"container\">\n\n    <mat-toolbar class=\"mat-toolbar \">\n        <mat-card-title class=\"title-center\">Update Apartment</mat-card-title>\n    </mat-toolbar>\n\n    <mat-card>\n        <div method=\"PUT\">\n            <form (ngSubmit)=\"updateManager()\" class=\"col-12\">\n                <div class=\"card-body center-block\" [formGroup]=\"firstFormGroup\">\n                    <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"row row-cols-2 \">\n                        <div class=\"form-row\">\n                            <div class=\"name\">First name</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <input matInput\n                                           formControlName=\"firstNameCtrl\" type=\"text\"\n                                           name=\"first_name\"\n                                           [(ngModel)]=\"manager.firstName\">\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('pattern')\">\n                                        Please enter a valid first name\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('required')\">\n                                        First Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"name\">Last name</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <input matInput formControlName=\"lastNameCtrl\" type=\"text\"\n                                           [(ngModel)]=\"manager.lastName\">\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('pattern')\">\n                                        Last name is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                        Please enter a valid last name\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row row-cols-2\">\n                        <div class=\"form-row\">\n                            <div class=\"name\">Email address</div>\n                            <div class=\"value\">\n                                <div class=\"input-group\">\n                                    <mat-form-field appearance=\"standard\">\n                                        <input matInput formControlName=\"emailCtrl\"\n                                               type=\"email\"\n                                               name=\"email\"\n                                               placeholder=\"example@email.com\"\n                                               [(ngModel)]=\"manager.email\">\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('pattern')\">\n                                            Please enter a valid email address\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('required')\">\n                                            Email is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"form-row\">\n                            <div class=\"name\">Phone number</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <mat-label>Input your phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumberCtrl\" type=\"tel\"\n                                           [(ngModel)]=\"manager.phoneNumber\"\n                                           [textMask]=\"{mask: phoneMask, guide: true}\">\n                                    <mat-hint>Format: +XX (YYY) XX-XX-XXX</mat-hint>\n                                    <mat-icon matSuffix>phone</mat-icon>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['phoneNumberCtrl'].hasError('length')\">\n                                        Please enter a valid phone number\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                        Phone number is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row row-cols-2\">\n                        <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"form-row\">\n                            <div class=\"name\">Card number</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <mat-label>Input your card number</mat-label>\n                                    <input matInput formControlName=\"cardNumberCtrl\" type=\"text\"\n                                           [(ngModel)]=\"manager.managerBill.cardNumber\"\n                                           [textMask]=\"{mask: cardMask}\">\n                                    <mat-hint>Format: XXXX-XXXX-XXXX-XXXX</mat-hint>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['cardNumberCtrl'].hasError('min')\">\n                                        Card number is too low\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['cardNumberCtrl'].hasError('required')\">\n                                        Curd number is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"name\">Password</div>\n                            <div class=\"value\">\n                                <div class=\"input-group\">\n                                    <mat-form-field appearance=\"standard\">\n                                        <input matInput [type]=\"hide ? 'password' : 'text'\"\n                                               placeholder=\"\" formControlName=\"passwordCtrl\"\n                                               [(ngModel)]=\"manager.password\">\n                                        <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                                [attr.aria-label]=\"'Hide password'\"\n                                                [attr.aria-pressed]=\"hide\">\n                                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                        </button>\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['passwordCtrl'].hasError('minlength')\">\n                                            Password length should be more than 8 chars\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ManagerSubBill} from \"../../../models/manager-sub-bill\";\nimport {Data, Router} from \"@angular/router\";\nimport {ManagerSubBillService} from \"../../../services/manager-sub-bill.service\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {CommunalUtility} from \"../../../models/communal-utility\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\nimport {Sort} from '@angular/material/sort';\n\n\nexport interface Dessert {\n    idSort: number;\n    nameSort: string;\n    statusSort: string;\n    calculationSort: string;\n    balanceSort: number;\n}\n\nfunction compare(a: number | string | Date, b: number | string | Date, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n@Component({\n  selector: 'app-manager-sub-bills-list',\n  templateUrl: './manager-sub-bills-list.component.html',\n  styleUrls: ['./manager-sub-bills-list.component.scss']\n})\n\n\nexport class ManagerSubBillListComponent implements OnInit {\n\n  managerSubBills?: ManagerSubBill[] = [];\n  datasource: MatTableDataSource<ManagerSubBill>\n  communal: CommunalUtility[];\n  sortedData: ManagerSubBill[];\n  displayedColumns: string[] = ['id', 'name', 'status', 'deadline', 'calculation', 'balance'];\n\n  constructor(private managerSubBillService: ManagerSubBillService,\n              private tokenStorageService: TokenStorageService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.getAllManagerSubBills();\n  }\n\n    applyFilterDisabled() {\n        this.datasource.filter = 'Enabled';\n    }\n\n    applyFilterAll() {\n        this.datasource.filter = '';\n    }\n\n  getAllManagerSubBills() {\n    this.managerSubBillService.getAllManagerSubBills()\n        .subscribe(data => {\n              console.log(data)\n              this.managerSubBills = data;\n              this.datasource = new MatTableDataSource(data)\n            },\n            error => {\n              console.log(error)\n            },\n        );\n  }\n\n  redirectToManagerSubBillShow(id: number): void{\n    this.router.navigate([`/manager-sub-bill/${id}`])\n  }\n\n    getRole(): any {\n        return this.tokenStorageService.getRole();\n    }\n\n    sortData(sort: Sort) {\n        const data = this.managerSubBills.slice();\n        if (!sort.active || sort.direction === '') {\n            this.sortedData = data;\n            return;\n        }\n\n        this.sortedData = data.sort((a, b) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'idSort': return compare(a.subBillId, b.subBillId, isAsc);\n                case 'statusSort': return compare(a.communalUtility.status, b.communalUtility.status, isAsc);\n                case 'balanceSort': return compare(a.balance, b.balance, isAsc);\n                case 'deadlineSort': return compare(a.communalUtility.deadline, b.communalUtility.deadline, isAsc);\n                case 'nameSort': return compare(a.communalUtility.name, a.communalUtility.name, isAsc);\n                case 'calculationSort': return compare(a.communalUtility.calculationMethod, a.communalUtility.calculationMethod, isAsc);\n                default: return 0;\n            }\n\n        });\n    }\n\n}\n","<div class=\"container\">\n    <mat-toolbar>\n        <span>Manager SubBills</span>\n        <span class=\"example-spacer\"></span>\n        <span class=\"example-spacer\"></span>\n\n        <div class=\"ml-auto p-2\">\n\n                <button (click)=\"applyFilterAll()\" color=\"primary\" mat-raised-button>Show all</button>\n            <span class=\"example-spacer\"></span>\n                <button (click)=\"applyFilterDisabled()\" mat-raised-button>Show enabled</button>\n\n        </div>\n    </mat-toolbar>\n\n\n\n    <mat-card class=\"d-flex justify-content-center\">\n    <table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"datasource\" class=\"mat-elevation-z8\" mat-table text-align=\"center\">\n        <ng-container matColumnDef=\"name\">\n            <th *matHeaderCellDef mat-sort-header=\"nameSort\" > Name</th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell>\n                <div (click)=\"redirectToManagerSubBillShow(managerSubBill.subBillId)\" class=\"center\" fxFlexFill\n                     matRipple>\n                    {{managerSubBill.communalUtility.name}}\n                </div>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-sort-header=\"idSort\"> № </th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell> {{managerSubBill.subBillId}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n\n        <ng-container matColumnDef=\"status\">\n            <th *matHeaderCellDef mat-sort-header=\"statusSort\"> Status</th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell> {{managerSubBill.communalUtility.status}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n\n        <ng-container matColumnDef=\"calculation\">\n            <th *matHeaderCellDef mat-sort-header=\"calculationSort\"> Calculation method</th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell> {{managerSubBill.communalUtility.calculationMethod.toString()}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"deadline\">\n            <th *matHeaderCellDef mat-sort-header=\"deadlineSort\"> Deadline</th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell> {{managerSubBill.communalUtility.deadline}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"balance\">\n            <th *matHeaderCellDef mat-sort-header=\"balanceSort\"> Balance</th>\n            <td *matCellDef=\"let managerSubBill\" mat-cell> {{managerSubBill.balance}} </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n</mat-card>\n\n</div>\n<!--\n<div id=\"back\">\n    <div class=\"container\">\n        <div class=\"row row-cols-md-2 row-cols-sm-1 row-cols-lg-2 row-cols-xs-1  g-4\">\n            <div *ngFor=\"let managerSubBill of managerSubBills\" class=\"card col-4\">\n                <mat-card class=\"example-card\">\n                    <mat-card-header>\n                        <mat-card-title>{{managerSubBill.communalUtility.name}}</mat-card-title>\n                        <mat-card-title class=\"money\"> Balance: {{managerSubBill.balance}}</mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <hr>\n                        <ul class=\"ul\">\n                            <li>Calculation method: {{managerSubBill.communalUtility.calculationMethod.toString()}}</li>\n                            <li>Deadline: {{managerSubBill.communalUtility.deadline}}</li>\n                            <li>Status: {{managerSubBill.communalUtility.status}}</li>\n                        </ul>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>-->\n","import {Component, OnInit} from '@angular/core';\nimport {Apartment} from \"../../../models/apartment\";\nimport {ApartmentInfoService} from \"../../../services/apartment-info.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {TokenStorageService} from \"../../../services/token-storage.service\";\n\n@Component({\n    selector: 'app-manager-apartment-info-edit',\n    templateUrl: './apartment-info-edit.component.html',\n    styleUrls: ['./apartment-info-edit.component.scss']\n})\nexport class ApartmentInfoEditComponent implements OnInit {\n    apartment: Apartment = {\n        apartmentNumber: 1,\n        squareMetres: 15,\n        floor: 1,\n        peopleCount: 0,\n        accountId: 0,\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: null,\n        phoneNumber: '',\n        role: 'OWNER'\n    };\n    apartmentToSave?: Apartment;\n    hide = true;\n    loading: boolean = false;\n\n    constructor(private service: ApartmentInfoService, private route: ActivatedRoute, private router: Router,\n                private _snackBar: MatSnackBar, public tokenStorage: TokenStorageService) {\n    }\n\n    firstFormGroup: FormGroup = new FormBuilder().group({\n        'emailCtrl': ['', [Validators.required, Validators.email]],\n        'firstNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n        'lastNameCtrl': ['', [Validators.required, Validators.pattern(\"^[а-яА-Яa-zA-Z]+(([',. -][а-яА-Яa-zA-Z ])?[а-яА-Яa-zA-Z]*)*$\")]],\n        'phoneNumberCtrl': ['', [Validators.required]],\n        'passwordCtrl': ['', [Validators.minLength(8), Validators.maxLength(256)]],\n        'peopleCountCtrl': ['', [Validators.required, Validators.min(0)]]\n    });\n\n    public mask = ['+', /[1-9]/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\n\n    updateApartment() {\n        this.loading = true;\n        this.apartmentToSave = Object.assign({}, this.apartment)\n        this.service.updateApartment(this.apartmentToSave).subscribe(\n            data => {\n                this.openSnackBar('Apartment is updated', '');\n                this.loading = false;\n                this.goToApartmentsList();\n            });\n        if (this.apartment.password != null) {\n            this.service.updatePassword(this.apartmentToSave);\n\n        }\n\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 10000,\n        });\n    }\n\n    goToApartmentsList() {\n        this.router.navigate(['/apartments']);\n    }\n\n\n    ngOnInit(): void {\n        this.loading=true;\n        this.service.getApartmentByAccountId(this.route.snapshot.params['id']).subscribe(data => {\n            this.apartment = data;\n            this.loading=false;\n        }, error => console.log(error));\n    };\n\n}\n","\n<mat-toolbar class=\"mat-toolbar \">\n    <mat-card-title class=\"title-center\">Update Apartment</mat-card-title>\n</mat-toolbar>\n<div class=\"container\">\n\n    <mat-card>\n        <div method=\"PUT\">\n            <form (ngSubmit)=\"updateApartment()\" class=\"col-12\">\n                <div class=\"card-body center-block\" [formGroup]=\"firstFormGroup\">\n                    <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"row row-cols-2 \">\n                        <div class=\"form-row\">\n                            <div class=\"name\">First name</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <input matInput\n                                           formControlName=\"firstNameCtrl\" type=\"text\"\n                                           name=\"first_name\"\n                                           [(ngModel)]=\"apartment.firstName\">\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('pattern')\">\n                                        Please enter a valid first name\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['firstNameCtrl'].hasError('required')\">\n                                        First Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"name\">Last name</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <input matInput formControlName=\"lastNameCtrl\" type=\"text\"\n                                           [(ngModel)]=\"apartment.lastName\">\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('pattern')\">\n                                        Last name is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                        Please enter a valid last name\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row row-cols-2\">\n                        <div class=\"form-row\">\n                            <div class=\"name\">Email address</div>\n                            <div class=\"value\">\n                                <div class=\"input-group\">\n                                    <mat-form-field appearance=\"standard\">\n                                        <input matInput formControlName=\"emailCtrl\"\n                                               type=\"email\"\n                                               name=\"email\"\n                                               placeholder=\"example@email.com\"\n                                               [(ngModel)]=\"apartment.email\">\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('pattern')\">\n                                            Please enter a valid email address\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['emailCtrl'].hasError('required')\">\n                                            Email is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"form-row\">\n                            <div class=\"name\">Phone number</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <mat-label>Input your phone number</mat-label>\n                                    <input matInput formControlName=\"phoneNumberCtrl\" type=\"tel\"\n                                           [(ngModel)]=\"apartment.phoneNumber\"\n                                           [textMask]=\"{mask: mask, guide: true}\">\n                                    <mat-hint>Format: +XXXYYTTEEQQQ</mat-hint>\n                                    <mat-icon matSuffix>phone</mat-icon>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['phoneNumberCtrl'].hasError('length')\">\n                                        Please enter a valid phone number\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['lastNameCtrl'].hasError('required')\">\n                                        Phone number is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"row row-cols-2\">\n                        <div *ngIf=\"tokenStorage.getRole()=='MANAGER'\" class=\"form-row\">\n                            <div class=\"name\">People count</div>\n                            <div class=\"value\">\n                                <mat-form-field appearance=\"standard\">\n                                    <input matInput formControlName=\"peopleCountCtrl\" type=\"number\"\n                                           name=\"people_count\" placeholder=\"\"\n                                           [(ngModel)]=\"apartment.peopleCount\">\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['peopleCountCtrl'].hasError('min')\">\n                                        People count is too low\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"firstFormGroup.controls['peopleCountCtrl'].hasError('required')\">\n                                        People count is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"name\">Password</div>\n                            <div class=\"value\">\n                                <div class=\"input-group\">\n                                    <mat-form-field appearance=\"standard\">\n                                        <input matInput [type]=\"hide ? 'password' : 'text'\"\n                                               placeholder=\"\" formControlName=\"passwordCtrl\"\n                                               [(ngModel)]=\"apartment.password\">\n                                        <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                                [attr.aria-label]=\"'Hide password'\"\n                                                [attr.aria-pressed]=\"hide\">\n                                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                        </button>\n                                        <mat-error\n                                                *ngIf=\"firstFormGroup.controls['passwordCtrl'].hasError('minlength')\">\n                                            Password length should be more than 8 chars\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>\n<div *ngIf=\"loading\" style=\"  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -70px 0 0 -70px;\">\n    <mat-spinner></mat-spinner>\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}